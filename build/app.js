(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
require("./docs/scripts/app.js");
require("./docs/features/basic-configuration/view-controller.js");
require("./docs/features/basic-configuration/view.js");
require("./docs/features/changing-states/view-controller.js");
require("./docs/features/changing-states/view.js");
require("./docs/features/demo/view-controller.js");
require("./docs/features/demo/view.js");
require("./docs/features/mock/mock.js");

},{"./docs/features/basic-configuration/view-controller.js":2,"./docs/features/basic-configuration/view.js":3,"./docs/features/changing-states/view-controller.js":4,"./docs/features/changing-states/view.js":5,"./docs/features/demo/view-controller.js":6,"./docs/features/demo/view.js":7,"./docs/features/mock/mock.js":8,"./docs/scripts/app.js":10}],2:[function(require,module,exports){
'use strict';

var CheckboxDemo = require('../../scripts/app.js');

CheckboxDemo
    .Controllers
    .controller('basicConfigurationViewCtrl', function basicConfigurationCtrl($scope, mock) {
        
        var people = mock.entity('people');
    
    
        console.log('people', people.length);
    
        $scope.disabled = false;
        $scope.people = people;
        $scope.singleCheckValue = false;
    });

},{"../../scripts/app.js":10}],3:[function(require,module,exports){
'use strict';

var CheckboxDemo = require('../../scripts/app.js');

CheckboxDemo
  .App
  .config(
    function ($stateProvider) {

      var basicConfigurationView = {
        url: '/basic-configuration',
        controller: 'basicConfigurationViewCtrl',
        templateUrl: 'basic-configuration/view-partial.html'
      };

      $stateProvider
        .state('CheckboxDemo.basic-configuration', basicConfigurationView);
    });

},{"../../scripts/app.js":10}],4:[function(require,module,exports){
'use strict';

var CheckboxDemo = require('../../scripts/app.js');

CheckboxDemo
  .Controllers
  .controller('changingStatesViewCtrl', function changingStatesCtrl($scope) {



  });

},{"../../scripts/app.js":10}],5:[function(require,module,exports){
'use strict';

var CheckboxDemo = require('../../scripts/app.js');

CheckboxDemo
  .App
  .config(
    function ($stateProvider) {

      var changingStatesView = {
        url: '/changing-states',
        controller: 'changingStatesViewCtrl',
        templateUrl: 'changing-states/view-partial.html'
      };

      $stateProvider
        .state('CheckboxDemo.changing-states', changingStatesView);
    });

},{"../../scripts/app.js":10}],6:[function(require,module,exports){
'use strict';

var CheckboxDemo = require('../../scripts/app.js');

CheckboxDemo
  .Controllers
  .controller('demoViewCtrl', function demoCtrl($scope) {



  });

},{"../../scripts/app.js":10}],7:[function(require,module,exports){
'use strict';

var CheckboxDemo = require('../../scripts/app.js');

CheckboxDemo
  .App
  .config(
    function ($stateProvider) {

      var demoView = {
        url: '/demo',
        controller: 'demoViewCtrl',
        templateUrl: 'demo/view-partial.html'
      };

      $stateProvider
        .state('CheckboxDemo', demoView);
    });

},{"../../scripts/app.js":10}],8:[function(require,module,exports){
'use strict';

var CheckboxDemo = require('../../scripts/app.js');
var jsf = require('json-schema-faker');
var schemas = {
    people: require('./schemas/people')
};

CheckboxDemo
    .Services
    .service('mock', function mockList() {

      console.log(schemas)

        function mockEntity(entityName) {

            entityName = entityName || 'people';

            return jsf(schemas[entityName]);
        }

        this.entity = mockEntity;
    });

},{"../../scripts/app.js":10,"./schemas/people":9,"json-schema-faker":15}],9:[function(require,module,exports){
module.exports={

    "title": "Example People Schema",
    "type": "array",
    "minItems": 25,
    "maxItems" : 600,
    "items": {
        "id": "#person",
        "title": "Person",
        "type": "object",
        "properties": {
            "id": {
                "$ref": "#/definitions/uuid"
            },
            "email": {
                "type": "string",
                "format": "email",
                "faker": "internet.email"
            },
            "phone": {
                "type": "string",
                "format": "phone",
                "faker": "phone.phoneNumberFormat"
            },
            "name": {
                "$ref": "#/definitions/name"
            },
            "quote": {
                "type": "string",
                "faker": "hacker.phrase"
            }
        },
        "required": ["id", "email", "name"]
    },
    "definitions": {
        "uuid": {
            "type": "string",
            "faker" : "random.uuid"
        },
        "name": {
            "type": "object",
            "properties": {
                "prefix": {
                    "type": "string",
                    "faker": "name.prefix"
                },
                "first": {
                    "type": "string",
                    "faker": "name.firstName"
                },
                "last": {
                    "type": "string",
                    "faker": "name.lastName"
                }
            },
            "required": ["first", "last"]
        }
    }
}

},{}],10:[function(require,module,exports){
'use strict';
var appDependencies = [
    'ui.router',
    'TelUI',
    'CheckboxDemoDirectives',
    'CheckboxDemoControllers',
    'CheckboxDemoServices',
    'CheckboxDemoValues',
    'CheckboxDemoPartials',
];

var CheckboxDemo = {
    App: angular.module('CheckboxDemoApp', appDependencies),
    Directives: angular.module('CheckboxDemoDirectives', []),
    Controllers: angular.module('CheckboxDemoControllers', []),
    Services: angular.module('CheckboxDemoServices', []),
    Values: angular.module('CheckboxDemoValues', []),
    Partials: angular.module('CheckboxDemoPartials', []),
    Telui: angular.module('TelUI')
};

function stateChangeError(event, toState, toParams, fromState) {
    console.log('!EVENT!', event);
    console.log('!TOSTATE!', toState);
    console.log('!TOPARAMS!', toParams);
    console.log('$stateChangeError to "' + toState.name + '" from state "' + fromState.name + '"- fired when the transition begins. toState,toParams : \n', toState, toParams);
}

function stateNotfound(event, unfoundState, fromState, fromParams) {
    console.log('$stateNotFound ' + unfoundState.to + '  - fired when a state cannot be found by its name.');
    console.log(unfoundState, fromState, fromParams);
}

function debug($rootScope) {
    $rootScope.$on('$stateChangeError', stateChangeError);
    $rootScope.$on('$stateNotFound', stateNotfound);
}

function run($rootScope) {
    $rootScope.skin = $rootScope.skin || '_Blank';
    debug($rootScope);
}

CheckboxDemo
    .App
    .run(run);

module.exports = CheckboxDemo;

},{}],11:[function(require,module,exports){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('is-array')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50
Buffer.poolSize = 8192 // not used by this implementation

var rootParent = {}

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Note:
 *
 * - Implementation must support adding new properties to `Uint8Array` instances.
 *   Firefox 4-29 lacked support, fixed in Firefox 30+.
 *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *    incorrect length in some situations.
 *
 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will
 * get the Object implementation, which is slower but will work correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = (function () {
  function Foo () {}
  try {
    var buf = new ArrayBuffer(0)
    var arr = new Uint8Array(buf)
    arr.foo = function () { return 42 }
    arr.constructor = Foo
    return arr.foo() === 42 && // typed array instances can be augmented
        arr.constructor === Foo && // constructor can be set
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
})()

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

/**
 * Class: Buffer
 * =============
 *
 * The Buffer constructor returns instances of `Uint8Array` that are augmented
 * with function properties for all the node `Buffer` API functions. We use
 * `Uint8Array` so that square bracket notation works as expected -- it returns
 * a single octet.
 *
 * By augmenting the instances, we can avoid modifying the `Uint8Array`
 * prototype.
 */
function Buffer (arg) {
  if (!(this instanceof Buffer)) {
    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.
    if (arguments.length > 1) return new Buffer(arg, arguments[1])
    return new Buffer(arg)
  }

  this.length = 0
  this.parent = undefined

  // Common case.
  if (typeof arg === 'number') {
    return fromNumber(this, arg)
  }

  // Slightly less common case.
  if (typeof arg === 'string') {
    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')
  }

  // Unusual.
  return fromObject(this, arg)
}

function fromNumber (that, length) {
  that = allocate(that, length < 0 ? 0 : checked(length) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < length; i++) {
      that[i] = 0
    }
  }
  return that
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'

  // Assumption: byteLength() return value is always < kMaxLength.
  var length = byteLength(string, encoding) | 0
  that = allocate(that, length)

  that.write(string, encoding)
  return that
}

function fromObject (that, object) {
  if (Buffer.isBuffer(object)) return fromBuffer(that, object)

  if (isArray(object)) return fromArray(that, object)

  if (object == null) {
    throw new TypeError('must start with number, buffer, array or string')
  }

  if (typeof ArrayBuffer !== 'undefined' && object.buffer instanceof ArrayBuffer) {
    return fromTypedArray(that, object)
  }

  if (object.length) return fromArrayLike(that, object)

  return fromJsonObject(that, object)
}

function fromBuffer (that, buffer) {
  var length = checked(buffer.length) | 0
  that = allocate(that, length)
  buffer.copy(that, 0, 0, length)
  return that
}

function fromArray (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

// Duplicate of fromArray() to keep fromArray() monomorphic.
function fromTypedArray (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  // Truncating the elements is probably not what people expect from typed
  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior
  // of the old Buffer constructor.
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayLike (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.
// Returns a zero-length buffer for inputs that don't conform to the spec.
function fromJsonObject (that, object) {
  var array
  var length = 0

  if (object.type === 'Buffer' && isArray(object.data)) {
    array = object.data
    length = checked(array.length) | 0
  }
  that = allocate(that, length)

  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function allocate (that, length) {
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = Buffer._augment(new Uint8Array(length))
  } else {
    // Fallback: Return an object instance of the Buffer class
    that.length = length
    that._isBuffer = true
  }

  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1
  if (fromPool) that.parent = rootParent

  return that
}

function checked (length) {
  // Note: cannot use `length < kMaxLength` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (subject, encoding) {
  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)

  var buf = new Buffer(subject, encoding)
  delete buf.parent
  return buf
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  var i = 0
  var len = Math.min(x, y)
  while (i < len) {
    if (a[i] !== b[i]) break

    ++i
  }

  if (i !== len) {
    x = a[i]
    y = b[i]
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'binary':
    case 'base64':
    case 'raw':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')

  if (list.length === 0) {
    return new Buffer(0)
  } else if (list.length === 1) {
    return list[0]
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; i++) {
      length += list[i].length
    }
  }

  var buf = new Buffer(length)
  var pos = 0
  for (i = 0; i < list.length; i++) {
    var item = list[i]
    item.copy(buf, pos)
    pos += item.length
  }
  return buf
}

function byteLength (string, encoding) {
  if (typeof string !== 'string') string = '' + string

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'binary':
      // Deprecated
      case 'raw':
      case 'raws':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

// pre-set for values that may exist in the future
Buffer.prototype.length = undefined
Buffer.prototype.parent = undefined

function slowToString (encoding, start, end) {
  var loweredCase = false

  start = start | 0
  end = end === undefined || end === Infinity ? this.length : end | 0

  if (!encoding) encoding = 'utf8'
  if (start < 0) start = 0
  if (end > this.length) end = this.length
  if (end <= start) return ''

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'binary':
        return binarySlice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return 0
  return Buffer.compare(this, b)
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset) {
  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff
  else if (byteOffset < -0x80000000) byteOffset = -0x80000000
  byteOffset >>= 0

  if (this.length === 0) return -1
  if (byteOffset >= this.length) return -1

  // Negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)

  if (typeof val === 'string') {
    if (val.length === 0) return -1 // special case: looking for empty string always fails
    return String.prototype.indexOf.call(this, val, byteOffset)
  }
  if (Buffer.isBuffer(val)) {
    return arrayIndexOf(this, val, byteOffset)
  }
  if (typeof val === 'number') {
    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {
      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)
    }
    return arrayIndexOf(this, [ val ], byteOffset)
  }

  function arrayIndexOf (arr, val, byteOffset) {
    var foundIndex = -1
    for (var i = 0; byteOffset + i < arr.length; i++) {
      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex
      } else {
        foundIndex = -1
      }
    }
    return -1
  }

  throw new TypeError('val must be string, number or Buffer')
}

// `get` will be removed in Node 0.13+
Buffer.prototype.get = function get (offset) {
  console.log('.get() is deprecated. Access using array indexes instead.')
  return this.readUInt8(offset)
}

// `set` will be removed in Node 0.13+
Buffer.prototype.set = function set (v, offset) {
  console.log('.set() is deprecated. Access using array indexes instead.')
  return this.writeUInt8(v, offset)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new Error('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; i++) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) throw new Error('Invalid hex string')
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function binaryWrite (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    var swap = encoding
    encoding = offset
    offset = length | 0
    length = swap
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'binary':
        return binaryWrite(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  var res = ''
  var tmp = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    if (buf[i] <= 0x7F) {
      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])
      tmp = ''
    } else {
      tmp += '%' + buf[i].toString(16)
    }
  }

  return res + decodeUtf8Char(tmp)
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function binarySlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; i++) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = Buffer._augment(this.subarray(start, end))
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; i++) {
      newBuf[i] = this[i + start]
    }
  }

  if (newBuf.length) newBuf.parent = this.parent || this

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('value is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = value
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = value
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = value
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = value
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = value < 0 ? 1 : 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = value < 0 ? 1 : 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = value
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = value
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = value
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (value > max || value < min) throw new RangeError('value is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('index out of range')
  if (offset < 0) throw new RangeError('index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < len; i++) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    target._set(this.subarray(start, start + len), targetStart)
  }

  return len
}

// fill(value, start=0, end=buffer.length)
Buffer.prototype.fill = function fill (value, start, end) {
  if (!value) value = 0
  if (!start) start = 0
  if (!end) end = this.length

  if (end < start) throw new RangeError('end < start')

  // Fill 0 bytes; we're done
  if (end === start) return
  if (this.length === 0) return

  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')
  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')

  var i
  if (typeof value === 'number') {
    for (i = start; i < end; i++) {
      this[i] = value
    }
  } else {
    var bytes = utf8ToBytes(value.toString())
    var len = bytes.length
    for (i = start; i < end; i++) {
      this[i] = bytes[i % len]
    }
  }

  return this
}

/**
 * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.
 * Added in Node 0.12. Only available in browsers that support ArrayBuffer.
 */
Buffer.prototype.toArrayBuffer = function toArrayBuffer () {
  if (typeof Uint8Array !== 'undefined') {
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      return (new Buffer(this)).buffer
    } else {
      var buf = new Uint8Array(this.length)
      for (var i = 0, len = buf.length; i < len; i += 1) {
        buf[i] = this[i]
      }
      return buf.buffer
    }
  } else {
    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')
  }
}

// HELPER FUNCTIONS
// ================

var BP = Buffer.prototype

/**
 * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods
 */
Buffer._augment = function _augment (arr) {
  arr.constructor = Buffer
  arr._isBuffer = true

  // save reference to original Uint8Array set method before overwriting
  arr._set = arr.set

  // deprecated, will be removed in node 0.13+
  arr.get = BP.get
  arr.set = BP.set

  arr.write = BP.write
  arr.toString = BP.toString
  arr.toLocaleString = BP.toString
  arr.toJSON = BP.toJSON
  arr.equals = BP.equals
  arr.compare = BP.compare
  arr.indexOf = BP.indexOf
  arr.copy = BP.copy
  arr.slice = BP.slice
  arr.readUIntLE = BP.readUIntLE
  arr.readUIntBE = BP.readUIntBE
  arr.readUInt8 = BP.readUInt8
  arr.readUInt16LE = BP.readUInt16LE
  arr.readUInt16BE = BP.readUInt16BE
  arr.readUInt32LE = BP.readUInt32LE
  arr.readUInt32BE = BP.readUInt32BE
  arr.readIntLE = BP.readIntLE
  arr.readIntBE = BP.readIntBE
  arr.readInt8 = BP.readInt8
  arr.readInt16LE = BP.readInt16LE
  arr.readInt16BE = BP.readInt16BE
  arr.readInt32LE = BP.readInt32LE
  arr.readInt32BE = BP.readInt32BE
  arr.readFloatLE = BP.readFloatLE
  arr.readFloatBE = BP.readFloatBE
  arr.readDoubleLE = BP.readDoubleLE
  arr.readDoubleBE = BP.readDoubleBE
  arr.writeUInt8 = BP.writeUInt8
  arr.writeUIntLE = BP.writeUIntLE
  arr.writeUIntBE = BP.writeUIntBE
  arr.writeUInt16LE = BP.writeUInt16LE
  arr.writeUInt16BE = BP.writeUInt16BE
  arr.writeUInt32LE = BP.writeUInt32LE
  arr.writeUInt32BE = BP.writeUInt32BE
  arr.writeIntLE = BP.writeIntLE
  arr.writeIntBE = BP.writeIntBE
  arr.writeInt8 = BP.writeInt8
  arr.writeInt16LE = BP.writeInt16LE
  arr.writeInt16BE = BP.writeInt16BE
  arr.writeInt32LE = BP.writeInt32LE
  arr.writeInt32BE = BP.writeInt32BE
  arr.writeFloatLE = BP.writeFloatLE
  arr.writeFloatBE = BP.writeFloatBE
  arr.writeDoubleLE = BP.writeDoubleLE
  arr.writeDoubleBE = BP.writeDoubleBE
  arr.fill = BP.fill
  arr.inspect = BP.inspect
  arr.toArrayBuffer = BP.toArrayBuffer

  return arr
}

var INVALID_BASE64_RE = /[^+\/0-9A-z\-]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []
  var i = 0

  for (; i < length; i++) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (leadSurrogate) {
        // 2 leads in a row
        if (codePoint < 0xDC00) {
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          leadSurrogate = codePoint
          continue
        } else {
          // valid surrogate pair
          codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000
          leadSurrogate = null
        }
      } else {
        // no lead yet

        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else {
          // valid lead
          leadSurrogate = codePoint
          continue
        }
      }
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
      leadSurrogate = null
    }

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x200000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; i++) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function decodeUtf8Char (str) {
  try {
    return decodeURIComponent(str)
  } catch (err) {
    return String.fromCharCode(0xFFFD) // UTF 8 invalid char
  }
}

},{"base64-js":12,"ieee754":13,"is-array":14}],12:[function(require,module,exports){
var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

;(function (exports) {
	'use strict';

  var Arr = (typeof Uint8Array !== 'undefined')
    ? Uint8Array
    : Array

	var PLUS   = '+'.charCodeAt(0)
	var SLASH  = '/'.charCodeAt(0)
	var NUMBER = '0'.charCodeAt(0)
	var LOWER  = 'a'.charCodeAt(0)
	var UPPER  = 'A'.charCodeAt(0)
	var PLUS_URL_SAFE = '-'.charCodeAt(0)
	var SLASH_URL_SAFE = '_'.charCodeAt(0)

	function decode (elt) {
		var code = elt.charCodeAt(0)
		if (code === PLUS ||
		    code === PLUS_URL_SAFE)
			return 62 // '+'
		if (code === SLASH ||
		    code === SLASH_URL_SAFE)
			return 63 // '/'
		if (code < NUMBER)
			return -1 //no match
		if (code < NUMBER + 10)
			return code - NUMBER + 26 + 26
		if (code < UPPER + 26)
			return code - UPPER
		if (code < LOWER + 26)
			return code - LOWER + 26
	}

	function b64ToByteArray (b64) {
		var i, j, l, tmp, placeHolders, arr

		if (b64.length % 4 > 0) {
			throw new Error('Invalid string. Length must be a multiple of 4')
		}

		// the number of equal signs (place holders)
		// if there are two placeholders, than the two characters before it
		// represent one byte
		// if there is only one, then the three characters before it represent 2 bytes
		// this is just a cheap hack to not do indexOf twice
		var len = b64.length
		placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0

		// base64 is 4/3 + up to two characters of the original data
		arr = new Arr(b64.length * 3 / 4 - placeHolders)

		// if there are placeholders, only get up to the last complete 4 chars
		l = placeHolders > 0 ? b64.length - 4 : b64.length

		var L = 0

		function push (v) {
			arr[L++] = v
		}

		for (i = 0, j = 0; i < l; i += 4, j += 3) {
			tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
			push((tmp & 0xFF0000) >> 16)
			push((tmp & 0xFF00) >> 8)
			push(tmp & 0xFF)
		}

		if (placeHolders === 2) {
			tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
			push(tmp & 0xFF)
		} else if (placeHolders === 1) {
			tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
			push((tmp >> 8) & 0xFF)
			push(tmp & 0xFF)
		}

		return arr
	}

	function uint8ToBase64 (uint8) {
		var i,
			extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes
			output = "",
			temp, length

		function encode (num) {
			return lookup.charAt(num)
		}

		function tripletToBase64 (num) {
			return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
		}

		// go through the array every three bytes, we'll deal with trailing stuff later
		for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
			temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
			output += tripletToBase64(temp)
		}

		// pad the end with zeros, but make sure to not forget the extra bytes
		switch (extraBytes) {
			case 1:
				temp = uint8[uint8.length - 1]
				output += encode(temp >> 2)
				output += encode((temp << 4) & 0x3F)
				output += '=='
				break
			case 2:
				temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
				output += encode(temp >> 10)
				output += encode((temp >> 4) & 0x3F)
				output += encode((temp << 2) & 0x3F)
				output += '='
				break
		}

		return output
	}

	exports.toByteArray = b64ToByteArray
	exports.fromByteArray = uint8ToBase64
}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))

},{}],13:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],14:[function(require,module,exports){

/**
 * isArray
 */

var isArray = Array.isArray;

/**
 * toString
 */

var str = Object.prototype.toString;

/**
 * Whether or not the given `val`
 * is an array.
 *
 * example:
 *
 *        isArray([]);
 *        // > true
 *        isArray(arguments);
 *        // > false
 *        isArray('');
 *        // > false
 *
 * @param {mixed} val
 * @return {bool}
 */

module.exports = isArray || function (val) {
  return !! val && '[object Array]' == str.call(val);
};

},{}],15:[function(require,module,exports){
'use strict';

var container = require('./util/container'),
    traverse = require('./util/traverse'),
    formats = require('./util/formats');

var deref = require('deref');

function generate(schema, refs) {
  var $ = deref();

  try {
    if (Array.isArray(refs)) {
      return traverse($(schema, refs, true));
    } else {
      $.refs = refs || {};
    }

    return traverse($(schema, true));
  } catch (e) {
    if (e.path) {
      throw new Error(e.message + ' in ' + '/' + e.path.join('/'));
    } else {
      throw e;
    }
  }
}

generate.formats = formats;
generate.extend = container.set;

module.exports = generate;

},{"./util/container":24,"./util/formats":26,"./util/traverse":31,"deref":33}],16:[function(require,module,exports){
'use strict';

var random = require('../util/random'),
    traverse = require('../util/traverse'),
    hasProps = require('../util/has-props');

var ParseError = require('../util/error');

function unique(path, items, value, sample) {
  var tmp = [],
      seen = [];

  function walk(obj) {
    var json = JSON.stringify(obj);

    if (seen.indexOf(json) === -1) {
      seen.push(json);
      tmp.push(obj);
    }
  }

  items.forEach(walk);

  // TODO: find a better solution?
  var limit = 100;

  while (tmp.length !== items.length) {
    walk(traverse(value.items || sample, path));

    if (!limit--) {
      break;
    }
  }

  return tmp;
}

module.exports = function(value, path) {
  var items = [];

  if (!(value.items || value.additionalItems)) {
    if (hasProps(value, 'minItems', 'maxItems', 'uniqueItems')) {
      throw new ParseError('missing items for ' + JSON.stringify(value), path);
    }

    return items;
  }

  if (Array.isArray(value.items)) {
    return Array.prototype.concat.apply(items, value.items.map(function(item, key) {
      return traverse(item, path.concat(['items', key]));
    }));
  }

  var length = random(value.minItems, value.maxItems, 1, 5),
      sample = typeof value.additionalItems === 'object' ? value.additionalItems : {};

  for (var current = items.length; current < length; current += 1) {
    items.push(traverse(value.items || sample, path.concat(['items', current])));
  }

  if (value.uniqueItems) {
    return unique(path.concat(['items']), items, value, sample);
  }

  return items;
};

},{"../util/error":25,"../util/has-props":27,"../util/random":30,"../util/traverse":31}],17:[function(require,module,exports){
'use strict';

module.exports = function() {
  return Math.random() > 0.5;
};

},{}],18:[function(require,module,exports){
'use strict';

var number = require('./number');

module.exports = function(value) {
  value.hasPrecision = false;

  return Math.floor(number(value));
};

},{"./number":20}],19:[function(require,module,exports){
'use strict';

module.exports = function() {
  return null;
};

},{}],20:[function(require,module,exports){
'use strict';

var MIN_INTEGER = -100000000,
    MAX_INTEGER = 100000000;

var string = require('./string'),
    random = require('../util/random');

module.exports = function(value) {
  if (value.faker || value.chance) {
    return string(value);
  }

  var min = typeof value.minimum === 'undefined' ? MIN_INTEGER : value.minimum,
      max = typeof value.maximum === 'undefined' ? MAX_INTEGER : value.maximum;

  if (value.exclusiveMinimum && value.minimum) {
    min += 1;
  }

  if (value.exclusiveMaximum && value.maximum) {
    max -= 1;
  }

  if (value.multipleOf) {
    var base = random(Math.floor(min / value.multipleOf), Math.floor(max / value.multipleOf)) * value.multipleOf;

    while (base < min) {
      base += value.multipleOf;
    }

    return base;
  }

  if (value.hasPrecision) {
    return random(false, min, max);
  }

  return random(Math.random() > 0.5, min, max);
};

},{"../util/random":30,"./string":22}],21:[function(require,module,exports){
'use strict';

var container = require('../util/container'),
    random = require('../util/random'),
    traverse = require('../util/traverse'),
    hasProps = require('../util/has-props');

var faker = container.get('faker'),
    RandExp = container.get('randexp'),
    randexp = RandExp.randexp;

var ParseError = require('../util/error');

module.exports = function(value, path) {
  var props = {};

  if (!(value.properties || value.patternProperties || value.additionalProperties)) {
    if (hasProps(value, 'minProperties', 'maxProperties', 'dependencies', 'required')) {
      throw new ParseError('missing properties for ' + JSON.stringify(value), path);
    }

    return props;
  }

  var reqProps = value.required || [],
      allProps = value.properties ? Object.keys(value.properties) : [];

  reqProps.forEach(function(key) {
    if (value.properties && value.properties[key]) {
      props[key] = value.properties[key];
    }
  });

  var optProps = allProps.filter(function(prop) {
    return reqProps.indexOf(prop) === -1;
  });

  if (value.patternProperties) {
    optProps = Array.prototype.concat.apply(optProps, Object.keys(value.patternProperties));
  }

  var length = random(value.minProperties, value.maxProperties, 0, optProps.length);

  random.shuffle(optProps).slice(0, length).forEach(function(key) {
    if (value.properties && value.properties[key]) {
      props[key] = value.properties[key];
    } else {
      props[randexp(key)] = value.patternProperties[key];
    }
  });

  var current = Object.keys(props).length,
      sample = typeof value.additionalProperties === 'object' ? value.additionalProperties : {};

  if (current < length) {
    faker.lorem.words(length - current).forEach(function(key) {
      props[key + randexp('\\w{1,10}')] = sample;
    });
  }

  return traverse(props, path.concat(['properties']));
};

},{"../util/container":24,"../util/error":25,"../util/has-props":27,"../util/random":30,"../util/traverse":31}],22:[function(require,module,exports){
'use strict';

var container = require('../util/container');

var faker = container.get('faker'),
    chance = container.get('chance'),
    RandExp = container.get('randexp'),
    randexp = RandExp.randexp;

var random = require('../util/random'),
    formats = require('../util/formats');

var regexps = {
  email: '[a-zA-Z\\d][a-zA-Z\\d-]{1,13}[a-zA-Z\\d]@{hostname}',
  hostname: '[a-zA-Z]{1,33}\\.[a-z]{2,4}',
  ipv6: '[abcdef\\d]{4}(:[abcdef\\d]{4}){7}',
  uri: '[a-zA-Z\\d_][\\w\\\/\\d_-]{1,40}'
};

function get(obj, key) {
  var parts = key.split('.');

  while (parts.length) {
    var prop = parts.shift();

    if (!obj[prop]) {
      break;
    }

    obj = obj[prop];
  }

  return obj;
}

function generate(value) {
  if (value.use) {
    var args = [],
        path = value.key;

    if (typeof path === 'object') {
      path = Object.keys(path)[0];

      if (Array.isArray(value.key[path])) {
        args = value.key[path];
      } else {
        args.push(value.key[path]);
      }
    }

    var gen = get(value.gen, path);

    if (typeof gen !== 'function') {
      throw new Error('unknown ' + value.use + '-generator for ' + JSON.stringify(value.key));
    }

    return gen.apply(value.gen, args);
  }

  switch (value.format) {
    case 'date-time':
      return new Date(random(0, 100000000000000)).toISOString();

    case 'email':
    case 'hostname':
    case 'ipv6':
    case 'uri':
      return randexp(regexps[value.format]).replace(/\{(\w+)\}/, function(matches, key) {
        return randexp(regexps[key]);
      });

    case 'ipv4':
      return [0, 0, 0, 0].map(function() {
        return random(0, 255);
      }).join('.');

    default:
      var callback = formats(value.format);

      if (typeof callback !== 'function') {
        throw new Error('unknown generator for ' + JSON.stringify(value.format));
      }

      var generators = {
        faker: faker,
        chance: chance,
        randexp: randexp
      };

      return callback(generators, value);
  }
}

module.exports = function(value) {
  if (value.faker || value.chance) {
    return generate({
      use: value.faker ? 'faker' : 'chance',
      gen: value.faker ? faker : chance,
      key: value.faker || value.chance
    });
  }

  if (value.format) {
    return generate(value);
  }

  if (value.pattern) {
    return randexp(value.pattern);
  }

  if (value.minLength || value.maxLength) {
    var min = Math.max(0, value.minLength || 0),
        max = random(min, value.maxLength);

    return randexp('.{' + min + ',' + max + '}');
  }

  return faker.lorem.words(random(1, 5)).join(' ');
};

},{"../util/container":24,"../util/formats":26,"../util/random":30}],23:[function(require,module,exports){
'use strict';

function combine(target) {
  var props = Array.prototype.slice.call(arguments, 1);

  props.forEach(function(obj) {
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        target[key] = obj[key];
      }
    }
  });
}

module.exports = combine;

},{}],24:[function(require,module,exports){
'use strict';

// static requires - handle both initial dependency load (deps will be available
// among other modules) as well as they will be included by browserify AST
var Chance = require('chance');

var container = {
  faker: require('faker'),
  chance: new Chance(),
  randexp: require('randexp')
};

module.exports = {
  set: function(name, callback) {
    if (typeof container[name] === 'undefined') {
      throw new ReferenceError('"' + name + '" dependency doesn\'t exist.');
    }

    container[name] = callback(container[name]);
  },
  get: function(name) {
    return container[name];
  }
};

},{"chance":32,"faker":39,"randexp":956}],25:[function(require,module,exports){
'use strict';

function ParseError(message, path) {
  this.message = message;
  this.path = path;
  this.name = 'ParseError';
}

ParseError.prototype = Error.prototype;

module.exports = ParseError;

},{}],26:[function(require,module,exports){
'use strict';

var registry = {};

module.exports = function(name, callback) {
  if (callback) {
    registry[name] = callback;
  } else if (typeof name === 'object') {
    for (var method in name) {
      registry[method] = name[method];
    }
  } else if (name) {
    return registry[name];
  }

  return registry;
};

},{}],27:[function(require,module,exports){
'use strict';

module.exports = function(obj) {
  return Array.prototype.slice.call(arguments, 1).filter(function(key) {
    return typeof obj[key] !== 'undefined';
  }).length > 0;
};

},{}],28:[function(require,module,exports){
'use strict';

var inferredProperties = {
  array: [
    'additionalItems',
    'items',
    'maxItems',
    'minItems',
    'uniqueItems'
  ],
  integer: [
    'exclusiveMaximum',
    'exclusiveMinimum',
    'maximum',
    'minimum',
    'multipleOf'
  ],
  object: [
    'additionalProperties',
    'dependencies',
    'maxProperties',
    'minProperties',
    'patternProperties',
    'properties',
    'required'
  ],
  string: [
    'maxLength',
    'menlength',
    'pattern'
  ]
};

inferredProperties.number = inferredProperties.integer;

function mayHaveType(obj, props) {
  return Object.keys(obj).filter(function(prop) {
    return props.indexOf(prop) > -1;
  }).length > 0;
}

module.exports = function(obj) {
  for (var type in inferredProperties) {
    if (mayHaveType(obj, inferredProperties[type])) {
      return type;
    }
  }
};

},{}],29:[function(require,module,exports){
'use strict';

module.exports = {
  array: require('../types/array'),
  boolean: require('../types/boolean'),
  integer: require('../types/integer'),
  number: require('../types/number'),
  null: require('../types/null'),
  object: require('../types/object'),
  string: require('../types/string')
};

},{"../types/array":16,"../types/boolean":17,"../types/integer":18,"../types/null":19,"../types/number":20,"../types/object":21,"../types/string":22}],30:[function(require,module,exports){
'use strict';

var container = require('./container');

var faker = container.get('faker');

var random = module.exports = function(min, max, defMin, defMax) {
  var isInteger = true;

  if (typeof min === 'boolean') {
    // non-integer values
    isInteger = min;
    min = arguments[1];
    max = arguments[2];
    defMin = arguments[3];
    defMax = arguments[4];
  }

  defMin = typeof defMin === 'undefined' ? random.MIN_NUMBER : defMin;
  defMax = typeof defMax === 'undefined' ? random.MAX_NUMBER : defMax;

  min = typeof min === 'undefined' ? defMin : min;
  max = typeof max === 'undefined' ? defMax : max;

  if (max < min) {
    max += min;
  }

  return faker.random.number({
    min: min,
    max: max,
    precision: isInteger ? 1 : Math.random()
  });
};

random.shuffle = function(obj) {
  var copy = obj.slice(),
      length = obj.length;

  for (; length > 0;) {
    var key = Math.floor(Math.random() * length),
        tmp = copy[--length];

    copy[length] = copy[key];
    copy[key] = tmp;
  }

  return copy;
};

random.pick = function(obj) {
  return obj[Math.floor(Math.random() * obj.length)];
};

random.MIN_NUMBER = -100;
random.MAX_NUMBER = 100;

},{"./container":24}],31:[function(require,module,exports){
'use strict';

var random = require('./random'),
    combine = require('./combine');

var ParseError = require('./error');

var inferredType = require('./inferred');

function reduce(obj) {
  var mix = obj.allOf || obj.anyOf || obj.oneOf;

  if (!(mix && mix.length)) {
    for (var key in obj) {
      var value = obj[key];

      if (typeof value === 'object' && !(key === 'enum' || key === 'required')) {
        reduce(value);
      }
    }

    return;
  }

  if ((obj.oneOf || obj.anyOf) && mix.length) {
    mix = [random.pick(mix)];
  }

  delete obj.allOf;
  delete obj.anyOf;
  delete obj.oneOf;

  var fixed = {};

  mix.forEach(function(value) {
    combine(fixed, value);
  });

  combine(obj, fixed);

  while (obj.allOf || obj.anyOf || obj.oneOf) {
    reduce(obj);
  }
}

function traverse(obj, path) {
  var primitives = require('./primitives');

  var copy = {};

  if (Array.isArray(obj)) {
    copy = [];
  }

  path = path || [];

  reduce(obj);

  if (Array.isArray(obj.enum)) {
    return random.pick(obj.enum);
  }

  var type = obj.type;

  if (Array.isArray(type)) {
    type = random.pick(type);
  } else if (typeof type === 'undefined') {
    // Attempt to infer the type
    type = inferredType(obj) || type;
  }

  if (typeof type === 'string') {
    if (!primitives[type]) {
      throw new ParseError('unknown primitive ' + JSON.stringify(type), path.concat(['type']));
    }

    try {
      return primitives[type](obj, path);
    } catch (e) {
      if (typeof e.path === 'undefined') {
        throw new ParseError(e.message, path)
      }

      throw e;
    }
  }

  for (var key in obj) {
    var value = obj[key];

    if (typeof value === 'object') {
      copy[key] = traverse(value, path.concat([key]));
    } else {
      copy[key] = value;
    }
  }

  return copy;
}

module.exports = traverse;

},{"./combine":23,"./error":25,"./inferred":28,"./primitives":29,"./random":30}],32:[function(require,module,exports){
(function (Buffer){
//  Chance.js 0.7.6
//  http://chancejs.com
//  (c) 2013 Victor Quinn
//  Chance may be freely distributed or modified under the MIT license.

(function () {

    // Constants
    var MAX_INT = 9007199254740992;
    var MIN_INT = -MAX_INT;
    var NUMBERS = '0123456789';
    var CHARS_LOWER = 'abcdefghijklmnopqrstuvwxyz';
    var CHARS_UPPER = CHARS_LOWER.toUpperCase();
    var HEX_POOL  = NUMBERS + "abcdef";

    // Cached array helpers
    var slice = Array.prototype.slice;

    // Constructor
    function Chance (seed) {
        if (!(this instanceof Chance)) {
            return seed == null ? new Chance() : new Chance(seed);
        }

        // if user has provided a function, use that as the generator
        if (typeof seed === 'function') {
            this.random = seed;
            return this;
        }

        var seedling;

        if (arguments.length) {
            // set a starting value of zero so we can add to it
            this.seed = 0;
        }
        // otherwise, leave this.seed blank so that MT will recieve a blank

        for (var i = 0; i < arguments.length; i++) {
            seedling = 0;
            if (typeof arguments[i] === 'string') {
                for (var j = 0; j < arguments[i].length; j++) {
                    seedling += (arguments[i].length - j) * arguments[i].charCodeAt(j);
                }
            } else {
                seedling = arguments[i];
            }
            this.seed += (arguments.length - i) * seedling;
        }

        // If no generator function was provided, use our MT
        this.mt = this.mersenne_twister(this.seed);
        this.bimd5 = this.blueimp_md5();
        this.random = function () {
            return this.mt.random(this.seed);
        };

        return this;
    }

    Chance.prototype.VERSION = "0.7.6";

    // Random helper functions
    function initOptions(options, defaults) {
        options || (options = {});

        if (defaults) {
            for (var i in defaults) {
                if (typeof options[i] === 'undefined') {
                    options[i] = defaults[i];
                }
            }
        }

        return options;
    }

    function testRange(test, errorMessage) {
        if (test) {
            throw new RangeError(errorMessage);
        }
    }

    /**
     * Encode the input string with Base64.
     */
    var base64 = function() {
        throw new Error('No Base64 encoder available.');
    };

    // Select proper Base64 encoder.
    (function determineBase64Encoder() {
        if (typeof btoa === 'function') {
            base64 = btoa;
        } else if (typeof Buffer === 'function') {
            base64 = function(input) {
                return new Buffer(input).toString('base64');
            };
        }
    })();

    // -- Basics --

    /**
     *  Return a random bool, either true or false
     *
     *  @param {Object} [options={ likelihood: 50 }] alter the likelihood of
     *    receiving a true or false value back.
     *  @throws {RangeError} if the likelihood is out of bounds
     *  @returns {Bool} either true or false
     */
    Chance.prototype.bool = function (options) {
        // likelihood of success (true)
        options = initOptions(options, {likelihood : 50});

        // Note, we could get some minor perf optimizations by checking range
        // prior to initializing defaults, but that makes code a bit messier
        // and the check more complicated as we have to check existence of
        // the object then existence of the key before checking constraints.
        // Since the options initialization should be minor computationally,
        // decision made for code cleanliness intentionally. This is mentioned
        // here as it's the first occurrence, will not be mentioned again.
        testRange(
            options.likelihood < 0 || options.likelihood > 100,
            "Chance: Likelihood accepts values from 0 to 100."
        );

        return this.random() * 100 < options.likelihood;
    };

    /**
     *  Return a random character.
     *
     *  @param {Object} [options={}] can specify a character pool, only alpha,
     *    only symbols, and casing (lower or upper)
     *  @returns {String} a single random character
     *  @throws {RangeError} Can only specify alpha or symbols, not both
     */
    Chance.prototype.character = function (options) {
        options = initOptions(options);
        testRange(
            options.alpha && options.symbols,
            "Chance: Cannot specify both alpha and symbols."
        );

        var symbols = "!@#$%^&*()[]",
            letters, pool;

        if (options.casing === 'lower') {
            letters = CHARS_LOWER;
        } else if (options.casing === 'upper') {
            letters = CHARS_UPPER;
        } else {
            letters = CHARS_LOWER + CHARS_UPPER;
        }

        if (options.pool) {
            pool = options.pool;
        } else if (options.alpha) {
            pool = letters;
        } else if (options.symbols) {
            pool = symbols;
        } else {
            pool = letters + NUMBERS + symbols;
        }

        return pool.charAt(this.natural({max: (pool.length - 1)}));
    };

    // Note, wanted to use "float" or "double" but those are both JS reserved words.

    // Note, fixed means N OR LESS digits after the decimal. This because
    // It could be 14.9000 but in JavaScript, when this is cast as a number,
    // the trailing zeroes are dropped. Left to the consumer if trailing zeroes are
    // needed
    /**
     *  Return a random floating point number
     *
     *  @param {Object} [options={}] can specify a fixed precision, min, max
     *  @returns {Number} a single floating point number
     *  @throws {RangeError} Can only specify fixed or precision, not both. Also
     *    min cannot be greater than max
     */
    Chance.prototype.floating = function (options) {
        options = initOptions(options, {fixed : 4});
        testRange(
            options.fixed && options.precision,
            "Chance: Cannot specify both fixed and precision."
        );

        var num;
        var fixed = Math.pow(10, options.fixed);

        var max = MAX_INT / fixed;
        var min = -max;

        testRange(
            options.min && options.fixed && options.min < min,
            "Chance: Min specified is out of range with fixed. Min should be, at least, " + min
        );
        testRange(
            options.max && options.fixed && options.max > max,
            "Chance: Max specified is out of range with fixed. Max should be, at most, " + max
        );

        options = initOptions(options, { min : min, max : max });

        // Todo - Make this work!
        // options.precision = (typeof options.precision !== "undefined") ? options.precision : false;

        num = this.integer({min: options.min * fixed, max: options.max * fixed});
        var num_fixed = (num / fixed).toFixed(options.fixed);

        return parseFloat(num_fixed);
    };

    /**
     *  Return a random integer
     *
     *  NOTE the max and min are INCLUDED in the range. So:
     *  chance.integer({min: 1, max: 3});
     *  would return either 1, 2, or 3.
     *
     *  @param {Object} [options={}] can specify a min and/or max
     *  @returns {Number} a single random integer number
     *  @throws {RangeError} min cannot be greater than max
     */
    Chance.prototype.integer = function (options) {
        // 9007199254740992 (2^53) is the max integer number in JavaScript
        // See: http://vq.io/132sa2j
        options = initOptions(options, {min: MIN_INT, max: MAX_INT});
        testRange(options.min > options.max, "Chance: Min cannot be greater than Max.");

        return Math.floor(this.random() * (options.max - options.min + 1) + options.min);
    };

    /**
     *  Return a random natural
     *
     *  NOTE the max and min are INCLUDED in the range. So:
     *  chance.natural({min: 1, max: 3});
     *  would return either 1, 2, or 3.
     *
     *  @param {Object} [options={}] can specify a min and/or max
     *  @returns {Number} a single random integer number
     *  @throws {RangeError} min cannot be greater than max
     */
    Chance.prototype.natural = function (options) {
        options = initOptions(options, {min: 0, max: MAX_INT});
        testRange(options.min < 0, "Chance: Min cannot be less than zero.");
        return this.integer(options);
    };

    /**
     *  Return a random string
     *
     *  @param {Object} [options={}] can specify a length
     *  @returns {String} a string of random length
     *  @throws {RangeError} length cannot be less than zero
     */
    Chance.prototype.string = function (options) {
        options = initOptions(options, { length: this.natural({min: 5, max: 20}) });
        testRange(options.length < 0, "Chance: Length cannot be less than zero.");
        var length = options.length,
            text = this.n(this.character, length, options);

        return text.join("");
    };

    // -- End Basics --

    // -- Helpers --

    Chance.prototype.capitalize = function (word) {
        return word.charAt(0).toUpperCase() + word.substr(1);
    };

    Chance.prototype.mixin = function (obj) {
        for (var func_name in obj) {
            Chance.prototype[func_name] = obj[func_name];
        }
        return this;
    };

    /**
     *  Given a function that generates something random and a number of items to generate,
     *    return an array of items where none repeat.
     *
     *  @param {Function} fn the function that generates something random
     *  @param {Number} num number of terms to generate
     *  @param {Object} options any options to pass on to the generator function
     *  @returns {Array} an array of length `num` with every item generated by `fn` and unique
     *
     *  There can be more parameters after these. All additional parameters are provided to the given function
     */
    Chance.prototype.unique = function(fn, num, options) {
        testRange(
            typeof fn !== "function",
            "Chance: The first argument must be a function."
        );

        options = initOptions(options, {
            // Default comparator to check that val is not already in arr.
            // Should return `false` if item not in array, `true` otherwise
            comparator: function(arr, val) {
                return arr.indexOf(val) !== -1;
            }
        });

        var arr = [], count = 0, result, MAX_DUPLICATES = num * 50, params = slice.call(arguments, 2);

        while (arr.length < num) {
            result = fn.apply(this, params);
            if (!options.comparator(arr, result)) {
                arr.push(result);
                // reset count when unique found
                count = 0;
            }

            if (++count > MAX_DUPLICATES) {
                throw new RangeError("Chance: num is likely too large for sample set");
            }
        }
        return arr;
    };

    /**
     *  Gives an array of n random terms
     *
     *  @param {Function} fn the function that generates something random
     *  @param {Number} n number of terms to generate
     *  @returns {Array} an array of length `n` with items generated by `fn`
     *
     *  There can be more parameters after these. All additional parameters are provided to the given function
     */
    Chance.prototype.n = function(fn, n) {
        testRange(
            typeof fn !== "function",
            "Chance: The first argument must be a function."
        );

        if (typeof n === 'undefined') {
            n = 1;
        }
        var i = n, arr = [], params = slice.call(arguments, 2);

        // Providing a negative count should result in a noop.
        i = Math.max( 0, i );

        for (null; i--; null) {
            arr.push(fn.apply(this, params));
        }

        return arr;
    };

    // H/T to SO for this one: http://vq.io/OtUrZ5
    Chance.prototype.pad = function (number, width, pad) {
        // Default pad to 0 if none provided
        pad = pad || '0';
        // Convert number to a string
        number = number + '';
        return number.length >= width ? number : new Array(width - number.length + 1).join(pad) + number;
    };

    Chance.prototype.pick = function (arr, count) {
        if (arr.length === 0) {
            throw new RangeError("Chance: Cannot pick() from an empty array");
        }
        if (!count || count === 1) {
            return arr[this.natural({max: arr.length - 1})];
        } else {
            return this.shuffle(arr).slice(0, count);
        }
    };

    Chance.prototype.shuffle = function (arr) {
        var old_array = arr.slice(0),
            new_array = [],
            j = 0,
            length = Number(old_array.length);

        for (var i = 0; i < length; i++) {
            // Pick a random index from the array
            j = this.natural({max: old_array.length - 1});
            // Add it to the new array
            new_array[i] = old_array[j];
            // Remove that element from the original array
            old_array.splice(j, 1);
        }

        return new_array;
    };

    // Returns a single item from an array with relative weighting of odds
    Chance.prototype.weighted = function(arr, weights) {
        if (arr.length !== weights.length) {
            throw new RangeError("Chance: length of array and weights must match");
        }

        // Handle weights that are less or equal to zero.
        for (var weightIndex = weights.length - 1; weightIndex >= 0; --weightIndex) {
            // If the weight is less or equal to zero, remove it and the value.
            if (weights[weightIndex] <= 0) {
                arr.splice(weightIndex,1);
                weights.splice(weightIndex,1);
            }
        }

        // If any of the weights are less than 1, we want to scale them up to whole
        //   numbers for the rest of this logic to work
        if (weights.some(function(weight) { return weight < 1; })) {
            var min = weights.reduce(function(min, weight) {
                return (weight < min) ? weight : min;
            }, weights[0]);

            var scaling_factor = 1 / min;

            weights = weights.map(function(weight) {
                return weight * scaling_factor;
            });
        }

        var sum = weights.reduce(function(total, weight) {
            return total + weight;
        }, 0);

        // get an index
        var selected = this.natural({ min: 1, max: sum });

        var total = 0;
        var chosen;
        // Using some() here so we can bail as soon as we get our match
        weights.some(function(weight, index) {
            if (selected <= total + weight) {
                chosen = arr[index];
                return true;
            }
            total += weight;
            return false;
        });

        return chosen;
    };

    // -- End Helpers --

    // -- Text --

    Chance.prototype.paragraph = function (options) {
        options = initOptions(options);

        var sentences = options.sentences || this.natural({min: 3, max: 7}),
            sentence_array = this.n(this.sentence, sentences);

        return sentence_array.join(' ');
    };

    // Could get smarter about this than generating random words and
    // chaining them together. Such as: http://vq.io/1a5ceOh
    Chance.prototype.sentence = function (options) {
        options = initOptions(options);

        var words = options.words || this.natural({min: 12, max: 18}),
            text, word_array = this.n(this.word, words);

        text = word_array.join(' ');

        // Capitalize first letter of sentence, add period at end
        text = this.capitalize(text) + '.';

        return text;
    };

    Chance.prototype.syllable = function (options) {
        options = initOptions(options);

        var length = options.length || this.natural({min: 2, max: 3}),
            consonants = 'bcdfghjklmnprstvwz', // consonants except hard to speak ones
            vowels = 'aeiou', // vowels
            all = consonants + vowels, // all
            text = '',
            chr;

        // I'm sure there's a more elegant way to do this, but this works
        // decently well.
        for (var i = 0; i < length; i++) {
            if (i === 0) {
                // First character can be anything
                chr = this.character({pool: all});
            } else if (consonants.indexOf(chr) === -1) {
                // Last character was a vowel, now we want a consonant
                chr = this.character({pool: consonants});
            } else {
                // Last character was a consonant, now we want a vowel
                chr = this.character({pool: vowels});
            }

            text += chr;
        }

        return text;
    };

    Chance.prototype.word = function (options) {
        options = initOptions(options);

        testRange(
            options.syllables && options.length,
            "Chance: Cannot specify both syllables AND length."
        );

        var syllables = options.syllables || this.natural({min: 1, max: 3}),
            text = '';

        if (options.length) {
            // Either bound word by length
            do {
                text += this.syllable();
            } while (text.length < options.length);
            text = text.substring(0, options.length);
        } else {
            // Or by number of syllables
            for (var i = 0; i < syllables; i++) {
                text += this.syllable();
            }
        }
        return text;
    };

    // -- End Text --

    // -- Person --

    Chance.prototype.age = function (options) {
        options = initOptions(options);
        var ageRange;

        switch (options.type) {
            case 'child':
                ageRange = {min: 1, max: 12};
                break;
            case 'teen':
                ageRange = {min: 13, max: 19};
                break;
            case 'adult':
                ageRange = {min: 18, max: 65};
                break;
            case 'senior':
                ageRange = {min: 65, max: 100};
                break;
            case 'all':
                ageRange = {min: 1, max: 100};
                break;
            default:
                ageRange = {min: 18, max: 65};
                break;
        }

        return this.natural(ageRange);
    };

    Chance.prototype.birthday = function (options) {
        options = initOptions(options, {
            year: (new Date().getFullYear() - this.age(options))
        });

        return this.date(options);
    };

    // CPF; ID to identify taxpayers in Brazil
    Chance.prototype.cpf = function () {
        var n = this.n(this.natural, 9, { max: 9 });
        var d1 = n[8]*2+n[7]*3+n[6]*4+n[5]*5+n[4]*6+n[3]*7+n[2]*8+n[1]*9+n[0]*10;
        d1 = 11 - (d1 % 11);
        if (d1>=10) {
            d1 = 0;
        }
        var d2 = d1*2+n[8]*3+n[7]*4+n[6]*5+n[5]*6+n[4]*7+n[3]*8+n[2]*9+n[1]*10+n[0]*11;
        d2 = 11 - (d2 % 11);
        if (d2>=10) {
            d2 = 0;
        }
        return ''+n[0]+n[1]+n[2]+'.'+n[3]+n[4]+n[5]+'.'+n[6]+n[7]+n[8]+'-'+d1+d2;
    };

    Chance.prototype.first = function (options) {
        options = initOptions(options, {gender: this.gender()});
        return this.pick(this.get("firstNames")[options.gender.toLowerCase()]);
    };

    Chance.prototype.gender = function () {
        return this.pick(['Male', 'Female']);
    };

    Chance.prototype.last = function () {
        return this.pick(this.get("lastNames"));
    };

    Chance.prototype.mrz = function (options) {
        var checkDigit = function (input) {
            var alpha = "<ABCDEFGHIJKLMNOPQRSTUVWXYXZ".split(''),
                multipliers = [ 7, 3, 1 ],
                runningTotal = 0;

            if (typeof input !== 'string') {
                input = input.toString();
            }

            input.split('').forEach(function(character, idx) {
                var pos = alpha.indexOf(character);

                if(pos !== -1) {
                    character = pos === 0 ? 0 : pos + 9;
                } else {
                    character = parseInt(character, 10);
                }
                character *= multipliers[idx % multipliers.length];
                runningTotal += character;
            });
            return runningTotal % 10;
        };
        var generate = function (opts) {
            var pad = function (length) {
                return new Array(length + 1).join('<');
            };
            var number = [ 'P<',
                           opts.issuer,
                           opts.last.toUpperCase(),
                           '<<',
                           opts.first.toUpperCase(),
                           pad(39 - (opts.last.length + opts.first.length + 2)),
                           opts.passportNumber,
                           checkDigit(opts.passportNumber),
                           opts.nationality,
                           opts.dob,
                           checkDigit(opts.dob),
                           opts.gender,
                           opts.expiry,
                           checkDigit(opts.expiry),
                           pad(14),
                           checkDigit(pad(14)) ].join('');

            return number +
                (checkDigit(number.substr(44, 10) +
                            number.substr(57, 7) +
                            number.substr(65, 7)));
        };

        var that = this;

        options = initOptions(options, {
            first: this.first(),
            last: this.last(),
            passportNumber: this.integer({min: 100000000, max: 999999999}),
            dob: (function () {
                var date = that.birthday({type: 'adult'});
                return [date.getFullYear().toString().substr(2),
                        that.pad(date.getMonth() + 1, 2),
                        that.pad(date.getDate(), 2)].join('');
            }()),
            expiry: (function () {
                var date = new Date();
                return [(date.getFullYear() + 5).toString().substr(2),
                        that.pad(date.getMonth() + 1, 2),
                        that.pad(date.getDate(), 2)].join('');
            }()),
            gender: this.gender() === 'Female' ? 'F': 'M',
            issuer: 'GBR',
            nationality: 'GBR'
        });
        return generate (options);
    };

    Chance.prototype.name = function (options) {
        options = initOptions(options);

        var first = this.first(options),
            last = this.last(),
            name;

        if (options.middle) {
            name = first + ' ' + this.first(options) + ' ' + last;
        } else if (options.middle_initial) {
            name = first + ' ' + this.character({alpha: true, casing: 'upper'}) + '. ' + last;
        } else {
            name = first + ' ' + last;
        }

        if (options.prefix) {
            name = this.prefix(options) + ' ' + name;
        }

        if (options.suffix) {
            name = name + ' ' + this.suffix(options);
        }

        return name;
    };

    // Return the list of available name prefixes based on supplied gender.
    Chance.prototype.name_prefixes = function (gender) {
        gender = gender || "all";
        gender = gender.toLowerCase();

        var prefixes = [
            { name: 'Doctor', abbreviation: 'Dr.' }
        ];

        if (gender === "male" || gender === "all") {
            prefixes.push({ name: 'Mister', abbreviation: 'Mr.' });
        }

        if (gender === "female" || gender === "all") {
            prefixes.push({ name: 'Miss', abbreviation: 'Miss' });
            prefixes.push({ name: 'Misses', abbreviation: 'Mrs.' });
        }

        return prefixes;
    };

    // Alias for name_prefix
    Chance.prototype.prefix = function (options) {
        return this.name_prefix(options);
    };

    Chance.prototype.name_prefix = function (options) {
        options = initOptions(options, { gender: "all" });
        return options.full ?
            this.pick(this.name_prefixes(options.gender)).name :
            this.pick(this.name_prefixes(options.gender)).abbreviation;
    };

    Chance.prototype.ssn = function (options) {
        options = initOptions(options, {ssnFour: false, dashes: true});
        var ssn_pool = "1234567890",
            ssn,
            dash = options.dashes ? '-' : '';

        if(!options.ssnFour) {
            ssn = this.string({pool: ssn_pool, length: 3}) + dash +
            this.string({pool: ssn_pool, length: 2}) + dash +
            this.string({pool: ssn_pool, length: 4});
        } else {
            ssn = this.string({pool: ssn_pool, length: 4});
        }
        return ssn;
    };

    // Return the list of available name suffixes
    Chance.prototype.name_suffixes = function () {
        var suffixes = [
            { name: 'Doctor of Osteopathic Medicine', abbreviation: 'D.O.' },
            { name: 'Doctor of Philosophy', abbreviation: 'Ph.D.' },
            { name: 'Esquire', abbreviation: 'Esq.' },
            { name: 'Junior', abbreviation: 'Jr.' },
            { name: 'Juris Doctor', abbreviation: 'J.D.' },
            { name: 'Master of Arts', abbreviation: 'M.A.' },
            { name: 'Master of Business Administration', abbreviation: 'M.B.A.' },
            { name: 'Master of Science', abbreviation: 'M.S.' },
            { name: 'Medical Doctor', abbreviation: 'M.D.' },
            { name: 'Senior', abbreviation: 'Sr.' },
            { name: 'The Third', abbreviation: 'III' },
            { name: 'The Fourth', abbreviation: 'IV' },
            { name: 'Bachelor of Engineering', abbreviation: 'B.E' },
            { name: 'Bachelor of Technology', abbreviation: 'B.TECH' }
        ];
        return suffixes;
    };

    // Alias for name_suffix
    Chance.prototype.suffix = function (options) {
        return this.name_suffix(options);
    };

    Chance.prototype.name_suffix = function (options) {
        options = initOptions(options);
        return options.full ?
            this.pick(this.name_suffixes()).name :
            this.pick(this.name_suffixes()).abbreviation;
    };

    // -- End Person --

    // -- Mobile --
    // Android GCM Registration ID
    Chance.prototype.android_id = function () {
        return "APA91" + this.string({ pool: "0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_", length: 178 });
    };

    // Apple Push Token
    Chance.prototype.apple_token = function () {
        return this.string({ pool: "abcdef1234567890", length: 64 });
    };

    // Windows Phone 8 ANID2
    Chance.prototype.wp8_anid2 = function () {
        return base64( this.hash( { length : 32 } ) );
    };

    // Windows Phone 7 ANID
    Chance.prototype.wp7_anid = function () {
        return 'A=' + this.guid().replace(/-/g, '').toUpperCase() + '&E=' + this.hash({ length:3 }) + '&W=' + this.integer({ min:0, max:9 });
    };

    // BlackBerry Device PIN
    Chance.prototype.bb_pin = function () {
        return this.hash({ length: 8 });
    };

    // -- End Mobile --

    // -- Web --
    Chance.prototype.avatar = function (options) {
        var url = null;
        var URL_BASE = '//www.gravatar.com/avatar/';
        var PROTOCOLS = {
            http: 'http',
            https: 'https'
        };
        var FILE_TYPES = {
            bmp: 'bmp',
            gif: 'gif',
            jpg: 'jpg',
            png: 'png'
        };
        var FALLBACKS = {
            '404': '404', // Return 404 if not found
            mm: 'mm', // Mystery man
            identicon: 'identicon', // Geometric pattern based on hash
            monsterid: 'monsterid', // A generated monster icon
            wavatar: 'wavatar', // A generated face
            retro: 'retro', // 8-bit icon
            blank: 'blank' // A transparent png
        };
        var RATINGS = {
            g: 'g',
            pg: 'pg',
            r: 'r',
            x: 'x'
        };
        var opts = {
            protocol: null,
            email: null,
            fileExtension: null,
            size: null,
            fallback: null,
            rating: null
        };

        if (!options) {
            // Set to a random email
            opts.email = this.email();
            options = {};
        }
        else if (typeof options === 'string') {
            opts.email = options;
            options = {};
        }
        else if (typeof options !== 'object') {
            return null;
        }
        else if (options.constructor === 'Array') {
            return null;
        }

        opts = initOptions(options, opts);

        if (!opts.email) {
            // Set to a random email
            opts.email = this.email();
        }

        // Safe checking for params
        opts.protocol = PROTOCOLS[opts.protocol] ? opts.protocol + ':' : '';
        opts.size = parseInt(opts.size, 0) ? opts.size : '';
        opts.rating = RATINGS[opts.rating] ? opts.rating : '';
        opts.fallback = FALLBACKS[opts.fallback] ? opts.fallback : '';
        opts.fileExtension = FILE_TYPES[opts.fileExtension] ? opts.fileExtension : '';

        url =
            opts.protocol +
            URL_BASE +
            this.bimd5.md5(opts.email) +
            (opts.fileExtension ? '.' + opts.fileExtension : '') +
            (opts.size || opts.rating || opts.fallback ? '?' : '') +
            (opts.size ? '&s=' + opts.size.toString() : '') +
            (opts.rating ? '&r=' + opts.rating : '') +
            (opts.fallback ? '&d=' + opts.fallback : '')
            ;

        return url;
    };

    Chance.prototype.color = function (options) {
        function gray(value, delimiter) {
            return [value, value, value].join(delimiter || '');
        }

        options = initOptions(options, {
            format: this.pick(['hex', 'shorthex', 'rgb', 'rgba', '0x']),
            grayscale: false,
            casing: 'lower'
        });

        var isGrayscale = options.grayscale;
        var colorValue;

        if (options.format === 'hex') {
            colorValue = '#' + (isGrayscale ? gray(this.hash({length: 2})) : this.hash({length: 6}));

        } else if (options.format === 'shorthex') {
            colorValue = '#' + (isGrayscale ? gray(this.hash({length: 1})) : this.hash({length: 3}));

        } else if (options.format === 'rgb') {
            if (isGrayscale) {
                colorValue = 'rgb(' + gray(this.natural({max: 255}), ',') + ')';
            } else {
                colorValue = 'rgb(' + this.natural({max: 255}) + ',' + this.natural({max: 255}) + ',' + this.natural({max: 255}) + ')';
            }
        } else if (options.format === 'rgba') {
            if (isGrayscale) {
                colorValue = 'rgba(' + gray(this.natural({max: 255}), ',') + ',' + this.floating({min:0, max:1}) + ')';
            } else {
                colorValue = 'rgba(' + this.natural({max: 255}) + ',' + this.natural({max: 255}) + ',' + this.natural({max: 255}) + ',' + this.floating({min:0, max:1}) + ')';
            }
        } else if (options.format === '0x') {
            colorValue = '0x' + (isGrayscale ? gray(this.hash({length: 2})) : this.hash({length: 6}));
        } else {
            throw new RangeError('Invalid format provided. Please provide one of "hex", "shorthex", "rgb", "rgba", or "0x".');
        }

        if (options.casing === 'upper' ) {
            colorValue = colorValue.toUpperCase();
        }

        return colorValue;
    };

    Chance.prototype.domain = function (options) {
        options = initOptions(options);
        return this.word() + '.' + (options.tld || this.tld());
    };

    Chance.prototype.email = function (options) {
        options = initOptions(options);
        return this.word({length: options.length}) + '@' + (options.domain || this.domain());
    };

    Chance.prototype.fbid = function () {
        return parseInt('10000' + this.natural({max: 100000000000}), 10);
    };

    Chance.prototype.google_analytics = function () {
        var account = this.pad(this.natural({max: 999999}), 6);
        var property = this.pad(this.natural({max: 99}), 2);

        return 'UA-' + account + '-' + property;
    };

    Chance.prototype.hashtag = function () {
        return '#' + this.word();
    };

    Chance.prototype.ip = function () {
        // Todo: This could return some reserved IPs. See http://vq.io/137dgYy
        // this should probably be updated to account for that rare as it may be
        return this.natural({max: 255}) + '.' +
               this.natural({max: 255}) + '.' +
               this.natural({max: 255}) + '.' +
               this.natural({max: 255});
    };

    Chance.prototype.ipv6 = function () {
        var ip_addr = this.n(this.hash, 8, {length: 4});

        return ip_addr.join(":");
    };

    Chance.prototype.klout = function () {
        return this.natural({min: 1, max: 99});
    };

    Chance.prototype.tlds = function () {
        return ['com', 'org', 'edu', 'gov', 'co.uk', 'net', 'io'];
    };

    Chance.prototype.tld = function () {
        return this.pick(this.tlds());
    };

    Chance.prototype.twitter = function () {
        return '@' + this.word();
    };

    Chance.prototype.url = function (options) {
        options = initOptions(options, { protocol: "http", domain: this.domain(options), domain_prefix: "", path: this.word(), extensions: []});

        var extension = options.extensions.length > 0 ? "." + this.pick(options.extensions) : "";
        var domain = options.domain_prefix ? options.domain_prefix + "." + options.domain : options.domain;

        return options.protocol + "://" + domain + "/" + options.path + extension;
    };

    // -- End Web --

    // -- Location --

    Chance.prototype.address = function (options) {
        options = initOptions(options);
        return this.natural({min: 5, max: 2000}) + ' ' + this.street(options);
    };

    Chance.prototype.altitude = function (options) {
        options = initOptions(options, {fixed: 5, min: 0, max: 8848});
        return this.floating({
            min: options.min,
            max: options.max,
            fixed: options.fixed
        });
    };

    Chance.prototype.areacode = function (options) {
        options = initOptions(options, {parens : true});
        // Don't want area codes to start with 1, or have a 9 as the second digit
        var areacode = this.natural({min: 2, max: 9}).toString() +
                this.natural({min: 0, max: 8}).toString() +
                this.natural({min: 0, max: 9}).toString();

        return options.parens ? '(' + areacode + ')' : areacode;
    };

    Chance.prototype.city = function () {
        return this.capitalize(this.word({syllables: 3}));
    };

    Chance.prototype.coordinates = function (options) {
        return this.latitude(options) + ', ' + this.longitude(options);
    };

    Chance.prototype.countries = function () {
        return this.get("countries");
    };

    Chance.prototype.country = function (options) {
        options = initOptions(options);
        var country = this.pick(this.countries());
        return options.full ? country.name : country.abbreviation;
    };

    Chance.prototype.depth = function (options) {
        options = initOptions(options, {fixed: 5, min: -2550, max: 0});
        return this.floating({
            min: options.min,
            max: options.max,
            fixed: options.fixed
        });
    };

    Chance.prototype.geohash = function (options) {
        options = initOptions(options, { length: 7 });
        return this.string({ length: options.length, pool: '0123456789bcdefghjkmnpqrstuvwxyz' });
    };

    Chance.prototype.geojson = function (options) {
        return this.latitude(options) + ', ' + this.longitude(options) + ', ' + this.altitude(options);
    };

    Chance.prototype.latitude = function (options) {
        options = initOptions(options, {fixed: 5, min: -90, max: 90});
        return this.floating({min: options.min, max: options.max, fixed: options.fixed});
    };

    Chance.prototype.longitude = function (options) {
        options = initOptions(options, {fixed: 5, min: -180, max: 180});
        return this.floating({min: options.min, max: options.max, fixed: options.fixed});
    };

    Chance.prototype.phone = function (options) {
        var self = this,
            numPick,
            ukNum = function (parts) {
                var section = [];
                //fills the section part of the phone number with random numbers.
                parts.sections.forEach(function(n) {
                    section.push(self.string({ pool: '0123456789', length: n}));
                });
                return parts.area + section.join(' ');
            };
        options = initOptions(options, {
            formatted: true,
            country: 'us',
            mobile: false
        });
        if (!options.formatted) {
            options.parens = false;
        }
        var phone;
        switch (options.country) {
            case 'fr':
                if (!options.mobile) {
                    numPick = this.pick([
                        // Valid zone and département codes.
                        '01' + this.pick(['30', '34', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '53', '55', '56', '58', '60', '64', '69', '70', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83']) + self.string({ pool: '0123456789', length: 6}),
                        '02' + this.pick(['14', '18', '22', '23', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '40', '41', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '56', '57', '61', '62', '69', '72', '76', '77', '78', '85', '90', '96', '97', '98', '99']) + self.string({ pool: '0123456789', length: 6}),
                        '03' + this.pick(['10', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '39', '44', '45', '51', '52', '54', '55', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90']) + self.string({ pool: '0123456789', length: 6}),
                        '04' + this.pick(['11', '13', '15', '20', '22', '26', '27', '30', '32', '34', '37', '42', '43', '44', '50', '56', '57', '63', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '88', '89', '90', '91', '92', '93', '94', '95', '97', '98']) + self.string({ pool: '0123456789', length: 6}),
                        '05' + this.pick(['08', '16', '17', '19', '24', '31', '32', '33', '34', '35', '40', '45', '46', '47', '49', '53', '55', '56', '57', '58', '59', '61', '62', '63', '64', '65', '67', '79', '81', '82', '86', '87', '90', '94']) + self.string({ pool: '0123456789', length: 6}),
                        '09' + self.string({ pool: '0123456789', length: 8}),
                    ]);
                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;
                } else {
                    numPick = this.pick(['06', '07']) + self.string({ pool: '0123456789', length: 8});
                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;
                }
                break;
            case 'uk':
                if (!options.mobile) {
                    numPick = this.pick([
                        //valid area codes of major cities/counties followed by random numbers in required format.
                        { area: '01' + this.character({ pool: '234569' }) + '1 ', sections: [3,4] },
                        { area: '020 ' + this.character({ pool: '378' }), sections: [3,4] },
                        { area: '023 ' + this.character({ pool: '89' }), sections: [3,4] },
                        { area: '024 7', sections: [3,4] },
                        { area: '028 ' + this.pick(['25','28','37','71','82','90','92','95']), sections: [2,4] },
                        { area: '012' + this.pick(['04','08','54','76','97','98']) + ' ', sections: [5] },
                        { area: '013' + this.pick(['63','64','84','86']) + ' ', sections: [5] },
                        { area: '014' + this.pick(['04','20','60','61','80','88']) + ' ', sections: [5] },
                        { area: '015' + this.pick(['24','27','62','66']) + ' ', sections: [5] },
                        { area: '016' + this.pick(['06','29','35','47','59','95']) + ' ', sections: [5] },
                        { area: '017' + this.pick(['26','44','50','68']) + ' ', sections: [5] },
                        { area: '018' + this.pick(['27','37','84','97']) + ' ', sections: [5] },
                        { area: '019' + this.pick(['00','05','35','46','49','63','95']) + ' ', sections: [5] }
                    ]);
                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '', 'g');
                } else {
                    numPick = this.pick([
                        { area: '07' + this.pick(['4','5','7','8','9']), sections: [2,6] },
                        { area: '07624 ', sections: [6] }
                    ]);
                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '');
                }
                break;
            case 'us':
                var areacode = this.areacode(options).toString();
                var exchange = this.natural({ min: 2, max: 9 }).toString() +
                    this.natural({ min: 0, max: 9 }).toString() +
                    this.natural({ min: 0, max: 9 }).toString();
                var subscriber = this.natural({ min: 1000, max: 9999 }).toString(); // this could be random [0-9]{4}
                phone = options.formatted ? areacode + ' ' + exchange + '-' + subscriber : areacode + exchange + subscriber;
        }
        return phone;
    };

    Chance.prototype.postal = function () {
        // Postal District
        var pd = this.character({pool: "XVTSRPNKLMHJGECBA"});
        // Forward Sortation Area (FSA)
        var fsa = pd + this.natural({max: 9}) + this.character({alpha: true, casing: "upper"});
        // Local Delivery Unut (LDU)
        var ldu = this.natural({max: 9}) + this.character({alpha: true, casing: "upper"}) + this.natural({max: 9});

        return fsa + " " + ldu;
    };

    Chance.prototype.provinces = function () {
        return this.get("provinces");
    };

    Chance.prototype.province = function (options) {
        return (options && options.full) ?
            this.pick(this.provinces()).name :
            this.pick(this.provinces()).abbreviation;
    };

    Chance.prototype.state = function (options) {
        return (options && options.full) ?
            this.pick(this.states(options)).name :
            this.pick(this.states(options)).abbreviation;
    };

    Chance.prototype.states = function (options) {
        options = initOptions(options);

        var states,
            us_states_and_dc = this.get("us_states_and_dc"),
            territories = this.get("territories"),
            armed_forces = this.get("armed_forces");

        states = us_states_and_dc;

        if (options.territories) {
            states = states.concat(territories);
        }
        if (options.armed_forces) {
            states = states.concat(armed_forces);
        }

        return states;
    };

    Chance.prototype.street = function (options) {
        options = initOptions(options);

        var street = this.word({syllables: 2});
        street = this.capitalize(street);
        street += ' ';
        street += options.short_suffix ?
            this.street_suffix().abbreviation :
            this.street_suffix().name;
        return street;
    };

    Chance.prototype.street_suffix = function () {
        return this.pick(this.street_suffixes());
    };

    Chance.prototype.street_suffixes = function () {
        // These are the most common suffixes.
        return this.get("street_suffixes");
    };

    // Note: only returning US zip codes, internationalization will be a whole
    // other beast to tackle at some point.
    Chance.prototype.zip = function (options) {
        var zip = this.n(this.natural, 5, {max: 9});

        if (options && options.plusfour === true) {
            zip.push('-');
            zip = zip.concat(this.n(this.natural, 4, {max: 9}));
        }

        return zip.join("");
    };

    // -- End Location --

    // -- Time

    Chance.prototype.ampm = function () {
        return this.bool() ? 'am' : 'pm';
    };

    Chance.prototype.date = function (options) {
        var date_string, date;

        // If interval is specified we ignore preset
        if(options && (options.min || options.max)) {
            options = initOptions(options, {
                american: true,
                string: false
            });
            var min = typeof options.min !== "undefined" ? options.min.getTime() : 1;
            // 100,000,000 days measured relative to midnight at the beginning of 01 January, 1970 UTC. http://es5.github.io/#x15.9.1.1
            var max = typeof options.max !== "undefined" ? options.max.getTime() : 8640000000000000;

            date = new Date(this.natural({min: min, max: max}));
        } else {
            var m = this.month({raw: true});
            var daysInMonth = m.days;

            if(options && options.month) {
                // Mod 12 to allow months outside range of 0-11 (not encouraged, but also not prevented).
                daysInMonth = this.get('months')[((options.month % 12) + 12) % 12].days;
            }

            options = initOptions(options, {
                year: parseInt(this.year(), 10),
                // Necessary to subtract 1 because Date() 0-indexes month but not day or year
                // for some reason.
                month: m.numeric - 1,
                day: this.natural({min: 1, max: daysInMonth}),
                hour: this.hour(),
                minute: this.minute(),
                second: this.second(),
                millisecond: this.millisecond(),
                american: true,
                string: false
            });

            date = new Date(options.year, options.month, options.day, options.hour, options.minute, options.second, options.millisecond);
        }

        if (options.american) {
            // Adding 1 to the month is necessary because Date() 0-indexes
            // months but not day for some odd reason.
            date_string = (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear();
        } else {
            date_string = date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();
        }

        return options.string ? date_string : date;
    };

    Chance.prototype.hammertime = function (options) {
        return this.date(options).getTime();
    };

    Chance.prototype.hour = function (options) {
        options = initOptions(options, {min: 1, max: options && options.twentyfour ? 24 : 12});

        testRange(options.min < 1, "Chance: Min cannot be less than 1.");
        testRange(options.twentyfour && options.max > 24, "Chance: Max cannot be greater than 24 for twentyfour option.");
        testRange(!options.twentyfour && options.max > 12, "Chance: Max cannot be greater than 12.");
        testRange(options.min > options.max, "Chance: Min cannot be greater than Max.");

        return this.natural({min: options.min, max: options.max});
    };

    Chance.prototype.millisecond = function () {
        return this.natural({max: 999});
    };

    Chance.prototype.minute = Chance.prototype.second = function (options) {
        options = initOptions(options, {min: 0, max: 59});

        testRange(options.min < 0, "Chance: Min cannot be less than 0.");
        testRange(options.max > 59, "Chance: Max cannot be greater than 59.");
        testRange(options.min > options.max, "Chance: Min cannot be greater than Max.");

        return this.natural({min: options.min, max: options.max});
    };

    Chance.prototype.month = function (options) {
        options = initOptions(options, {min: 1, max: 12});

        testRange(options.min < 1, "Chance: Min cannot be less than 1.");
        testRange(options.max > 12, "Chance: Max cannot be greater than 12.");
        testRange(options.min > options.max, "Chance: Min cannot be greater than Max.");

        var month = this.pick(this.months().slice(options.min - 1, options.max));
        return options.raw ? month : month.name;
    };

    Chance.prototype.months = function () {
        return this.get("months");
    };

    Chance.prototype.second = function () {
        return this.natural({max: 59});
    };

    Chance.prototype.timestamp = function () {
        return this.natural({min: 1, max: parseInt(new Date().getTime() / 1000, 10)});
    };

    Chance.prototype.year = function (options) {
        // Default to current year as min if none specified
        options = initOptions(options, {min: new Date().getFullYear()});

        // Default to one century after current year as max if none specified
        options.max = (typeof options.max !== "undefined") ? options.max : options.min + 100;

        return this.natural(options).toString();
    };

    // -- End Time

    // -- Finance --

    Chance.prototype.cc = function (options) {
        options = initOptions(options);

        var type, number, to_generate;

        type = (options.type) ?
                    this.cc_type({ name: options.type, raw: true }) :
                    this.cc_type({ raw: true });

        number = type.prefix.split("");
        to_generate = type.length - type.prefix.length - 1;

        // Generates n - 1 digits
        number = number.concat(this.n(this.integer, to_generate, {min: 0, max: 9}));

        // Generates the last digit according to Luhn algorithm
        number.push(this.luhn_calculate(number.join("")));

        return number.join("");
    };

    Chance.prototype.cc_types = function () {
        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29
        return this.get("cc_types");
    };

    Chance.prototype.cc_type = function (options) {
        options = initOptions(options);
        var types = this.cc_types(),
            type = null;

        if (options.name) {
            for (var i = 0; i < types.length; i++) {
                // Accept either name or short_name to specify card type
                if (types[i].name === options.name || types[i].short_name === options.name) {
                    type = types[i];
                    break;
                }
            }
            if (type === null) {
                throw new RangeError("Credit card type '" + options.name + "'' is not supported");
            }
        } else {
            type = this.pick(types);
        }

        return options.raw ? type : type.name;
    };

    //return all world currency by ISO 4217
    Chance.prototype.currency_types = function () {
        return this.get("currency_types");
    };

    //return random world currency by ISO 4217
    Chance.prototype.currency = function () {
        return this.pick(this.currency_types());
    };

    //Return random correct currency exchange pair (e.g. EUR/USD) or array of currency code
    Chance.prototype.currency_pair = function (returnAsString) {
        var currencies = this.unique(this.currency, 2, {
            comparator: function(arr, val) {

                return arr.reduce(function(acc, item) {
                    // If a match has been found, short circuit check and just return
                    return acc || (item.code === val.code);
                }, false);
            }
        });

        if (returnAsString) {
            return currencies[0].code + '/' + currencies[1].code;
        } else {
            return currencies;
        }
    };

    Chance.prototype.dollar = function (options) {
        // By default, a somewhat more sane max for dollar than all available numbers
        options = initOptions(options, {max : 10000, min : 0});

        var dollar = this.floating({min: options.min, max: options.max, fixed: 2}).toString(),
            cents = dollar.split('.')[1];

        if (cents === undefined) {
            dollar += '.00';
        } else if (cents.length < 2) {
            dollar = dollar + '0';
        }

        if (dollar < 0) {
            return '-$' + dollar.replace('-', '');
        } else {
            return '$' + dollar;
        }
    };

    Chance.prototype.exp = function (options) {
        options = initOptions(options);
        var exp = {};

        exp.year = this.exp_year();

        // If the year is this year, need to ensure month is greater than the
        // current month or this expiration will not be valid
        if (exp.year === (new Date().getFullYear()).toString()) {
            exp.month = this.exp_month({future: true});
        } else {
            exp.month = this.exp_month();
        }

        return options.raw ? exp : exp.month + '/' + exp.year;
    };

    Chance.prototype.exp_month = function (options) {
        options = initOptions(options);
        var month, month_int,
            // Date object months are 0 indexed
            curMonth = new Date().getMonth() + 1;

        if (options.future) {
            do {
                month = this.month({raw: true}).numeric;
                month_int = parseInt(month, 10);
            } while (month_int <= curMonth);
        } else {
            month = this.month({raw: true}).numeric;
        }

        return month;
    };

    Chance.prototype.exp_year = function () {
        return this.year({max: new Date().getFullYear() + 10});
    };

    // -- End Finance

    // -- Miscellaneous --

    // Dice - For all the board game geeks out there, myself included ;)
    function diceFn (range) {
        return function () {
            return this.natural(range);
        };
    }
    Chance.prototype.d4 = diceFn({min: 1, max: 4});
    Chance.prototype.d6 = diceFn({min: 1, max: 6});
    Chance.prototype.d8 = diceFn({min: 1, max: 8});
    Chance.prototype.d10 = diceFn({min: 1, max: 10});
    Chance.prototype.d12 = diceFn({min: 1, max: 12});
    Chance.prototype.d20 = diceFn({min: 1, max: 20});
    Chance.prototype.d30 = diceFn({min: 1, max: 30});
    Chance.prototype.d100 = diceFn({min: 1, max: 100});

    Chance.prototype.rpg = function (thrown, options) {
        options = initOptions(options);
        if (!thrown) {
            throw new RangeError("A type of die roll must be included");
        } else {
            var bits = thrown.toLowerCase().split("d"),
                rolls = [];

            if (bits.length !== 2 || !parseInt(bits[0], 10) || !parseInt(bits[1], 10)) {
                throw new Error("Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die");
            }
            for (var i = bits[0]; i > 0; i--) {
                rolls[i - 1] = this.natural({min: 1, max: bits[1]});
            }
            return (typeof options.sum !== 'undefined' && options.sum) ? rolls.reduce(function (p, c) { return p + c; }) : rolls;
        }
    };

    // Guid
    Chance.prototype.guid = function (options) {
        options = initOptions(options, { version: 5 });

        var guid_pool = "abcdef1234567890",
            variant_pool = "ab89",
            guid = this.string({ pool: guid_pool, length: 8 }) + '-' +
                   this.string({ pool: guid_pool, length: 4 }) + '-' +
                   // The Version
                   options.version +
                   this.string({ pool: guid_pool, length: 3 }) + '-' +
                   // The Variant
                   this.string({ pool: variant_pool, length: 1 }) +
                   this.string({ pool: guid_pool, length: 3 }) + '-' +
                   this.string({ pool: guid_pool, length: 12 });
        return guid;
    };

    // Hash
    Chance.prototype.hash = function (options) {
        options = initOptions(options, {length : 40, casing: 'lower'});
        var pool = options.casing === 'upper' ? HEX_POOL.toUpperCase() : HEX_POOL;
        return this.string({pool: pool, length: options.length});
    };

    Chance.prototype.luhn_check = function (num) {
        var str = num.toString();
        var checkDigit = +str.substring(str.length - 1);
        return checkDigit === this.luhn_calculate(+str.substring(0, str.length - 1));
    };

    Chance.prototype.luhn_calculate = function (num) {
        var digits = num.toString().split("").reverse();
        var sum = 0;
        var digit;

        for (var i = 0, l = digits.length; l > i; ++i) {
            digit = +digits[i];
            if (i % 2 === 0) {
                digit *= 2;
                if (digit > 9) {
                    digit -= 9;
                }
            }
            sum += digit;
        }
        return (sum * 9) % 10;
    };

    // MD5 Hash
    Chance.prototype.md5 = function(options) {
        var opts = { str: '', key: null, raw: false };

        if (!options) {
            opts.str = this.string();
            options = {};
        }
        else if (typeof options === 'string') {
            opts.str = options;
            options = {};
        }
        else if (typeof options !== 'object') {
            return null;
        }
        else if(options.constructor === 'Array') {
            return null;
        }

        opts = initOptions(options, opts);

        if(!opts.str){
            throw new Error('A parameter is required to return an md5 hash.');
        }

        return this.bimd5.md5(opts.str, opts.key, opts.raw);
    };

    var data = {

        firstNames: {
            "male": ["James", "John", "Robert", "Michael", "William", "David", "Richard", "Joseph", "Charles", "Thomas", "Christopher", "Daniel", "Matthew", "George", "Donald", "Anthony", "Paul", "Mark", "Edward", "Steven", "Kenneth", "Andrew", "Brian", "Joshua", "Kevin", "Ronald", "Timothy", "Jason", "Jeffrey", "Frank", "Gary", "Ryan", "Nicholas", "Eric", "Stephen", "Jacob", "Larry", "Jonathan", "Scott", "Raymond", "Justin", "Brandon", "Gregory", "Samuel", "Benjamin", "Patrick", "Jack", "Henry", "Walter", "Dennis", "Jerry", "Alexander", "Peter", "Tyler", "Douglas", "Harold", "Aaron", "Jose", "Adam", "Arthur", "Zachary", "Carl", "Nathan", "Albert", "Kyle", "Lawrence", "Joe", "Willie", "Gerald", "Roger", "Keith", "Jeremy", "Terry", "Harry", "Ralph", "Sean", "Jesse", "Roy", "Louis", "Billy", "Austin", "Bruce", "Eugene", "Christian", "Bryan", "Wayne", "Russell", "Howard", "Fred", "Ethan", "Jordan", "Philip", "Alan", "Juan", "Randy", "Vincent", "Bobby", "Dylan", "Johnny", "Phillip", "Victor", "Clarence", "Ernest", "Martin", "Craig", "Stanley", "Shawn", "Travis", "Bradley", "Leonard", "Earl", "Gabriel", "Jimmy", "Francis", "Todd", "Noah", "Danny", "Dale", "Cody", "Carlos", "Allen", "Frederick", "Logan", "Curtis", "Alex", "Joel", "Luis", "Norman", "Marvin", "Glenn", "Tony", "Nathaniel", "Rodney", "Melvin", "Alfred", "Steve", "Cameron", "Chad", "Edwin", "Caleb", "Evan", "Antonio", "Lee", "Herbert", "Jeffery", "Isaac", "Derek", "Ricky", "Marcus", "Theodore", "Elijah", "Luke", "Jesus", "Eddie", "Troy", "Mike", "Dustin", "Ray", "Adrian", "Bernard", "Leroy", "Angel", "Randall", "Wesley", "Ian", "Jared", "Mason", "Hunter", "Calvin", "Oscar", "Clifford", "Jay", "Shane", "Ronnie", "Barry", "Lucas", "Corey", "Manuel", "Leo", "Tommy", "Warren", "Jackson", "Isaiah", "Connor", "Don", "Dean", "Jon", "Julian", "Miguel", "Bill", "Lloyd", "Charlie", "Mitchell", "Leon", "Jerome", "Darrell", "Jeremiah", "Alvin", "Brett", "Seth", "Floyd", "Jim", "Blake", "Micheal", "Gordon", "Trevor", "Lewis", "Erik", "Edgar", "Vernon", "Devin", "Gavin", "Jayden", "Chris", "Clyde", "Tom", "Derrick", "Mario", "Brent", "Marc", "Herman", "Chase", "Dominic", "Ricardo", "Franklin", "Maurice", "Max", "Aiden", "Owen", "Lester", "Gilbert", "Elmer", "Gene", "Francisco", "Glen", "Cory", "Garrett", "Clayton", "Sam", "Jorge", "Chester", "Alejandro", "Jeff", "Harvey", "Milton", "Cole", "Ivan", "Andre", "Duane", "Landon"],
            "female": ["Mary", "Emma", "Elizabeth", "Minnie", "Margaret", "Ida", "Alice", "Bertha", "Sarah", "Annie", "Clara", "Ella", "Florence", "Cora", "Martha", "Laura", "Nellie", "Grace", "Carrie", "Maude", "Mabel", "Bessie", "Jennie", "Gertrude", "Julia", "Hattie", "Edith", "Mattie", "Rose", "Catherine", "Lillian", "Ada", "Lillie", "Helen", "Jessie", "Louise", "Ethel", "Lula", "Myrtle", "Eva", "Frances", "Lena", "Lucy", "Edna", "Maggie", "Pearl", "Daisy", "Fannie", "Josephine", "Dora", "Rosa", "Katherine", "Agnes", "Marie", "Nora", "May", "Mamie", "Blanche", "Stella", "Ellen", "Nancy", "Effie", "Sallie", "Nettie", "Della", "Lizzie", "Flora", "Susie", "Maud", "Mae", "Etta", "Harriet", "Sadie", "Caroline", "Katie", "Lydia", "Elsie", "Kate", "Susan", "Mollie", "Alma", "Addie", "Georgia", "Eliza", "Lulu", "Nannie", "Lottie", "Amanda", "Belle", "Charlotte", "Rebecca", "Ruth", "Viola", "Olive", "Amelia", "Hannah", "Jane", "Virginia", "Emily", "Matilda", "Irene", "Kathryn", "Esther", "Willie", "Henrietta", "Ollie", "Amy", "Rachel", "Sara", "Estella", "Theresa", "Augusta", "Ora", "Pauline", "Josie", "Lola", "Sophia", "Leona", "Anne", "Mildred", "Ann", "Beulah", "Callie", "Lou", "Delia", "Eleanor", "Barbara", "Iva", "Louisa", "Maria", "Mayme", "Evelyn", "Estelle", "Nina", "Betty", "Marion", "Bettie", "Dorothy", "Luella", "Inez", "Lela", "Rosie", "Allie", "Millie", "Janie", "Cornelia", "Victoria", "Ruby", "Winifred", "Alta", "Celia", "Christine", "Beatrice", "Birdie", "Harriett", "Mable", "Myra", "Sophie", "Tillie", "Isabel", "Sylvia", "Carolyn", "Isabelle", "Leila", "Sally", "Ina", "Essie", "Bertie", "Nell", "Alberta", "Katharine", "Lora", "Rena", "Mina", "Rhoda", "Mathilda", "Abbie", "Eula", "Dollie", "Hettie", "Eunice", "Fanny", "Ola", "Lenora", "Adelaide", "Christina", "Lelia", "Nelle", "Sue", "Johanna", "Lilly", "Lucinda", "Minerva", "Lettie", "Roxie", "Cynthia", "Helena", "Hilda", "Hulda", "Bernice", "Genevieve", "Jean", "Cordelia", "Marian", "Francis", "Jeanette", "Adeline", "Gussie", "Leah", "Lois", "Lura", "Mittie", "Hallie", "Isabella", "Olga", "Phoebe", "Teresa", "Hester", "Lida", "Lina", "Winnie", "Claudia", "Marguerite", "Vera", "Cecelia", "Bess", "Emilie", "John", "Rosetta", "Verna", "Myrtie", "Cecilia", "Elva", "Olivia", "Ophelia", "Georgie", "Elnora", "Violet", "Adele", "Lily", "Linnie", "Loretta", "Madge", "Polly", "Virgie", "Eugenia", "Lucile", "Lucille", "Mabelle", "Rosalie"]
        },

        lastNames: ['Smith', 'Johnson', 'Williams', 'Jones', 'Brown', 'Davis', 'Miller', 'Wilson', 'Moore', 'Taylor', 'Anderson', 'Thomas', 'Jackson', 'White', 'Harris', 'Martin', 'Thompson', 'Garcia', 'Martinez', 'Robinson', 'Clark', 'Rodriguez', 'Lewis', 'Lee', 'Walker', 'Hall', 'Allen', 'Young', 'Hernandez', 'King', 'Wright', 'Lopez', 'Hill', 'Scott', 'Green', 'Adams', 'Baker', 'Gonzalez', 'Nelson', 'Carter', 'Mitchell', 'Perez', 'Roberts', 'Turner', 'Phillips', 'Campbell', 'Parker', 'Evans', 'Edwards', 'Collins', 'Stewart', 'Sanchez', 'Morris', 'Rogers', 'Reed', 'Cook', 'Morgan', 'Bell', 'Murphy', 'Bailey', 'Rivera', 'Cooper', 'Richardson', 'Cox', 'Howard', 'Ward', 'Torres', 'Peterson', 'Gray', 'Ramirez', 'James', 'Watson', 'Brooks', 'Kelly', 'Sanders', 'Price', 'Bennett', 'Wood', 'Barnes', 'Ross', 'Henderson', 'Coleman', 'Jenkins', 'Perry', 'Powell', 'Long', 'Patterson', 'Hughes', 'Flores', 'Washington', 'Butler', 'Simmons', 'Foster', 'Gonzales', 'Bryant', 'Alexander', 'Russell', 'Griffin', 'Diaz', 'Hayes', 'Myers', 'Ford', 'Hamilton', 'Graham', 'Sullivan', 'Wallace', 'Woods', 'Cole', 'West', 'Jordan', 'Owens', 'Reynolds', 'Fisher', 'Ellis', 'Harrison', 'Gibson', 'McDonald', 'Cruz', 'Marshall', 'Ortiz', 'Gomez', 'Murray', 'Freeman', 'Wells', 'Webb', 'Simpson', 'Stevens', 'Tucker', 'Porter', 'Hunter', 'Hicks', 'Crawford', 'Henry', 'Boyd', 'Mason', 'Morales', 'Kennedy', 'Warren', 'Dixon', 'Ramos', 'Reyes', 'Burns', 'Gordon', 'Shaw', 'Holmes', 'Rice', 'Robertson', 'Hunt', 'Black', 'Daniels', 'Palmer', 'Mills', 'Nichols', 'Grant', 'Knight', 'Ferguson', 'Rose', 'Stone', 'Hawkins', 'Dunn', 'Perkins', 'Hudson', 'Spencer', 'Gardner', 'Stephens', 'Payne', 'Pierce', 'Berry', 'Matthews', 'Arnold', 'Wagner', 'Willis', 'Ray', 'Watkins', 'Olson', 'Carroll', 'Duncan', 'Snyder', 'Hart', 'Cunningham', 'Bradley', 'Lane', 'Andrews', 'Ruiz', 'Harper', 'Fox', 'Riley', 'Armstrong', 'Carpenter', 'Weaver', 'Greene', 'Lawrence', 'Elliott', 'Chavez', 'Sims', 'Austin', 'Peters', 'Kelley', 'Franklin', 'Lawson', 'Fields', 'Gutierrez', 'Ryan', 'Schmidt', 'Carr', 'Vasquez', 'Castillo', 'Wheeler', 'Chapman', 'Oliver', 'Montgomery', 'Richards', 'Williamson', 'Johnston', 'Banks', 'Meyer', 'Bishop', 'McCoy', 'Howell', 'Alvarez', 'Morrison', 'Hansen', 'Fernandez', 'Garza', 'Harvey', 'Little', 'Burton', 'Stanley', 'Nguyen', 'George', 'Jacobs', 'Reid', 'Kim', 'Fuller', 'Lynch', 'Dean', 'Gilbert', 'Garrett', 'Romero', 'Welch', 'Larson', 'Frazier', 'Burke', 'Hanson', 'Day', 'Mendoza', 'Moreno', 'Bowman', 'Medina', 'Fowler', 'Brewer', 'Hoffman', 'Carlson', 'Silva', 'Pearson', 'Holland', 'Douglas', 'Fleming', 'Jensen', 'Vargas', 'Byrd', 'Davidson', 'Hopkins', 'May', 'Terry', 'Herrera', 'Wade', 'Soto', 'Walters', 'Curtis', 'Neal', 'Caldwell', 'Lowe', 'Jennings', 'Barnett', 'Graves', 'Jimenez', 'Horton', 'Shelton', 'Barrett', 'Obrien', 'Castro', 'Sutton', 'Gregory', 'McKinney', 'Lucas', 'Miles', 'Craig', 'Rodriquez', 'Chambers', 'Holt', 'Lambert', 'Fletcher', 'Watts', 'Bates', 'Hale', 'Rhodes', 'Pena', 'Beck', 'Newman', 'Haynes', 'McDaniel', 'Mendez', 'Bush', 'Vaughn', 'Parks', 'Dawson', 'Santiago', 'Norris', 'Hardy', 'Love', 'Steele', 'Curry', 'Powers', 'Schultz', 'Barker', 'Guzman', 'Page', 'Munoz', 'Ball', 'Keller', 'Chandler', 'Weber', 'Leonard', 'Walsh', 'Lyons', 'Ramsey', 'Wolfe', 'Schneider', 'Mullins', 'Benson', 'Sharp', 'Bowen', 'Daniel', 'Barber', 'Cummings', 'Hines', 'Baldwin', 'Griffith', 'Valdez', 'Hubbard', 'Salazar', 'Reeves', 'Warner', 'Stevenson', 'Burgess', 'Santos', 'Tate', 'Cross', 'Garner', 'Mann', 'Mack', 'Moss', 'Thornton', 'Dennis', 'McGee', 'Farmer', 'Delgado', 'Aguilar', 'Vega', 'Glover', 'Manning', 'Cohen', 'Harmon', 'Rodgers', 'Robbins', 'Newton', 'Todd', 'Blair', 'Higgins', 'Ingram', 'Reese', 'Cannon', 'Strickland', 'Townsend', 'Potter', 'Goodwin', 'Walton', 'Rowe', 'Hampton', 'Ortega', 'Patton', 'Swanson', 'Joseph', 'Francis', 'Goodman', 'Maldonado', 'Yates', 'Becker', 'Erickson', 'Hodges', 'Rios', 'Conner', 'Adkins', 'Webster', 'Norman', 'Malone', 'Hammond', 'Flowers', 'Cobb', 'Moody', 'Quinn', 'Blake', 'Maxwell', 'Pope', 'Floyd', 'Osborne', 'Paul', 'McCarthy', 'Guerrero', 'Lindsey', 'Estrada', 'Sandoval', 'Gibbs', 'Tyler', 'Gross', 'Fitzgerald', 'Stokes', 'Doyle', 'Sherman', 'Saunders', 'Wise', 'Colon', 'Gill', 'Alvarado', 'Greer', 'Padilla', 'Simon', 'Waters', 'Nunez', 'Ballard', 'Schwartz', 'McBride', 'Houston', 'Christensen', 'Klein', 'Pratt', 'Briggs', 'Parsons', 'McLaughlin', 'Zimmerman', 'French', 'Buchanan', 'Moran', 'Copeland', 'Roy', 'Pittman', 'Brady', 'McCormick', 'Holloway', 'Brock', 'Poole', 'Frank', 'Logan', 'Owen', 'Bass', 'Marsh', 'Drake', 'Wong', 'Jefferson', 'Park', 'Morton', 'Abbott', 'Sparks', 'Patrick', 'Norton', 'Huff', 'Clayton', 'Massey', 'Lloyd', 'Figueroa', 'Carson', 'Bowers', 'Roberson', 'Barton', 'Tran', 'Lamb', 'Harrington', 'Casey', 'Boone', 'Cortez', 'Clarke', 'Mathis', 'Singleton', 'Wilkins', 'Cain', 'Bryan', 'Underwood', 'Hogan', 'McKenzie', 'Collier', 'Luna', 'Phelps', 'McGuire', 'Allison', 'Bridges', 'Wilkerson', 'Nash', 'Summers', 'Atkins'],

        // Data taken from https://github.com/umpirsky/country-list/blob/master/country/cldr/en_US/country.json
        countries: [{"name":"Afghanistan","abbreviation":"AF"},{"name":"Albania","abbreviation":"AL"},{"name":"Algeria","abbreviation":"DZ"},{"name":"American Samoa","abbreviation":"AS"},{"name":"Andorra","abbreviation":"AD"},{"name":"Angola","abbreviation":"AO"},{"name":"Anguilla","abbreviation":"AI"},{"name":"Antarctica","abbreviation":"AQ"},{"name":"Antigua and Barbuda","abbreviation":"AG"},{"name":"Argentina","abbreviation":"AR"},{"name":"Armenia","abbreviation":"AM"},{"name":"Aruba","abbreviation":"AW"},{"name":"Australia","abbreviation":"AU"},{"name":"Austria","abbreviation":"AT"},{"name":"Azerbaijan","abbreviation":"AZ"},{"name":"Bahamas","abbreviation":"BS"},{"name":"Bahrain","abbreviation":"BH"},{"name":"Bangladesh","abbreviation":"BD"},{"name":"Barbados","abbreviation":"BB"},{"name":"Belarus","abbreviation":"BY"},{"name":"Belgium","abbreviation":"BE"},{"name":"Belize","abbreviation":"BZ"},{"name":"Benin","abbreviation":"BJ"},{"name":"Bermuda","abbreviation":"BM"},{"name":"Bhutan","abbreviation":"BT"},{"name":"Bolivia","abbreviation":"BO"},{"name":"Bosnia and Herzegovina","abbreviation":"BA"},{"name":"Botswana","abbreviation":"BW"},{"name":"Bouvet Island","abbreviation":"BV"},{"name":"Brazil","abbreviation":"BR"},{"name":"British Antarctic Territory","abbreviation":"BQ"},{"name":"British Indian Ocean Territory","abbreviation":"IO"},{"name":"British Virgin Islands","abbreviation":"VG"},{"name":"Brunei","abbreviation":"BN"},{"name":"Bulgaria","abbreviation":"BG"},{"name":"Burkina Faso","abbreviation":"BF"},{"name":"Burundi","abbreviation":"BI"},{"name":"Cambodia","abbreviation":"KH"},{"name":"Cameroon","abbreviation":"CM"},{"name":"Canada","abbreviation":"CA"},{"name":"Canton and Enderbury Islands","abbreviation":"CT"},{"name":"Cape Verde","abbreviation":"CV"},{"name":"Cayman Islands","abbreviation":"KY"},{"name":"Central African Republic","abbreviation":"CF"},{"name":"Chad","abbreviation":"TD"},{"name":"Chile","abbreviation":"CL"},{"name":"China","abbreviation":"CN"},{"name":"Christmas Island","abbreviation":"CX"},{"name":"Cocos [Keeling] Islands","abbreviation":"CC"},{"name":"Colombia","abbreviation":"CO"},{"name":"Comoros","abbreviation":"KM"},{"name":"Congo - Brazzaville","abbreviation":"CG"},{"name":"Congo - Kinshasa","abbreviation":"CD"},{"name":"Cook Islands","abbreviation":"CK"},{"name":"Costa Rica","abbreviation":"CR"},{"name":"Croatia","abbreviation":"HR"},{"name":"Cuba","abbreviation":"CU"},{"name":"Cyprus","abbreviation":"CY"},{"name":"Czech Republic","abbreviation":"CZ"},{"name":"Côte d’Ivoire","abbreviation":"CI"},{"name":"Denmark","abbreviation":"DK"},{"name":"Djibouti","abbreviation":"DJ"},{"name":"Dominica","abbreviation":"DM"},{"name":"Dominican Republic","abbreviation":"DO"},{"name":"Dronning Maud Land","abbreviation":"NQ"},{"name":"East Germany","abbreviation":"DD"},{"name":"Ecuador","abbreviation":"EC"},{"name":"Egypt","abbreviation":"EG"},{"name":"El Salvador","abbreviation":"SV"},{"name":"Equatorial Guinea","abbreviation":"GQ"},{"name":"Eritrea","abbreviation":"ER"},{"name":"Estonia","abbreviation":"EE"},{"name":"Ethiopia","abbreviation":"ET"},{"name":"Falkland Islands","abbreviation":"FK"},{"name":"Faroe Islands","abbreviation":"FO"},{"name":"Fiji","abbreviation":"FJ"},{"name":"Finland","abbreviation":"FI"},{"name":"France","abbreviation":"FR"},{"name":"French Guiana","abbreviation":"GF"},{"name":"French Polynesia","abbreviation":"PF"},{"name":"French Southern Territories","abbreviation":"TF"},{"name":"French Southern and Antarctic Territories","abbreviation":"FQ"},{"name":"Gabon","abbreviation":"GA"},{"name":"Gambia","abbreviation":"GM"},{"name":"Georgia","abbreviation":"GE"},{"name":"Germany","abbreviation":"DE"},{"name":"Ghana","abbreviation":"GH"},{"name":"Gibraltar","abbreviation":"GI"},{"name":"Greece","abbreviation":"GR"},{"name":"Greenland","abbreviation":"GL"},{"name":"Grenada","abbreviation":"GD"},{"name":"Guadeloupe","abbreviation":"GP"},{"name":"Guam","abbreviation":"GU"},{"name":"Guatemala","abbreviation":"GT"},{"name":"Guernsey","abbreviation":"GG"},{"name":"Guinea","abbreviation":"GN"},{"name":"Guinea-Bissau","abbreviation":"GW"},{"name":"Guyana","abbreviation":"GY"},{"name":"Haiti","abbreviation":"HT"},{"name":"Heard Island and McDonald Islands","abbreviation":"HM"},{"name":"Honduras","abbreviation":"HN"},{"name":"Hong Kong SAR China","abbreviation":"HK"},{"name":"Hungary","abbreviation":"HU"},{"name":"Iceland","abbreviation":"IS"},{"name":"India","abbreviation":"IN"},{"name":"Indonesia","abbreviation":"ID"},{"name":"Iran","abbreviation":"IR"},{"name":"Iraq","abbreviation":"IQ"},{"name":"Ireland","abbreviation":"IE"},{"name":"Isle of Man","abbreviation":"IM"},{"name":"Israel","abbreviation":"IL"},{"name":"Italy","abbreviation":"IT"},{"name":"Jamaica","abbreviation":"JM"},{"name":"Japan","abbreviation":"JP"},{"name":"Jersey","abbreviation":"JE"},{"name":"Johnston Island","abbreviation":"JT"},{"name":"Jordan","abbreviation":"JO"},{"name":"Kazakhstan","abbreviation":"KZ"},{"name":"Kenya","abbreviation":"KE"},{"name":"Kiribati","abbreviation":"KI"},{"name":"Kuwait","abbreviation":"KW"},{"name":"Kyrgyzstan","abbreviation":"KG"},{"name":"Laos","abbreviation":"LA"},{"name":"Latvia","abbreviation":"LV"},{"name":"Lebanon","abbreviation":"LB"},{"name":"Lesotho","abbreviation":"LS"},{"name":"Liberia","abbreviation":"LR"},{"name":"Libya","abbreviation":"LY"},{"name":"Liechtenstein","abbreviation":"LI"},{"name":"Lithuania","abbreviation":"LT"},{"name":"Luxembourg","abbreviation":"LU"},{"name":"Macau SAR China","abbreviation":"MO"},{"name":"Macedonia","abbreviation":"MK"},{"name":"Madagascar","abbreviation":"MG"},{"name":"Malawi","abbreviation":"MW"},{"name":"Malaysia","abbreviation":"MY"},{"name":"Maldives","abbreviation":"MV"},{"name":"Mali","abbreviation":"ML"},{"name":"Malta","abbreviation":"MT"},{"name":"Marshall Islands","abbreviation":"MH"},{"name":"Martinique","abbreviation":"MQ"},{"name":"Mauritania","abbreviation":"MR"},{"name":"Mauritius","abbreviation":"MU"},{"name":"Mayotte","abbreviation":"YT"},{"name":"Metropolitan France","abbreviation":"FX"},{"name":"Mexico","abbreviation":"MX"},{"name":"Micronesia","abbreviation":"FM"},{"name":"Midway Islands","abbreviation":"MI"},{"name":"Moldova","abbreviation":"MD"},{"name":"Monaco","abbreviation":"MC"},{"name":"Mongolia","abbreviation":"MN"},{"name":"Montenegro","abbreviation":"ME"},{"name":"Montserrat","abbreviation":"MS"},{"name":"Morocco","abbreviation":"MA"},{"name":"Mozambique","abbreviation":"MZ"},{"name":"Myanmar [Burma]","abbreviation":"MM"},{"name":"Namibia","abbreviation":"NA"},{"name":"Nauru","abbreviation":"NR"},{"name":"Nepal","abbreviation":"NP"},{"name":"Netherlands","abbreviation":"NL"},{"name":"Netherlands Antilles","abbreviation":"AN"},{"name":"Neutral Zone","abbreviation":"NT"},{"name":"New Caledonia","abbreviation":"NC"},{"name":"New Zealand","abbreviation":"NZ"},{"name":"Nicaragua","abbreviation":"NI"},{"name":"Niger","abbreviation":"NE"},{"name":"Nigeria","abbreviation":"NG"},{"name":"Niue","abbreviation":"NU"},{"name":"Norfolk Island","abbreviation":"NF"},{"name":"North Korea","abbreviation":"KP"},{"name":"North Vietnam","abbreviation":"VD"},{"name":"Northern Mariana Islands","abbreviation":"MP"},{"name":"Norway","abbreviation":"NO"},{"name":"Oman","abbreviation":"OM"},{"name":"Pacific Islands Trust Territory","abbreviation":"PC"},{"name":"Pakistan","abbreviation":"PK"},{"name":"Palau","abbreviation":"PW"},{"name":"Palestinian Territories","abbreviation":"PS"},{"name":"Panama","abbreviation":"PA"},{"name":"Panama Canal Zone","abbreviation":"PZ"},{"name":"Papua New Guinea","abbreviation":"PG"},{"name":"Paraguay","abbreviation":"PY"},{"name":"People's Democratic Republic of Yemen","abbreviation":"YD"},{"name":"Peru","abbreviation":"PE"},{"name":"Philippines","abbreviation":"PH"},{"name":"Pitcairn Islands","abbreviation":"PN"},{"name":"Poland","abbreviation":"PL"},{"name":"Portugal","abbreviation":"PT"},{"name":"Puerto Rico","abbreviation":"PR"},{"name":"Qatar","abbreviation":"QA"},{"name":"Romania","abbreviation":"RO"},{"name":"Russia","abbreviation":"RU"},{"name":"Rwanda","abbreviation":"RW"},{"name":"Réunion","abbreviation":"RE"},{"name":"Saint Barthélemy","abbreviation":"BL"},{"name":"Saint Helena","abbreviation":"SH"},{"name":"Saint Kitts and Nevis","abbreviation":"KN"},{"name":"Saint Lucia","abbreviation":"LC"},{"name":"Saint Martin","abbreviation":"MF"},{"name":"Saint Pierre and Miquelon","abbreviation":"PM"},{"name":"Saint Vincent and the Grenadines","abbreviation":"VC"},{"name":"Samoa","abbreviation":"WS"},{"name":"San Marino","abbreviation":"SM"},{"name":"Saudi Arabia","abbreviation":"SA"},{"name":"Senegal","abbreviation":"SN"},{"name":"Serbia","abbreviation":"RS"},{"name":"Serbia and Montenegro","abbreviation":"CS"},{"name":"Seychelles","abbreviation":"SC"},{"name":"Sierra Leone","abbreviation":"SL"},{"name":"Singapore","abbreviation":"SG"},{"name":"Slovakia","abbreviation":"SK"},{"name":"Slovenia","abbreviation":"SI"},{"name":"Solomon Islands","abbreviation":"SB"},{"name":"Somalia","abbreviation":"SO"},{"name":"South Africa","abbreviation":"ZA"},{"name":"South Georgia and the South Sandwich Islands","abbreviation":"GS"},{"name":"South Korea","abbreviation":"KR"},{"name":"Spain","abbreviation":"ES"},{"name":"Sri Lanka","abbreviation":"LK"},{"name":"Sudan","abbreviation":"SD"},{"name":"Suriname","abbreviation":"SR"},{"name":"Svalbard and Jan Mayen","abbreviation":"SJ"},{"name":"Swaziland","abbreviation":"SZ"},{"name":"Sweden","abbreviation":"SE"},{"name":"Switzerland","abbreviation":"CH"},{"name":"Syria","abbreviation":"SY"},{"name":"São Tomé and Príncipe","abbreviation":"ST"},{"name":"Taiwan","abbreviation":"TW"},{"name":"Tajikistan","abbreviation":"TJ"},{"name":"Tanzania","abbreviation":"TZ"},{"name":"Thailand","abbreviation":"TH"},{"name":"Timor-Leste","abbreviation":"TL"},{"name":"Togo","abbreviation":"TG"},{"name":"Tokelau","abbreviation":"TK"},{"name":"Tonga","abbreviation":"TO"},{"name":"Trinidad and Tobago","abbreviation":"TT"},{"name":"Tunisia","abbreviation":"TN"},{"name":"Turkey","abbreviation":"TR"},{"name":"Turkmenistan","abbreviation":"TM"},{"name":"Turks and Caicos Islands","abbreviation":"TC"},{"name":"Tuvalu","abbreviation":"TV"},{"name":"U.S. Minor Outlying Islands","abbreviation":"UM"},{"name":"U.S. Miscellaneous Pacific Islands","abbreviation":"PU"},{"name":"U.S. Virgin Islands","abbreviation":"VI"},{"name":"Uganda","abbreviation":"UG"},{"name":"Ukraine","abbreviation":"UA"},{"name":"Union of Soviet Socialist Republics","abbreviation":"SU"},{"name":"United Arab Emirates","abbreviation":"AE"},{"name":"United Kingdom","abbreviation":"GB"},{"name":"United States","abbreviation":"US"},{"name":"Unknown or Invalid Region","abbreviation":"ZZ"},{"name":"Uruguay","abbreviation":"UY"},{"name":"Uzbekistan","abbreviation":"UZ"},{"name":"Vanuatu","abbreviation":"VU"},{"name":"Vatican City","abbreviation":"VA"},{"name":"Venezuela","abbreviation":"VE"},{"name":"Vietnam","abbreviation":"VN"},{"name":"Wake Island","abbreviation":"WK"},{"name":"Wallis and Futuna","abbreviation":"WF"},{"name":"Western Sahara","abbreviation":"EH"},{"name":"Yemen","abbreviation":"YE"},{"name":"Zambia","abbreviation":"ZM"},{"name":"Zimbabwe","abbreviation":"ZW"},{"name":"Åland Islands","abbreviation":"AX"}],

        provinces: [
            {name: 'Alberta', abbreviation: 'AB'},
            {name: 'British Columbia', abbreviation: 'BC'},
            {name: 'Manitoba', abbreviation: 'MB'},
            {name: 'New Brunswick', abbreviation: 'NB'},
            {name: 'Newfoundland and Labrador', abbreviation: 'NL'},
            {name: 'Nova Scotia', abbreviation: 'NS'},
            {name: 'Ontario', abbreviation: 'ON'},
            {name: 'Prince Edward Island', abbreviation: 'PE'},
            {name: 'Quebec', abbreviation: 'QC'},
            {name: 'Saskatchewan', abbreviation: 'SK'},

            // The case could be made that the following are not actually provinces
            // since they are technically considered "territories" however they all
            // look the same on an envelope!
            {name: 'Northwest Territories', abbreviation: 'NT'},
            {name: 'Nunavut', abbreviation: 'NU'},
            {name: 'Yukon', abbreviation: 'YT'}
        ],

        us_states_and_dc: [
            {name: 'Alabama', abbreviation: 'AL'},
            {name: 'Alaska', abbreviation: 'AK'},
            {name: 'Arizona', abbreviation: 'AZ'},
            {name: 'Arkansas', abbreviation: 'AR'},
            {name: 'California', abbreviation: 'CA'},
            {name: 'Colorado', abbreviation: 'CO'},
            {name: 'Connecticut', abbreviation: 'CT'},
            {name: 'Delaware', abbreviation: 'DE'},
            {name: 'District of Columbia', abbreviation: 'DC'},
            {name: 'Florida', abbreviation: 'FL'},
            {name: 'Georgia', abbreviation: 'GA'},
            {name: 'Hawaii', abbreviation: 'HI'},
            {name: 'Idaho', abbreviation: 'ID'},
            {name: 'Illinois', abbreviation: 'IL'},
            {name: 'Indiana', abbreviation: 'IN'},
            {name: 'Iowa', abbreviation: 'IA'},
            {name: 'Kansas', abbreviation: 'KS'},
            {name: 'Kentucky', abbreviation: 'KY'},
            {name: 'Louisiana', abbreviation: 'LA'},
            {name: 'Maine', abbreviation: 'ME'},
            {name: 'Maryland', abbreviation: 'MD'},
            {name: 'Massachusetts', abbreviation: 'MA'},
            {name: 'Michigan', abbreviation: 'MI'},
            {name: 'Minnesota', abbreviation: 'MN'},
            {name: 'Mississippi', abbreviation: 'MS'},
            {name: 'Missouri', abbreviation: 'MO'},
            {name: 'Montana', abbreviation: 'MT'},
            {name: 'Nebraska', abbreviation: 'NE'},
            {name: 'Nevada', abbreviation: 'NV'},
            {name: 'New Hampshire', abbreviation: 'NH'},
            {name: 'New Jersey', abbreviation: 'NJ'},
            {name: 'New Mexico', abbreviation: 'NM'},
            {name: 'New York', abbreviation: 'NY'},
            {name: 'North Carolina', abbreviation: 'NC'},
            {name: 'North Dakota', abbreviation: 'ND'},
            {name: 'Ohio', abbreviation: 'OH'},
            {name: 'Oklahoma', abbreviation: 'OK'},
            {name: 'Oregon', abbreviation: 'OR'},
            {name: 'Pennsylvania', abbreviation: 'PA'},
            {name: 'Rhode Island', abbreviation: 'RI'},
            {name: 'South Carolina', abbreviation: 'SC'},
            {name: 'South Dakota', abbreviation: 'SD'},
            {name: 'Tennessee', abbreviation: 'TN'},
            {name: 'Texas', abbreviation: 'TX'},
            {name: 'Utah', abbreviation: 'UT'},
            {name: 'Vermont', abbreviation: 'VT'},
            {name: 'Virginia', abbreviation: 'VA'},
            {name: 'Washington', abbreviation: 'WA'},
            {name: 'West Virginia', abbreviation: 'WV'},
            {name: 'Wisconsin', abbreviation: 'WI'},
            {name: 'Wyoming', abbreviation: 'WY'}
        ],

        territories: [
            {name: 'American Samoa', abbreviation: 'AS'},
            {name: 'Federated States of Micronesia', abbreviation: 'FM'},
            {name: 'Guam', abbreviation: 'GU'},
            {name: 'Marshall Islands', abbreviation: 'MH'},
            {name: 'Northern Mariana Islands', abbreviation: 'MP'},
            {name: 'Puerto Rico', abbreviation: 'PR'},
            {name: 'Virgin Islands, U.S.', abbreviation: 'VI'}
        ],

        armed_forces: [
            {name: 'Armed Forces Europe', abbreviation: 'AE'},
            {name: 'Armed Forces Pacific', abbreviation: 'AP'},
            {name: 'Armed Forces the Americas', abbreviation: 'AA'}
        ],

        street_suffixes: [
            {name: 'Avenue', abbreviation: 'Ave'},
            {name: 'Boulevard', abbreviation: 'Blvd'},
            {name: 'Center', abbreviation: 'Ctr'},
            {name: 'Circle', abbreviation: 'Cir'},
            {name: 'Court', abbreviation: 'Ct'},
            {name: 'Drive', abbreviation: 'Dr'},
            {name: 'Extension', abbreviation: 'Ext'},
            {name: 'Glen', abbreviation: 'Gln'},
            {name: 'Grove', abbreviation: 'Grv'},
            {name: 'Heights', abbreviation: 'Hts'},
            {name: 'Highway', abbreviation: 'Hwy'},
            {name: 'Junction', abbreviation: 'Jct'},
            {name: 'Key', abbreviation: 'Key'},
            {name: 'Lane', abbreviation: 'Ln'},
            {name: 'Loop', abbreviation: 'Loop'},
            {name: 'Manor', abbreviation: 'Mnr'},
            {name: 'Mill', abbreviation: 'Mill'},
            {name: 'Park', abbreviation: 'Park'},
            {name: 'Parkway', abbreviation: 'Pkwy'},
            {name: 'Pass', abbreviation: 'Pass'},
            {name: 'Path', abbreviation: 'Path'},
            {name: 'Pike', abbreviation: 'Pike'},
            {name: 'Place', abbreviation: 'Pl'},
            {name: 'Plaza', abbreviation: 'Plz'},
            {name: 'Point', abbreviation: 'Pt'},
            {name: 'Ridge', abbreviation: 'Rdg'},
            {name: 'River', abbreviation: 'Riv'},
            {name: 'Road', abbreviation: 'Rd'},
            {name: 'Square', abbreviation: 'Sq'},
            {name: 'Street', abbreviation: 'St'},
            {name: 'Terrace', abbreviation: 'Ter'},
            {name: 'Trail', abbreviation: 'Trl'},
            {name: 'Turnpike', abbreviation: 'Tpke'},
            {name: 'View', abbreviation: 'Vw'},
            {name: 'Way', abbreviation: 'Way'}
        ],

        months: [
            {name: 'January', short_name: 'Jan', numeric: '01', days: 31},
            // Not messing with leap years...
            {name: 'February', short_name: 'Feb', numeric: '02', days: 28},
            {name: 'March', short_name: 'Mar', numeric: '03', days: 31},
            {name: 'April', short_name: 'Apr', numeric: '04', days: 30},
            {name: 'May', short_name: 'May', numeric: '05', days: 31},
            {name: 'June', short_name: 'Jun', numeric: '06', days: 30},
            {name: 'July', short_name: 'Jul', numeric: '07', days: 31},
            {name: 'August', short_name: 'Aug', numeric: '08', days: 31},
            {name: 'September', short_name: 'Sep', numeric: '09', days: 30},
            {name: 'October', short_name: 'Oct', numeric: '10', days: 31},
            {name: 'November', short_name: 'Nov', numeric: '11', days: 30},
            {name: 'December', short_name: 'Dec', numeric: '12', days: 31}
        ],

        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29
        cc_types: [
            {name: "American Express", short_name: 'amex', prefix: '34', length: 15},
            {name: "Bankcard", short_name: 'bankcard', prefix: '5610', length: 16},
            {name: "China UnionPay", short_name: 'chinaunion', prefix: '62', length: 16},
            {name: "Diners Club Carte Blanche", short_name: 'dccarte', prefix: '300', length: 14},
            {name: "Diners Club enRoute", short_name: 'dcenroute', prefix: '2014', length: 15},
            {name: "Diners Club International", short_name: 'dcintl', prefix: '36', length: 14},
            {name: "Diners Club United States & Canada", short_name: 'dcusc', prefix: '54', length: 16},
            {name: "Discover Card", short_name: 'discover', prefix: '6011', length: 16},
            {name: "InstaPayment", short_name: 'instapay', prefix: '637', length: 16},
            {name: "JCB", short_name: 'jcb', prefix: '3528', length: 16},
            {name: "Laser", short_name: 'laser', prefix: '6304', length: 16},
            {name: "Maestro", short_name: 'maestro', prefix: '5018', length: 16},
            {name: "Mastercard", short_name: 'mc', prefix: '51', length: 16},
            {name: "Solo", short_name: 'solo', prefix: '6334', length: 16},
            {name: "Switch", short_name: 'switch', prefix: '4903', length: 16},
            {name: "Visa", short_name: 'visa', prefix: '4', length: 16},
            {name: "Visa Electron", short_name: 'electron', prefix: '4026', length: 16}
        ],

        //return all world currency by ISO 4217
        currency_types: [
            {'code' : 'AED', 'name' : 'United Arab Emirates Dirham'},
            {'code' : 'AFN', 'name' : 'Afghanistan Afghani'},
            {'code' : 'ALL', 'name' : 'Albania Lek'},
            {'code' : 'AMD', 'name' : 'Armenia Dram'},
            {'code' : 'ANG', 'name' : 'Netherlands Antilles Guilder'},
            {'code' : 'AOA', 'name' : 'Angola Kwanza'},
            {'code' : 'ARS', 'name' : 'Argentina Peso'},
            {'code' : 'AUD', 'name' : 'Australia Dollar'},
            {'code' : 'AWG', 'name' : 'Aruba Guilder'},
            {'code' : 'AZN', 'name' : 'Azerbaijan New Manat'},
            {'code' : 'BAM', 'name' : 'Bosnia and Herzegovina Convertible Marka'},
            {'code' : 'BBD', 'name' : 'Barbados Dollar'},
            {'code' : 'BDT', 'name' : 'Bangladesh Taka'},
            {'code' : 'BGN', 'name' : 'Bulgaria Lev'},
            {'code' : 'BHD', 'name' : 'Bahrain Dinar'},
            {'code' : 'BIF', 'name' : 'Burundi Franc'},
            {'code' : 'BMD', 'name' : 'Bermuda Dollar'},
            {'code' : 'BND', 'name' : 'Brunei Darussalam Dollar'},
            {'code' : 'BOB', 'name' : 'Bolivia Boliviano'},
            {'code' : 'BRL', 'name' : 'Brazil Real'},
            {'code' : 'BSD', 'name' : 'Bahamas Dollar'},
            {'code' : 'BTN', 'name' : 'Bhutan Ngultrum'},
            {'code' : 'BWP', 'name' : 'Botswana Pula'},
            {'code' : 'BYR', 'name' : 'Belarus Ruble'},
            {'code' : 'BZD', 'name' : 'Belize Dollar'},
            {'code' : 'CAD', 'name' : 'Canada Dollar'},
            {'code' : 'CDF', 'name' : 'Congo/Kinshasa Franc'},
            {'code' : 'CHF', 'name' : 'Switzerland Franc'},
            {'code' : 'CLP', 'name' : 'Chile Peso'},
            {'code' : 'CNY', 'name' : 'China Yuan Renminbi'},
            {'code' : 'COP', 'name' : 'Colombia Peso'},
            {'code' : 'CRC', 'name' : 'Costa Rica Colon'},
            {'code' : 'CUC', 'name' : 'Cuba Convertible Peso'},
            {'code' : 'CUP', 'name' : 'Cuba Peso'},
            {'code' : 'CVE', 'name' : 'Cape Verde Escudo'},
            {'code' : 'CZK', 'name' : 'Czech Republic Koruna'},
            {'code' : 'DJF', 'name' : 'Djibouti Franc'},
            {'code' : 'DKK', 'name' : 'Denmark Krone'},
            {'code' : 'DOP', 'name' : 'Dominican Republic Peso'},
            {'code' : 'DZD', 'name' : 'Algeria Dinar'},
            {'code' : 'EGP', 'name' : 'Egypt Pound'},
            {'code' : 'ERN', 'name' : 'Eritrea Nakfa'},
            {'code' : 'ETB', 'name' : 'Ethiopia Birr'},
            {'code' : 'EUR', 'name' : 'Euro Member Countries'},
            {'code' : 'FJD', 'name' : 'Fiji Dollar'},
            {'code' : 'FKP', 'name' : 'Falkland Islands (Malvinas) Pound'},
            {'code' : 'GBP', 'name' : 'United Kingdom Pound'},
            {'code' : 'GEL', 'name' : 'Georgia Lari'},
            {'code' : 'GGP', 'name' : 'Guernsey Pound'},
            {'code' : 'GHS', 'name' : 'Ghana Cedi'},
            {'code' : 'GIP', 'name' : 'Gibraltar Pound'},
            {'code' : 'GMD', 'name' : 'Gambia Dalasi'},
            {'code' : 'GNF', 'name' : 'Guinea Franc'},
            {'code' : 'GTQ', 'name' : 'Guatemala Quetzal'},
            {'code' : 'GYD', 'name' : 'Guyana Dollar'},
            {'code' : 'HKD', 'name' : 'Hong Kong Dollar'},
            {'code' : 'HNL', 'name' : 'Honduras Lempira'},
            {'code' : 'HRK', 'name' : 'Croatia Kuna'},
            {'code' : 'HTG', 'name' : 'Haiti Gourde'},
            {'code' : 'HUF', 'name' : 'Hungary Forint'},
            {'code' : 'IDR', 'name' : 'Indonesia Rupiah'},
            {'code' : 'ILS', 'name' : 'Israel Shekel'},
            {'code' : 'IMP', 'name' : 'Isle of Man Pound'},
            {'code' : 'INR', 'name' : 'India Rupee'},
            {'code' : 'IQD', 'name' : 'Iraq Dinar'},
            {'code' : 'IRR', 'name' : 'Iran Rial'},
            {'code' : 'ISK', 'name' : 'Iceland Krona'},
            {'code' : 'JEP', 'name' : 'Jersey Pound'},
            {'code' : 'JMD', 'name' : 'Jamaica Dollar'},
            {'code' : 'JOD', 'name' : 'Jordan Dinar'},
            {'code' : 'JPY', 'name' : 'Japan Yen'},
            {'code' : 'KES', 'name' : 'Kenya Shilling'},
            {'code' : 'KGS', 'name' : 'Kyrgyzstan Som'},
            {'code' : 'KHR', 'name' : 'Cambodia Riel'},
            {'code' : 'KMF', 'name' : 'Comoros Franc'},
            {'code' : 'KPW', 'name' : 'Korea (North) Won'},
            {'code' : 'KRW', 'name' : 'Korea (South) Won'},
            {'code' : 'KWD', 'name' : 'Kuwait Dinar'},
            {'code' : 'KYD', 'name' : 'Cayman Islands Dollar'},
            {'code' : 'KZT', 'name' : 'Kazakhstan Tenge'},
            {'code' : 'LAK', 'name' : 'Laos Kip'},
            {'code' : 'LBP', 'name' : 'Lebanon Pound'},
            {'code' : 'LKR', 'name' : 'Sri Lanka Rupee'},
            {'code' : 'LRD', 'name' : 'Liberia Dollar'},
            {'code' : 'LSL', 'name' : 'Lesotho Loti'},
            {'code' : 'LTL', 'name' : 'Lithuania Litas'},
            {'code' : 'LYD', 'name' : 'Libya Dinar'},
            {'code' : 'MAD', 'name' : 'Morocco Dirham'},
            {'code' : 'MDL', 'name' : 'Moldova Leu'},
            {'code' : 'MGA', 'name' : 'Madagascar Ariary'},
            {'code' : 'MKD', 'name' : 'Macedonia Denar'},
            {'code' : 'MMK', 'name' : 'Myanmar (Burma) Kyat'},
            {'code' : 'MNT', 'name' : 'Mongolia Tughrik'},
            {'code' : 'MOP', 'name' : 'Macau Pataca'},
            {'code' : 'MRO', 'name' : 'Mauritania Ouguiya'},
            {'code' : 'MUR', 'name' : 'Mauritius Rupee'},
            {'code' : 'MVR', 'name' : 'Maldives (Maldive Islands) Rufiyaa'},
            {'code' : 'MWK', 'name' : 'Malawi Kwacha'},
            {'code' : 'MXN', 'name' : 'Mexico Peso'},
            {'code' : 'MYR', 'name' : 'Malaysia Ringgit'},
            {'code' : 'MZN', 'name' : 'Mozambique Metical'},
            {'code' : 'NAD', 'name' : 'Namibia Dollar'},
            {'code' : 'NGN', 'name' : 'Nigeria Naira'},
            {'code' : 'NIO', 'name' : 'Nicaragua Cordoba'},
            {'code' : 'NOK', 'name' : 'Norway Krone'},
            {'code' : 'NPR', 'name' : 'Nepal Rupee'},
            {'code' : 'NZD', 'name' : 'New Zealand Dollar'},
            {'code' : 'OMR', 'name' : 'Oman Rial'},
            {'code' : 'PAB', 'name' : 'Panama Balboa'},
            {'code' : 'PEN', 'name' : 'Peru Nuevo Sol'},
            {'code' : 'PGK', 'name' : 'Papua New Guinea Kina'},
            {'code' : 'PHP', 'name' : 'Philippines Peso'},
            {'code' : 'PKR', 'name' : 'Pakistan Rupee'},
            {'code' : 'PLN', 'name' : 'Poland Zloty'},
            {'code' : 'PYG', 'name' : 'Paraguay Guarani'},
            {'code' : 'QAR', 'name' : 'Qatar Riyal'},
            {'code' : 'RON', 'name' : 'Romania New Leu'},
            {'code' : 'RSD', 'name' : 'Serbia Dinar'},
            {'code' : 'RUB', 'name' : 'Russia Ruble'},
            {'code' : 'RWF', 'name' : 'Rwanda Franc'},
            {'code' : 'SAR', 'name' : 'Saudi Arabia Riyal'},
            {'code' : 'SBD', 'name' : 'Solomon Islands Dollar'},
            {'code' : 'SCR', 'name' : 'Seychelles Rupee'},
            {'code' : 'SDG', 'name' : 'Sudan Pound'},
            {'code' : 'SEK', 'name' : 'Sweden Krona'},
            {'code' : 'SGD', 'name' : 'Singapore Dollar'},
            {'code' : 'SHP', 'name' : 'Saint Helena Pound'},
            {'code' : 'SLL', 'name' : 'Sierra Leone Leone'},
            {'code' : 'SOS', 'name' : 'Somalia Shilling'},
            {'code' : 'SPL', 'name' : 'Seborga Luigino'},
            {'code' : 'SRD', 'name' : 'Suriname Dollar'},
            {'code' : 'STD', 'name' : 'São Tomé and Príncipe Dobra'},
            {'code' : 'SVC', 'name' : 'El Salvador Colon'},
            {'code' : 'SYP', 'name' : 'Syria Pound'},
            {'code' : 'SZL', 'name' : 'Swaziland Lilangeni'},
            {'code' : 'THB', 'name' : 'Thailand Baht'},
            {'code' : 'TJS', 'name' : 'Tajikistan Somoni'},
            {'code' : 'TMT', 'name' : 'Turkmenistan Manat'},
            {'code' : 'TND', 'name' : 'Tunisia Dinar'},
            {'code' : 'TOP', 'name' : 'Tonga Pa\'anga'},
            {'code' : 'TRY', 'name' : 'Turkey Lira'},
            {'code' : 'TTD', 'name' : 'Trinidad and Tobago Dollar'},
            {'code' : 'TVD', 'name' : 'Tuvalu Dollar'},
            {'code' : 'TWD', 'name' : 'Taiwan New Dollar'},
            {'code' : 'TZS', 'name' : 'Tanzania Shilling'},
            {'code' : 'UAH', 'name' : 'Ukraine Hryvnia'},
            {'code' : 'UGX', 'name' : 'Uganda Shilling'},
            {'code' : 'USD', 'name' : 'United States Dollar'},
            {'code' : 'UYU', 'name' : 'Uruguay Peso'},
            {'code' : 'UZS', 'name' : 'Uzbekistan Som'},
            {'code' : 'VEF', 'name' : 'Venezuela Bolivar'},
            {'code' : 'VND', 'name' : 'Viet Nam Dong'},
            {'code' : 'VUV', 'name' : 'Vanuatu Vatu'},
            {'code' : 'WST', 'name' : 'Samoa Tala'},
            {'code' : 'XAF', 'name' : 'Communauté Financière Africaine (BEAC) CFA Franc BEAC'},
            {'code' : 'XCD', 'name' : 'East Caribbean Dollar'},
            {'code' : 'XDR', 'name' : 'International Monetary Fund (IMF) Special Drawing Rights'},
            {'code' : 'XOF', 'name' : 'Communauté Financière Africaine (BCEAO) Franc'},
            {'code' : 'XPF', 'name' : 'Comptoirs Français du Pacifique (CFP) Franc'},
            {'code' : 'YER', 'name' : 'Yemen Rial'},
            {'code' : 'ZAR', 'name' : 'South Africa Rand'},
            {'code' : 'ZMW', 'name' : 'Zambia Kwacha'},
            {'code' : 'ZWD', 'name' : 'Zimbabwe Dollar'}
        ]
    };

    var o_hasOwnProperty = Object.prototype.hasOwnProperty;
    var o_keys = (Object.keys || function(obj) {
      var result = [];
      for (var key in obj) {
        if (o_hasOwnProperty.call(obj, key)) {
          result.push(key);
        }
      }

      return result;
    });

    function _copyObject(source, target) {
      var keys = o_keys(source);
      var key;

      for (var i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        target[key] = source[key] || target[key];
      }
    }

    function _copyArray(source, target) {
      for (var i = 0, l = source.length; i < l; i++) {
        target[i] = source[i];
      }
    }

    function copyObject(source, _target) {
        var isArray = Array.isArray(source);
        var target = _target || (isArray ? new Array(source.length) : {});

        if (isArray) {
          _copyArray(source, target);
        } else {
          _copyObject(source, target);
        }

        return target;
    }

    /** Get the data based on key**/
    Chance.prototype.get = function (name) {
        return copyObject(data[name]);
    };

    // Mac Address
    Chance.prototype.mac_address = function(options){
        // typically mac addresses are separated by ":"
        // however they can also be separated by "-"
        // the network variant uses a dot every fourth byte

        options = initOptions(options);
        if(!options.separator) {
            options.separator =  options.networkVersion ? "." : ":";
        }

        var mac_pool="ABCDEF1234567890",
            mac = "";
        if(!options.networkVersion) {
            mac = this.n(this.string, 6, { pool: mac_pool, length:2 }).join(options.separator);
        } else {
            mac = this.n(this.string, 3, { pool: mac_pool, length:4 }).join(options.separator);
        }

        return mac;
    };

    Chance.prototype.normal = function (options) {
        options = initOptions(options, {mean : 0, dev : 1});

        // The Marsaglia Polar method
        var s, u, v, norm,
            mean = options.mean,
            dev = options.dev;

        do {
            // U and V are from the uniform distribution on (-1, 1)
            u = this.random() * 2 - 1;
            v = this.random() * 2 - 1;

            s = u * u + v * v;
        } while (s >= 1);

        // Compute the standard normal variate
        norm = u * Math.sqrt(-2 * Math.log(s) / s);

        // Shape and scale
        return dev * norm + mean;
    };

    Chance.prototype.radio = function (options) {
        // Initial Letter (Typically Designated by Side of Mississippi River)
        options = initOptions(options, {side : "?"});
        var fl = "";
        switch (options.side.toLowerCase()) {
        case "east":
        case "e":
            fl = "W";
            break;
        case "west":
        case "w":
            fl = "K";
            break;
        default:
            fl = this.character({pool: "KW"});
            break;
        }

        return fl + this.character({alpha: true, casing: "upper"}) +
                this.character({alpha: true, casing: "upper"}) +
                this.character({alpha: true, casing: "upper"});
    };

    // Set the data as key and data or the data map
    Chance.prototype.set = function (name, values) {
        if (typeof name === "string") {
            data[name] = values;
        } else {
            data = copyObject(name, data);
        }
    };

    Chance.prototype.tv = function (options) {
        return this.radio(options);
    };

    // ID number for Brazil companies
    Chance.prototype.cnpj = function () {
        var n = this.n(this.natural, 8, { max: 9 });
        var d1 = 2+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;
        d1 = 11 - (d1 % 11);
        if (d1>=10){
            d1 = 0;
        }
        var d2 = d1*2+3+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;
        d2 = 11 - (d2 % 11);
        if (d2>=10){
            d2 = 0;
        }
        return ''+n[0]+n[1]+'.'+n[2]+n[3]+n[4]+'.'+n[5]+n[6]+n[7]+'/0001-'+d1+d2;
    };

    // -- End Miscellaneous --

    Chance.prototype.mersenne_twister = function (seed) {
        return new MersenneTwister(seed);
    };

    Chance.prototype.blueimp_md5 = function () {
        return new BlueImpMD5();
    };

    // Mersenne Twister from https://gist.github.com/banksean/300494
    var MersenneTwister = function (seed) {
        if (seed === undefined) {
            // kept random number same size as time used previously to ensure no unexpected results downstream
            seed = Math.floor(Math.random()*Math.pow(10,13));
        }
        /* Period parameters */
        this.N = 624;
        this.M = 397;
        this.MATRIX_A = 0x9908b0df;   /* constant vector a */
        this.UPPER_MASK = 0x80000000; /* most significant w-r bits */
        this.LOWER_MASK = 0x7fffffff; /* least significant r bits */

        this.mt = new Array(this.N); /* the array for the state vector */
        this.mti = this.N + 1; /* mti==N + 1 means mt[N] is not initialized */

        this.init_genrand(seed);
    };

    /* initializes mt[N] with a seed */
    MersenneTwister.prototype.init_genrand = function (s) {
        this.mt[0] = s >>> 0;
        for (this.mti = 1; this.mti < this.N; this.mti++) {
            s = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30);
            this.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253) + this.mti;
            /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */
            /* In the previous versions, MSBs of the seed affect   */
            /* only MSBs of the array mt[].                        */
            /* 2002/01/09 modified by Makoto Matsumoto             */
            this.mt[this.mti] >>>= 0;
            /* for >32 bit machines */
        }
    };

    /* initialize by an array with array-length */
    /* init_key is the array for initializing keys */
    /* key_length is its length */
    /* slight change for C++, 2004/2/26 */
    MersenneTwister.prototype.init_by_array = function (init_key, key_length) {
        var i = 1, j = 0, k, s;
        this.init_genrand(19650218);
        k = (this.N > key_length ? this.N : key_length);
        for (; k; k--) {
            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);
            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525))) + init_key[j] + j; /* non linear */
            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */
            i++;
            j++;
            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }
            if (j >= key_length) { j = 0; }
        }
        for (k = this.N - 1; k; k--) {
            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);
            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941)) - i; /* non linear */
            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */
            i++;
            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }
        }

        this.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */
    };

    /* generates a random number on [0,0xffffffff]-interval */
    MersenneTwister.prototype.genrand_int32 = function () {
        var y;
        var mag01 = new Array(0x0, this.MATRIX_A);
        /* mag01[x] = x * MATRIX_A  for x=0,1 */

        if (this.mti >= this.N) { /* generate N words at one time */
            var kk;

            if (this.mti === this.N + 1) {   /* if init_genrand() has not been called, */
                this.init_genrand(5489); /* a default initial seed is used */
            }
            for (kk = 0; kk < this.N - this.M; kk++) {
                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);
                this.mt[kk] = this.mt[kk + this.M] ^ (y >>> 1) ^ mag01[y & 0x1];
            }
            for (;kk < this.N - 1; kk++) {
                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);
                this.mt[kk] = this.mt[kk + (this.M - this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];
            }
            y = (this.mt[this.N - 1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);
            this.mt[this.N - 1] = this.mt[this.M - 1] ^ (y >>> 1) ^ mag01[y & 0x1];

            this.mti = 0;
        }

        y = this.mt[this.mti++];

        /* Tempering */
        y ^= (y >>> 11);
        y ^= (y << 7) & 0x9d2c5680;
        y ^= (y << 15) & 0xefc60000;
        y ^= (y >>> 18);

        return y >>> 0;
    };

    /* generates a random number on [0,0x7fffffff]-interval */
    MersenneTwister.prototype.genrand_int31 = function () {
        return (this.genrand_int32() >>> 1);
    };

    /* generates a random number on [0,1]-real-interval */
    MersenneTwister.prototype.genrand_real1 = function () {
        return this.genrand_int32() * (1.0 / 4294967295.0);
        /* divided by 2^32-1 */
    };

    /* generates a random number on [0,1)-real-interval */
    MersenneTwister.prototype.random = function () {
        return this.genrand_int32() * (1.0 / 4294967296.0);
        /* divided by 2^32 */
    };

    /* generates a random number on (0,1)-real-interval */
    MersenneTwister.prototype.genrand_real3 = function () {
        return (this.genrand_int32() + 0.5) * (1.0 / 4294967296.0);
        /* divided by 2^32 */
    };

    /* generates a random number on [0,1) with 53-bit resolution*/
    MersenneTwister.prototype.genrand_res53 = function () {
        var a = this.genrand_int32()>>>5, b = this.genrand_int32()>>>6;
        return (a * 67108864.0 + b) * (1.0 / 9007199254740992.0);
    };

    // BlueImp MD5 hashing algorithm from https://github.com/blueimp/JavaScript-MD5
    var BlueImpMD5 = function () {};

    BlueImpMD5.prototype.VERSION = '1.0.1';

    /*
    * Add integers, wrapping at 2^32. This uses 16-bit operations internally
    * to work around bugs in some JS interpreters.
    */
    BlueImpMD5.prototype.safe_add = function safe_add(x, y) {
        var lsw = (x & 0xFFFF) + (y & 0xFFFF),
            msw = (x >> 16) + (y >> 16) + (lsw >> 16);
        return (msw << 16) | (lsw & 0xFFFF);
    };

    /*
    * Bitwise rotate a 32-bit number to the left.
    */
    BlueImpMD5.prototype.bit_roll = function (num, cnt) {
        return (num << cnt) | (num >>> (32 - cnt));
    };

    /*
    * These functions implement the five basic operations the algorithm uses.
    */
    BlueImpMD5.prototype.md5_cmn = function (q, a, b, x, s, t) {
        return this.safe_add(this.bit_roll(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s), b);
    };
    BlueImpMD5.prototype.md5_ff = function (a, b, c, d, x, s, t) {
        return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
    };
    BlueImpMD5.prototype.md5_gg = function (a, b, c, d, x, s, t) {
        return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
    };
    BlueImpMD5.prototype.md5_hh = function (a, b, c, d, x, s, t) {
        return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);
    };
    BlueImpMD5.prototype.md5_ii = function (a, b, c, d, x, s, t) {
        return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
    };

    /*
    * Calculate the MD5 of an array of little-endian words, and a bit length.
    */
    BlueImpMD5.prototype.binl_md5 = function (x, len) {
        /* append padding */
        x[len >> 5] |= 0x80 << (len % 32);
        x[(((len + 64) >>> 9) << 4) + 14] = len;

        var i, olda, oldb, oldc, oldd,
            a =  1732584193,
            b = -271733879,
            c = -1732584194,
            d =  271733878;

        for (i = 0; i < x.length; i += 16) {
            olda = a;
            oldb = b;
            oldc = c;
            oldd = d;

            a = this.md5_ff(a, b, c, d, x[i],       7, -680876936);
            d = this.md5_ff(d, a, b, c, x[i +  1], 12, -389564586);
            c = this.md5_ff(c, d, a, b, x[i +  2], 17,  606105819);
            b = this.md5_ff(b, c, d, a, x[i +  3], 22, -1044525330);
            a = this.md5_ff(a, b, c, d, x[i +  4],  7, -176418897);
            d = this.md5_ff(d, a, b, c, x[i +  5], 12,  1200080426);
            c = this.md5_ff(c, d, a, b, x[i +  6], 17, -1473231341);
            b = this.md5_ff(b, c, d, a, x[i +  7], 22, -45705983);
            a = this.md5_ff(a, b, c, d, x[i +  8],  7,  1770035416);
            d = this.md5_ff(d, a, b, c, x[i +  9], 12, -1958414417);
            c = this.md5_ff(c, d, a, b, x[i + 10], 17, -42063);
            b = this.md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);
            a = this.md5_ff(a, b, c, d, x[i + 12],  7,  1804603682);
            d = this.md5_ff(d, a, b, c, x[i + 13], 12, -40341101);
            c = this.md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);
            b = this.md5_ff(b, c, d, a, x[i + 15], 22,  1236535329);

            a = this.md5_gg(a, b, c, d, x[i +  1],  5, -165796510);
            d = this.md5_gg(d, a, b, c, x[i +  6],  9, -1069501632);
            c = this.md5_gg(c, d, a, b, x[i + 11], 14,  643717713);
            b = this.md5_gg(b, c, d, a, x[i],      20, -373897302);
            a = this.md5_gg(a, b, c, d, x[i +  5],  5, -701558691);
            d = this.md5_gg(d, a, b, c, x[i + 10],  9,  38016083);
            c = this.md5_gg(c, d, a, b, x[i + 15], 14, -660478335);
            b = this.md5_gg(b, c, d, a, x[i +  4], 20, -405537848);
            a = this.md5_gg(a, b, c, d, x[i +  9],  5,  568446438);
            d = this.md5_gg(d, a, b, c, x[i + 14],  9, -1019803690);
            c = this.md5_gg(c, d, a, b, x[i +  3], 14, -187363961);
            b = this.md5_gg(b, c, d, a, x[i +  8], 20,  1163531501);
            a = this.md5_gg(a, b, c, d, x[i + 13],  5, -1444681467);
            d = this.md5_gg(d, a, b, c, x[i +  2],  9, -51403784);
            c = this.md5_gg(c, d, a, b, x[i +  7], 14,  1735328473);
            b = this.md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);

            a = this.md5_hh(a, b, c, d, x[i +  5],  4, -378558);
            d = this.md5_hh(d, a, b, c, x[i +  8], 11, -2022574463);
            c = this.md5_hh(c, d, a, b, x[i + 11], 16,  1839030562);
            b = this.md5_hh(b, c, d, a, x[i + 14], 23, -35309556);
            a = this.md5_hh(a, b, c, d, x[i +  1],  4, -1530992060);
            d = this.md5_hh(d, a, b, c, x[i +  4], 11,  1272893353);
            c = this.md5_hh(c, d, a, b, x[i +  7], 16, -155497632);
            b = this.md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);
            a = this.md5_hh(a, b, c, d, x[i + 13],  4,  681279174);
            d = this.md5_hh(d, a, b, c, x[i],      11, -358537222);
            c = this.md5_hh(c, d, a, b, x[i +  3], 16, -722521979);
            b = this.md5_hh(b, c, d, a, x[i +  6], 23,  76029189);
            a = this.md5_hh(a, b, c, d, x[i +  9],  4, -640364487);
            d = this.md5_hh(d, a, b, c, x[i + 12], 11, -421815835);
            c = this.md5_hh(c, d, a, b, x[i + 15], 16,  530742520);
            b = this.md5_hh(b, c, d, a, x[i +  2], 23, -995338651);

            a = this.md5_ii(a, b, c, d, x[i],       6, -198630844);
            d = this.md5_ii(d, a, b, c, x[i +  7], 10,  1126891415);
            c = this.md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);
            b = this.md5_ii(b, c, d, a, x[i +  5], 21, -57434055);
            a = this.md5_ii(a, b, c, d, x[i + 12],  6,  1700485571);
            d = this.md5_ii(d, a, b, c, x[i +  3], 10, -1894986606);
            c = this.md5_ii(c, d, a, b, x[i + 10], 15, -1051523);
            b = this.md5_ii(b, c, d, a, x[i +  1], 21, -2054922799);
            a = this.md5_ii(a, b, c, d, x[i +  8],  6,  1873313359);
            d = this.md5_ii(d, a, b, c, x[i + 15], 10, -30611744);
            c = this.md5_ii(c, d, a, b, x[i +  6], 15, -1560198380);
            b = this.md5_ii(b, c, d, a, x[i + 13], 21,  1309151649);
            a = this.md5_ii(a, b, c, d, x[i +  4],  6, -145523070);
            d = this.md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);
            c = this.md5_ii(c, d, a, b, x[i +  2], 15,  718787259);
            b = this.md5_ii(b, c, d, a, x[i +  9], 21, -343485551);

            a = this.safe_add(a, olda);
            b = this.safe_add(b, oldb);
            c = this.safe_add(c, oldc);
            d = this.safe_add(d, oldd);
        }
        return [a, b, c, d];
    };

    /*
    * Convert an array of little-endian words to a string
    */
    BlueImpMD5.prototype.binl2rstr = function (input) {
        var i,
            output = '';
        for (i = 0; i < input.length * 32; i += 8) {
            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);
        }
        return output;
    };

    /*
    * Convert a raw string to an array of little-endian words
    * Characters >255 have their high-byte silently ignored.
    */
    BlueImpMD5.prototype.rstr2binl = function (input) {
        var i,
            output = [];
        output[(input.length >> 2) - 1] = undefined;
        for (i = 0; i < output.length; i += 1) {
            output[i] = 0;
        }
        for (i = 0; i < input.length * 8; i += 8) {
            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);
        }
        return output;
    };

    /*
    * Calculate the MD5 of a raw string
    */
    BlueImpMD5.prototype.rstr_md5 = function (s) {
        return this.binl2rstr(this.binl_md5(this.rstr2binl(s), s.length * 8));
    };

    /*
    * Calculate the HMAC-MD5, of a key and some data (raw strings)
    */
    BlueImpMD5.prototype.rstr_hmac_md5 = function (key, data) {
        var i,
            bkey = this.rstr2binl(key),
            ipad = [],
            opad = [],
            hash;
        ipad[15] = opad[15] = undefined;
        if (bkey.length > 16) {
            bkey = this.binl_md5(bkey, key.length * 8);
        }
        for (i = 0; i < 16; i += 1) {
            ipad[i] = bkey[i] ^ 0x36363636;
            opad[i] = bkey[i] ^ 0x5C5C5C5C;
        }
        hash = this.binl_md5(ipad.concat(this.rstr2binl(data)), 512 + data.length * 8);
        return this.binl2rstr(this.binl_md5(opad.concat(hash), 512 + 128));
    };

    /*
    * Convert a raw string to a hex string
    */
    BlueImpMD5.prototype.rstr2hex = function (input) {
        var hex_tab = '0123456789abcdef',
            output = '',
            x,
            i;
        for (i = 0; i < input.length; i += 1) {
            x = input.charCodeAt(i);
            output += hex_tab.charAt((x >>> 4) & 0x0F) +
                hex_tab.charAt(x & 0x0F);
        }
        return output;
    };

    /*
    * Encode a string as utf-8
    */
    BlueImpMD5.prototype.str2rstr_utf8 = function (input) {
        return unescape(encodeURIComponent(input));
    };

    /*
    * Take string arguments and return either raw or hex encoded strings
    */
    BlueImpMD5.prototype.raw_md5 = function (s) {
        return this.rstr_md5(this.str2rstr_utf8(s));
    };
    BlueImpMD5.prototype.hex_md5 = function (s) {
        return this.rstr2hex(this.raw_md5(s));
    };
    BlueImpMD5.prototype.raw_hmac_md5 = function (k, d) {
        return this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d));
    };
    BlueImpMD5.prototype.hex_hmac_md5 = function (k, d) {
        return this.rstr2hex(this.raw_hmac_md5(k, d));
    };

    BlueImpMD5.prototype.md5 = function (string, key, raw) {
        if (!key) {
            if (!raw) {
                return this.hex_md5(string);
            }

            return this.raw_md5(string);
        }

        if (!raw) {
            return this.hex_hmac_md5(key, string);
        }

        return this.raw_hmac_md5(key, string);
    };

    // CommonJS module
    if (typeof exports !== 'undefined') {
        if (typeof module !== 'undefined' && module.exports) {
            exports = module.exports = Chance;
        }
        exports.Chance = Chance;
    }

    // Register as an anonymous AMD module
    if (typeof define === 'function' && define.amd) {
        define([], function () {
            return Chance;
        });
    }

    // if there is a importsScrips object define chance for worker
    if (typeof importScripts !== 'undefined') {
        chance = new Chance();
    }

    // If there is a window object, that at least has a document property,
    // instantiate and define chance on the window
    if (typeof window === "object" && typeof window.document === "object") {
        window.Chance = Chance;
        window.chance = new Chance();
    }
})();

}).call(this,require("buffer").Buffer)

},{"buffer":11}],33:[function(require,module,exports){
'use strict';

var $ = require('./util/uri-helpers');

$.findByRef = require('./util/find-reference');
$.resolveSchema = require('./util/resolve-schema');
$.normalizeSchema = require('./util/normalize-schema');

var instance = module.exports = function() {
  function $ref(fakeroot, schema, refs, ex) {
    if (typeof fakeroot === 'object') {
      ex = refs;
      refs = schema;
      schema = fakeroot;
      fakeroot = undefined;
    }

    if (!Array.isArray(refs)) {
      ex = !!refs;
      refs = [];
    }

    function push(ref) {
      if (typeof ref.id === 'string') {
        var id = $.resolveURL(fakeroot, ref.id).replace(/\/#?$/, '');

        if (id.indexOf('#') > -1) {
          var parts = id.split('#');

          if (parts[1].charAt() === '/') {
            id = parts[0];
          } else {
            id = parts[1] || parts[0];
          }
        }

        if (!$ref.refs[id]) {
          $ref.refs[id] = ref;
        }
      }
    }

    refs.concat([schema]).forEach(function(ref) {
      schema = $.normalizeSchema(fakeroot, ref, push);
      push(schema);
    });

    return $.resolveSchema(schema, $ref.refs, ex);
  }

  $ref.refs = {};
  $ref.util = $;

  return $ref;
};

instance.util = $;

},{"./util/find-reference":35,"./util/normalize-schema":36,"./util/resolve-schema":37,"./util/uri-helpers":38}],34:[function(require,module,exports){
'use strict';

var clone = module.exports = function(obj) {
  if (!obj || typeof obj !== 'object') {
    return obj;
  }

  var target = Array.isArray(obj) ? [] : {};

  function copy(key, value) {
    target[key] = clone(value);
  }

  if (Array.isArray(target)) {
    obj.forEach(function(value, key) {
      copy(key, value);
    });
  } else if (Object.prototype.toString.call(obj) === '[object Object]') {
    Object.keys(obj).forEach(function(key) {
      copy(key, obj[key]);
    });
  }

  return target;
};

},{}],35:[function(require,module,exports){
'use strict';

var $ = require('./uri-helpers');

function get(obj, path) {
  var hash = path.split('#')[1];

  var parts = hash.split('/').slice(1);

  while (parts.length) {
    var key = decodeURIComponent(parts.shift()).replace(/~1/g, '/').replace(/~0/g, '~');

    if (typeof obj[key] === 'undefined') {
      throw new Error('Reference not found: ' + path);
    }

    obj = obj[key];
  }

  return obj;
}

var find = module.exports = function(id, refs) {
  var target = refs[id] || refs[id.split('#')[1]] || refs[$.getDocumentURI(id)];

  if (target) {
    target = id.indexOf('#/') > -1 ? get(target, id) : target;
  } else {
    for (var key in refs) {
      if ($.resolveURL(refs[key].id, id) === refs[key].id) {
        target = refs[key];
        break;
      }
    }
  }

  if (!target) {
    throw new Error('Reference not found: ' + id);
  }

  while (target.$ref) {
    target = find(target.$ref, refs);
  }

  return target;
};

},{"./uri-helpers":38}],36:[function(require,module,exports){
'use strict';

var $ = require('./uri-helpers');

var cloneObj = require('./clone-obj');

var SCHEMA_URI = [
  'http://json-schema.org/schema#',
  'http://json-schema.org/draft-04/schema#'
];

function expand(obj, parent, callback) {
  if (obj) {
    var id = typeof obj.id === 'string' ? obj.id : '#';

    if (!$.isURL(id)) {
      id = $.resolveURL(parent === id ? null : parent, id);
    }

    if (typeof obj.$ref === 'string' && !$.isURL(obj.$ref)) {
      obj.$ref = $.resolveURL(id, obj.$ref);
    }

    if (typeof obj.id === 'string') {
      obj.id = parent = id;
    }
  }

  for (var key in obj) {
    var value = obj[key];

    if (typeof value === 'object' && !(key === 'enum' || key === 'required')) {
      expand(value, parent, callback);
    }
  }

  if (typeof callback === 'function') {
    callback(obj);
  }
}

module.exports = function(fakeroot, schema, push) {
  if (typeof fakeroot === 'object') {
    push = schema;
    schema = fakeroot;
    fakeroot = null;
  }

  var base = fakeroot || '',
      copy = cloneObj(schema);

  if (copy.$schema && SCHEMA_URI.indexOf(copy.$schema) === -1) {
    throw new Error('Unsupported schema version (v4 only)');
  }

  base = $.resolveURL(copy.$schema || SCHEMA_URI[0], base);

  expand(copy, $.resolveURL(copy.id, base), push);

  // TODO: required for json-pointer to itself?
  copy.id = copy.id || '#';

  return copy;
};

},{"./clone-obj":34,"./uri-helpers":38}],37:[function(require,module,exports){
'use strict';

var $ = require('./uri-helpers');

var find = require('./find-reference');

function clone(obj, refs, child, expand) {
  var copy = {};

  if (Array.isArray(obj)) {
    copy = [];
  }

  if ($.isURL(obj.$ref)) {
    var fixed = find(obj.$ref, refs);

    if (fixed && expand) {
      var id = typeof fixed.id === 'string' ? fixed.id : '#';

      obj = fixed;

      if (obj.$ref !== id) {
        return clone(fixed, refs, true, expand);
      }

      delete obj.$ref;
    }
  }

  for (var key in obj) {
    var value = obj[key];

    if (typeof value === 'object' && !(key === 'enum' || key === 'required')) {
      copy[key] = clone(value, refs, true, expand);
    } else {
      copy[key] = value;
    }
  }

  // TODO: seriously are required or not?
  if (child) {
    if (typeof copy.$schema === 'string') {
      delete copy.$schema;
    }

    if (typeof copy.id === 'string') {
      delete copy.id;
    }
  }

  return copy;
}

module.exports = function(obj, refs, expand) {
  return clone(obj, refs, false, expand);
};

},{"./find-reference":35,"./uri-helpers":38}],38:[function(require,module,exports){
'use strict';

// https://gist.github.com/pjt33/efb2f1134bab986113fd

function URLUtils(url, baseURL) {
  var m = String(url).replace(/^\s+|\s+$/g, '').match(/^([^:\/?#]+:)?(?:\/\/(?:([^:@]*)(?::([^:@]*))?@)?(([^:\/?#]*)(?::(\d*))?))?([^?#]*)(\?[^#]*)?(#[\s\S]*)?/);
  if (!m) {
    throw new RangeError();
  }
  var href = m[0] || '';
  var protocol = m[1] || '';
  var username = m[2] || '';
  var password = m[3] || '';
  var host = m[4] || '';
  var hostname = m[5] || '';
  var port = m[6] || '';
  var pathname = m[7] || '';
  var search = m[8] || '';
  var hash = m[9] || '';
  if (baseURL !== undefined) {
    var base = new URLUtils(baseURL);
    var flag = protocol === '' && host === '' && username === '';
    if (flag && pathname === '' && search === '') {
      search = base.search;
    }
    if (flag && pathname.charAt(0) !== '/') {
      pathname = (pathname !== '' ? (base.pathname.slice(0, base.pathname.lastIndexOf('/') + 1) + pathname) : base.pathname);
    }
    // dot segments removal
    var output = [];

    pathname.replace(/\/?[^\/]+/g, function(p) {
      if (p === '/..') {
        output.pop();
      } else {
        output.push(p);
      }
    });

    pathname = output.join('') || '/';

    if (flag) {
      port = base.port;
      hostname = base.hostname;
      host = base.host;
      password = base.password;
      username = base.username;
    }
    if (protocol === '') {
      protocol = base.protocol;
    }
    href = protocol + (host !== '' ? '//' : '') + (username !== '' ? username + (password !== '' ? ':' + password : '') + '@' : '') + host + pathname + search + hash;
  }
  this.href = href;
  this.origin = protocol + (host !== '' ? '//' + host : '');
  this.protocol = protocol;
  this.username = username;
  this.password = password;
  this.host = host;
  this.hostname = hostname;
  this.port = port;
  this.pathname = pathname;
  this.search = search;
  this.hash = hash;
}

function isURL(path) {
  if (typeof path === 'string' && /^\w+:\/\//.test(path)) {
    return true;
  }
}

function parseURI(href, base) {
  return new URLUtils(href, base);
}

function resolveURL(base, href) {
  base = base || 'http://json-schema.org/schema#';

  href = parseURI(href, base);
  base = parseURI(base);

  if (base.hash && !href.hash) {
    return href.href + base.hash;
  }

  return href.href;
}

function getDocumentURI(uri) {
  return typeof uri === 'string' && uri.split('#')[0];
}

module.exports = {
  isURL: isURL,
  parseURI: parseURI,
  resolveURL: resolveURL,
  getDocumentURI: getDocumentURI
};

},{}],39:[function(require,module,exports){
// since we are requiring the top level of faker, load all locales by default
var Faker = require('./lib');
var faker = new Faker({ locales: require('./lib/locales') });
module['exports'] = faker;
},{"./lib":49,"./lib/locales":51}],40:[function(require,module,exports){
function Address (faker) {
  var f = faker.fake,
      Helpers = faker.helpers;

  this.zipCode = function(format) {
    // if zip format is not specified, use the zip format defined for the locale
    if (typeof format === 'undefined') {
      var localeFormat = faker.definitions.address.postcode;
      if (typeof localeFormat === 'string') {
        format = localeFormat;
      } else {
        format = faker.random.arrayElement(localeFormat);
      }
    }
    return Helpers.replaceSymbols(format);
  }

  this.city = function (format) {
    var formats = [
      '{{address.cityPrefix}} {{name.firstName}} {{address.citySuffix}}',
      '{{address.cityPrefix}} {{name.firstName}}',
      '{{name.firstName}} {{address.citySuffix}}',
      '{{name.lastName}} {{address.citySuffix}}'
    ];

    if (typeof format !== "number") {
      format = faker.random.number(formats.length - 1);
    }

    return f(formats[format]);

  }

  this.cityPrefix = function () {
    return faker.random.arrayElement(faker.definitions.address.city_prefix);
  }

  this.citySuffix = function () {
    return faker.random.arrayElement(faker.definitions.address.city_suffix);
  }

  this.streetName = function () {
      var result;
      var suffix = faker.address.streetSuffix();
      if (suffix !== "") {
          suffix = " " + suffix
      }

      switch (faker.random.number(1)) {
      case 0:
          result = faker.name.lastName() + suffix;
          break;
      case 1:
          result = faker.name.firstName() + suffix;
          break;
      }
      return result;
  }

  //
  // TODO: change all these methods that accept a boolean to instead accept an options hash.
  //
  this.streetAddress = function (useFullAddress) {
      if (useFullAddress === undefined) { useFullAddress = false; }
      var address = "";
      switch (faker.random.number(2)) {
      case 0:
          address = Helpers.replaceSymbolWithNumber("#####") + " " + faker.address.streetName();
          break;
      case 1:
          address = Helpers.replaceSymbolWithNumber("####") +  " " + faker.address.streetName();
          break;
      case 2:
          address = Helpers.replaceSymbolWithNumber("###") + " " + faker.address.streetName();
          break;
      }
      return useFullAddress ? (address + " " + faker.address.secondaryAddress()) : address;
  }

  this.streetSuffix = function () {
      return faker.random.arrayElement(faker.definitions.address.street_suffix);
  }
  
  this.streetPrefix = function () {
      return faker.random.arrayElement(faker.definitions.address.street_prefix);
  }

  this.secondaryAddress = function () {
      return Helpers.replaceSymbolWithNumber(faker.random.arrayElement(
          [
              'Apt. ###',
              'Suite ###'
          ]
      ));
  }

  this.county = function () {
    return faker.random.arrayElement(faker.definitions.address.county);
  }

  this.country = function () {
    return faker.random.arrayElement(faker.definitions.address.country);
  }

  this.countryCode = function () {
    return faker.random.arrayElement(faker.definitions.address.country_code);
  }

  this.state = function (useAbbr) {
      return faker.random.arrayElement(faker.definitions.address.state);
  }

  this.stateAbbr = function () {
      return faker.random.arrayElement(faker.definitions.address.state_abbr);
  }

  this.latitude = function () {
      return (faker.random.number(180 * 10000) / 10000.0 - 90.0).toFixed(4);
  }

  this.longitude = function () {
      return (faker.random.number(360 * 10000) / 10000.0 - 180.0).toFixed(4);
  }
  
  return this;
}


module.exports = Address;

},{}],41:[function(require,module,exports){
var Commerce = function (faker) {
  var self = this;

  self.color = function() {
      return faker.random.arrayElement(faker.definitions.commerce.color);
  };

  self.department = function(max, fixedAmount) {
    
      return faker.random.arrayElement(faker.definitions.commerce.department);
      /*
      max = max || 3;

      var num = Math.floor((Math.random() * max) + 1);
      if (fixedAmount) {
          num = max;
      }

      var categories = faker.commerce.categories(num);

      if(num > 1) {
          return faker.commerce.mergeCategories(categories);
      }

      return categories[0];
      */
  };

  self.productName = function() {
      return faker.commerce.productAdjective() + " " +
              faker.commerce.productMaterial() + " " +
              faker.commerce.product();
  };

  self.price = function(min, max, dec, symbol) {
      min = min || 0;
      max = max || 1000;
      dec = dec || 2;
      symbol = symbol || '';

      if(min < 0 || max < 0) {
          return symbol + 0.00;
      }

      return symbol + (Math.round((Math.random() * (max - min) + min) * Math.pow(10, dec)) / Math.pow(10, dec)).toFixed(dec);
  };

  /*
  self.categories = function(num) {
      var categories = [];

      do {
          var category = faker.random.arrayElement(faker.definitions.commerce.department);
          if(categories.indexOf(category) === -1) {
              categories.push(category);
          }
      } while(categories.length < num);

      return categories;
  };

  */
  /*
  self.mergeCategories = function(categories) {
      var separator = faker.definitions.separator || " &";
      // TODO: find undefined here
      categories = categories || faker.definitions.commerce.categories;
      var commaSeparated = categories.slice(0, -1).join(', ');

      return [commaSeparated, categories[categories.length - 1]].join(separator + " ");
  };
  */

  self.productAdjective = function() {
      return faker.random.arrayElement(faker.definitions.commerce.product_name.adjective);
  };

  self.productMaterial = function() {
      return faker.random.arrayElement(faker.definitions.commerce.product_name.material);
  };

  self.product = function() {
      return faker.random.arrayElement(faker.definitions.commerce.product_name.product);
  }

  return self;
};

module['exports'] = Commerce;
},{}],42:[function(require,module,exports){
var Company = function (faker) {
  
  var self = this;
  var f = faker.fake;
  
  this.suffixes = function () {
    // Don't want the source array exposed to modification, so return a copy
    return faker.definitions.company.suffix.slice(0);
  }

  this.companyName = function (format) {

    var formats = [
      '{{name.lastName}} {{company.companySuffix}}',
      '{{name.lastName}} - {{name.lastName}}',
      '{{name.lastName}}, {{name.lastName}} and {{name.lastName}}'
    ];

    if (typeof format !== "number") {
      format = faker.random.number(formats.length - 1);
    }

    return f(formats[format]);
  }

  this.companySuffix = function () {
      return faker.random.arrayElement(faker.company.suffixes());
  }

  this.catchPhrase = function () {
    return f('{{company.catchPhraseAdjective}} {{company.catchPhraseDescriptor}} {{company.catchPhraseNoun}}')
  }

  this.bs = function () {
    return f('{{company.bsAdjective}} {{company.bsBuzz}} {{company.bsNoun}}');
  }

  this.catchPhraseAdjective = function () {
      return faker.random.arrayElement(faker.definitions.company.adjective);
  }

  this.catchPhraseDescriptor = function () {
      return faker.random.arrayElement(faker.definitions.company.descriptor);
  }

  this.catchPhraseNoun = function () {
      return faker.random.arrayElement(faker.definitions.company.noun);
  }

  this.bsAdjective = function () {
      return faker.random.arrayElement(faker.definitions.company.bs_adjective);
  }

  this.bsBuzz = function () {
      return faker.random.arrayElement(faker.definitions.company.bs_verb);
  }

  this.bsNoun = function () {
      return faker.random.arrayElement(faker.definitions.company.bs_noun);
  }
  
}

module['exports'] = Company;
},{}],43:[function(require,module,exports){
var _Date = function (faker) {
  var self = this;
  self.past = function (years, refDate) {
      var date = (refDate) ? new Date(Date.parse(refDate)) : new Date();
      var range = {
        min: 1000,
        max: (years || 1) * 365 * 24 * 3600 * 1000
      };

      var past = date.getTime();
      past -= faker.random.number(range); // some time from now to N years ago, in milliseconds
      date.setTime(past);

      return date;
  };

  self.future = function (years, refDate) {
      var date = (refDate) ? new Date(Date.parse(refDate)) : new Date();
      var range = {
        min: 1000,
        max: (years || 1) * 365 * 24 * 3600 * 1000
      };

      var future = date.getTime();
      future += faker.random.number(range); // some time from now to N years later, in milliseconds
      date.setTime(future);

      return date;
  };

  self.between = function (from, to) {
      var fromMilli = Date.parse(from);
      var dateOffset = faker.random.number(Date.parse(to) - fromMilli);

      var newDate = new Date(fromMilli + dateOffset);

      return newDate;
  };

  self.recent = function (days) {
      var date = new Date();
      var range = {
        min: 1000,
        max: (days || 1) * 24 * 3600 * 1000
      };

      var future = date.getTime();
      future -= faker.random.number(range); // some time from now to N days ago, in milliseconds
      date.setTime(future);

      return date;
  };

  self.month = function (options) {
      options = options || {};

      var type = 'wide';
      if (options.abbr) {
          type = 'abbr';
      }
      if (options.context && typeof faker.definitions.date.month[type + '_context'] !== 'undefined') {
          type += '_context';
      }

      var source = faker.definitions.date.month[type];

      return faker.random.arrayElement(source);
  };

  self.weekday = function (options) {
      options = options || {};

      var type = 'wide';
      if (options.abbr) {
          type = 'abbr';
      }
      if (options.context && typeof faker.definitions.date.weekday[type + '_context'] !== 'undefined') {
          type += '_context';
      }

      var source = faker.definitions.date.weekday[type];

      return faker.random.arrayElement(source);
  };
  
  return self;
  
};

module['exports'] = _Date;
},{}],44:[function(require,module,exports){
/*
  fake.js - generator method for combining faker methods based on string input

*/

function Fake (faker) {
  
  this.fake = function fake (str) {
    // setup default response as empty string
    var res = '';

    // if incoming str parameter is not provided, return error message
    if (typeof str !== 'string' || str.length === 0) {
      res = 'string parameter is required!';
      return res;
    }

    // find first matching {{ and }}
    var start = str.search('{{');
    var end = str.search('}}');

    // if no {{ and }} is found, we are done
    if (start === -1 && end === -1) {
      return str;
    }

    // console.log('attempting to parse', str);

    // extract method name from between the {{ }} that we found
    // for example: {{name.firstName}}
    var method = str.substr(start + 2,  end - start - 2);
    method = method.replace('}}', '');
    method = method.replace('{{', '');

    // console.log('method', method)

    // split the method into module and function
    var parts = method.split('.');

    if (typeof faker[parts[0]] === "undefined") {
      throw new Error('Invalid module: ' + parts[0]);
    }

    if (typeof faker[parts[0]][parts[1]] === "undefined") {
      throw new Error('Invalid method: ' + parts[0] + "." + parts[1]);
    }

    // assign the function from the module.function namespace
    var fn = faker[parts[0]][parts[1]];

    // replace the found tag with the returned fake value
    res = str.replace('{{' + method + '}}', fn());

    // return the response recursively until we are done finding all tags
    return fake(res);    
  }
  
  return this;
  
  
}

module['exports'] = Fake;
},{}],45:[function(require,module,exports){
var Finance = function (faker) {
  var Helpers = faker.helpers,
      self = this;

  self.account = function (length) {

      length = length || 8;

      var template = '';

      for (var i = 0; i < length; i++) {
          template = template + '#';
      }
      length = null;
      return Helpers.replaceSymbolWithNumber(template);
  }

  self.accountName = function () {

      return [Helpers.randomize(faker.definitions.finance.account_type), 'Account'].join(' ');
  }

  self.mask = function (length, parens, elipsis) {


      //set defaults
      length = (length == 0 || !length || typeof length == 'undefined') ? 4 : length;
      parens = (parens === null) ? true : parens;
      elipsis = (elipsis === null) ? true : elipsis;

      //create a template for length
      var template = '';

      for (var i = 0; i < length; i++) {
          template = template + '#';
      }

      //prefix with elipsis
      template = (elipsis) ? ['...', template].join('') : template;

      template = (parens) ? ['(', template, ')'].join('') : template;

      //generate random numbers
      template = Helpers.replaceSymbolWithNumber(template);

      return template;

  }

  //min and max take in minimum and maximum amounts, dec is the decimal place you want rounded to, symbol is $, €, £, etc
  //NOTE: this returns a string representation of the value, if you want a number use parseFloat and no symbol

  self.amount = function (min, max, dec, symbol) {

      min = min || 0;
      max = max || 1000;
      dec = dec || 2;
      symbol = symbol || '';

      return symbol + (Math.round((Math.random() * (max - min) + min) * Math.pow(10, dec)) / Math.pow(10, dec)).toFixed(dec);

  }

  self.transactionType = function () {
      return Helpers.randomize(faker.definitions.finance.transaction_type);
  }

  self.currencyCode = function () {
      return faker.random.objectElement(faker.definitions.finance.currency)['code'];
  }

  self.currencyName = function () {
      return faker.random.objectElement(faker.definitions.finance.currency, 'key');
  }

  self.currencySymbol = function () {
      var symbol;

      while (!symbol) {
          symbol = faker.random.objectElement(faker.definitions.finance.currency)['symbol'];
      }
      return symbol;
  }
}

module['exports'] = Finance;
},{}],46:[function(require,module,exports){
var Hacker = function (faker) {
  var self = this;
  
  self.abbreviation = function () {
    return faker.random.arrayElement(faker.definitions.hacker.abbreviation);
  };

  self.adjective = function () {
    return faker.random.arrayElement(faker.definitions.hacker.adjective);
  };

  self.noun = function () {
    return faker.random.arrayElement(faker.definitions.hacker.noun);
  };

  self.verb = function () {
    return faker.random.arrayElement(faker.definitions.hacker.verb);
  };

  self.ingverb = function () {
    return faker.random.arrayElement(faker.definitions.hacker.ingverb);
  };

  self.phrase = function () {

    var data = {
      abbreviation: self.abbreviation(),
      adjective: self.adjective(),
      ingverb: self.ingverb(),
      noun: self.noun(),
      verb: self.verb()
    };

    var phrase = faker.random.arrayElement([ "If we {{verb}} the {{noun}}, we can get to the {{abbreviation}} {{noun}} through the {{adjective}} {{abbreviation}} {{noun}}!",
      "We need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!",
      "Try to {{verb}} the {{abbreviation}} {{noun}}, maybe it will {{verb}} the {{adjective}} {{noun}}!",
      "You can't {{verb}} the {{noun}} without {{ingverb}} the {{adjective}} {{abbreviation}} {{noun}}!",
      "Use the {{adjective}} {{abbreviation}} {{noun}}, then you can {{verb}} the {{adjective}} {{noun}}!",
      "The {{abbreviation}} {{noun}} is down, {{verb}} the {{adjective}} {{noun}} so we can {{verb}} the {{abbreviation}} {{noun}}!",
      "{{ingverb}} the {{noun}} won't do anything, we need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!",
      "I'll {{verb}} the {{adjective}} {{abbreviation}} {{noun}}, that should {{noun}} the {{abbreviation}} {{noun}}!"
   ]);

   return faker.helpers.mustache(phrase, data);

  };
  
  return self;
};

module['exports'] = Hacker;
},{}],47:[function(require,module,exports){
var Helpers = function (faker) {

  var self = this;

  // backword-compatibility
  self.randomize = function (array) {
      array = array || ["a", "b", "c"];
      return faker.random.arrayElement(array);
  };

  // slugifies string
  self.slugify = function (string) {
      string = string || "";
      return string.replace(/ /g, '-').replace(/[^\w\.\-]+/g, '');
  };

  // parses string for a symbol and replace it with a random number from 1-10
  self.replaceSymbolWithNumber = function (string, symbol) {
      string = string || "";
      // default symbol is '#'
      if (symbol === undefined) {
          symbol = '#';
      }

      var str = '';
      for (var i = 0; i < string.length; i++) {
          if (string.charAt(i) == symbol) {
              str += faker.random.number(9);
          } else {
              str += string.charAt(i);
          }
      }
      return str;
  };

  // parses string for symbols (numbers or letters) and replaces them appropriately
  self.replaceSymbols = function (string) {
      string = string || "";
  	var alpha = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']
      var str = '';

      for (var i = 0; i < string.length; i++) {
          if (string.charAt(i) == "#") {
              str += faker.random.number(9);
  		} else if (string.charAt(i) == "?") {
  			str += alpha[Math.floor(Math.random() * alpha.length)];
          } else {
              str += string.charAt(i);
          }
      }
      return str;
  };

  // takes an array and returns it randomized
  self.shuffle = function (o) {
      o = o || ["a", "b", "c"];
      for (var j, x, i = o.length-1; i; j = faker.random.number(i), x = o[--i], o[i] = o[j], o[j] = x);
      return o;
  };

  self.mustache = function (str, data) {
    if (typeof str === 'undefined') {
      return '';
    }
    for(var p in data) {
      var re = new RegExp('{{' + p + '}}', 'g')
      str = str.replace(re, data[p]);
    }
    return str;
  };

  self.createCard = function () {
      return {
          "name": faker.name.findName(),
          "username": faker.internet.userName(),
          "email": faker.internet.email(),
          "address": {
              "streetA": faker.address.streetName(),
              "streetB": faker.address.streetAddress(),
              "streetC": faker.address.streetAddress(true),
              "streetD": faker.address.secondaryAddress(),
              "city": faker.address.city(),
              "state": faker.address.state(),
              "country": faker.address.country(),
              "zipcode": faker.address.zipCode(),
              "geo": {
                  "lat": faker.address.latitude(),
                  "lng": faker.address.longitude()
              }
          },
          "phone": faker.phone.phoneNumber(),
          "website": faker.internet.domainName(),
          "company": {
              "name": faker.company.companyName(),
              "catchPhrase": faker.company.catchPhrase(),
              "bs": faker.company.bs()
          },
          "posts": [
              {
                  "words": faker.lorem.words(),
                  "sentence": faker.lorem.sentence(),
                  "sentences": faker.lorem.sentences(),
                  "paragraph": faker.lorem.paragraph()
              },
              {
                  "words": faker.lorem.words(),
                  "sentence": faker.lorem.sentence(),
                  "sentences": faker.lorem.sentences(),
                  "paragraph": faker.lorem.paragraph()
              },
              {
                  "words": faker.lorem.words(),
                  "sentence": faker.lorem.sentence(),
                  "sentences": faker.lorem.sentences(),
                  "paragraph": faker.lorem.paragraph()
              }
          ],
          "accountHistory": [faker.helpers.createTransaction(), faker.helpers.createTransaction(), faker.helpers.createTransaction()]
      };
  };

  self.contextualCard = function () {
    var name = faker.name.firstName(),
        userName = faker.internet.userName(name);
    return {
        "name": name,
        "username": userName,
        "avatar": faker.internet.avatar(),
        "email": faker.internet.email(userName),
        "dob": faker.date.past(50, new Date("Sat Sep 20 1992 21:35:02 GMT+0200 (CEST)")),
        "phone": faker.phone.phoneNumber(),
        "address": {
            "street": faker.address.streetName(true),
            "suite": faker.address.secondaryAddress(),
            "city": faker.address.city(),
            "zipcode": faker.address.zipCode(),
            "geo": {
                "lat": faker.address.latitude(),
                "lng": faker.address.longitude()
            }
        },
        "website": faker.internet.domainName(),
        "company": {
            "name": faker.company.companyName(),
            "catchPhrase": faker.company.catchPhrase(),
            "bs": faker.company.bs()
        }
    };
  };


  self.userCard = function () {
      return {
          "name": faker.name.findName(),
          "username": faker.internet.userName(),
          "email": faker.internet.email(),
          "address": {
              "street": faker.address.streetName(true),
              "suite": faker.address.secondaryAddress(),
              "city": faker.address.city(),
              "zipcode": faker.address.zipCode(),
              "geo": {
                  "lat": faker.address.latitude(),
                  "lng": faker.address.longitude()
              }
          },
          "phone": faker.phone.phoneNumber(),
          "website": faker.internet.domainName(),
          "company": {
              "name": faker.company.companyName(),
              "catchPhrase": faker.company.catchPhrase(),
              "bs": faker.company.bs()
          }
      };
  };

  self.createTransaction = function(){
    return {
      "amount" : faker.finance.amount(),
      "date" : new Date(2012, 1, 2),  //TODO: add a ranged date method
      "business": faker.company.companyName(),
      "name": [faker.finance.accountName(), faker.finance.mask()].join(' '),
      "type" : self.randomize(faker.definitions.finance.transaction_type),
      "account" : faker.finance.account()
    };
  };
  
  return self;
  
};


/*
String.prototype.capitalize = function () { //v1.0
    return this.replace(/\w+/g, function (a) {
        return a.charAt(0).toUpperCase() + a.substr(1).toLowerCase();
    });
};
*/

module['exports'] = Helpers;
},{}],48:[function(require,module,exports){
var Image = function (faker) {

  var self = this;

  self.image = function () {
    var categories = ["abstract", "animals", "business", "cats", "city", "food", "nightlife", "fashion", "people", "nature", "sports", "technics", "transport"];
    return self[faker.random.arrayElement(categories)]();
  };
  self.avatar = function () {
    return faker.internet.avatar();
  };
  self.imageUrl = function (width, height, category) {
      var width = width || 640;
      var height = height || 480;

      var url ='http://lorempixel.com/' + width + '/' + height;
      if (typeof category !== 'undefined') {
        url += '/' + category;
      }
      return url;
  };
  self.abstract = function (width, height) {
    return faker.image.imageUrl(width, height, 'abstract');
  };
  self.animals = function (width, height) {
    return faker.image.imageUrl(width, height, 'animals');
  };
  self.business = function (width, height) {
    return faker.image.imageUrl(width, height, 'business');
  };
  self.cats = function (width, height) {
    return faker.image.imageUrl(width, height, 'cats');
  };
  self.city = function (width, height) {
    return faker.image.imageUrl(width, height, 'city');
  };
  self.food = function (width, height) {
    return faker.image.imageUrl(width, height, 'food');
  };
  self.nightlife = function (width, height) {
    return faker.image.imageUrl(width, height, 'nightlife');
  };
  self.fashion = function (width, height) {
    return faker.image.imageUrl(width, height, 'fashion');
  };
  self.people = function (width, height) {
    return faker.image.imageUrl(width, height, 'people');
  };
  self.nature = function (width, height) {
    return faker.image.imageUrl(width, height, 'nature');
  };
  self.sports = function (width, height) {
    return faker.image.imageUrl(width, height, 'sports');
  };
  self.technics = function (width, height) {
    return faker.image.imageUrl(width, height, 'technics');
  };
  self.transport = function (width, height) {
    return faker.image.imageUrl(width, height, 'transport');
  }  
}

module["exports"] = Image;
},{}],49:[function(require,module,exports){
/*

   this index.js file is used for including the faker library as a CommonJS module, instead of a bundle

   you can include the faker library into your existing node.js application by requiring the entire /faker directory

    var faker = require(./faker);
    var randomName = faker.name.findName();

   you can also simply include the "faker.js" file which is the auto-generated bundled version of the faker library

    var faker = require(./customAppPath/faker);
    var randomName = faker.name.findName();


  if you plan on modifying the faker library you should be performing your changes in the /lib/ directory

*/

function Faker (opts) {

  var self = this;

  opts = opts || {};

  // assign options
  var locales = self.locales || opts.locales || {};
  var locale = self.locale || opts.locale || "en";
  var localeFallback = self.localeFallback || opts.localeFallback || "en";

  self.locales = locales;
  self.locale = locale;
  self.localeFallback = localeFallback;

  self.definitions = {};

  var Fake = require('./fake');
  self.fake = new Fake(self).fake;

  var Random = require('./random');
  self.random = new Random(self);
  // self.random = require('./random');

  var Helpers = require('./helpers');
  self.helpers = new Helpers(self);

  var Name = require('./name');
  self.name = new Name(self);
  // self.name = require('./name');

  var Address = require('./address');
  self.address = new Address(self);

  var Company = require('./company');
  self.company = new Company(self);

  var Finance = require('./finance');
  self.finance = new Finance(self);

  var Image = require('./image');
  self.image = new Image(self);

  var Lorem = require('./lorem');
  self.lorem = new Lorem(self);

  var Hacker = require('./hacker');
  self.hacker = new Hacker(self);

  var Internet = require('./internet');
  self.internet = new Internet(self);

  var Phone = require('./phone_number');
  self.phone = new Phone(self);

  var _Date = require('./date');
  self.date = new _Date(self);

  var Commerce = require('./commerce');
  self.commerce = new Commerce(self);

  // TODO: fix self.commerce = require('./commerce');

  var _definitions = {
    "name": ["first_name", "last_name", "prefix", "suffix", "title", "male_first_name", "female_first_name", "male_middle_name", "female_middle_name", "male_last_name", "female_last_name"],
    "address": ["city_prefix", "city_suffix", "street_suffix", "county", "country", "country_code", "state", "state_abbr", "street_prefix", "postcode"],
    "company": ["adjective", "noun", "descriptor", "bs_adjective", "bs_noun", "bs_verb", "suffix"],
    "lorem": ["words"],
    "hacker": ["abbreviation", "adjective", "noun", "verb", "ingverb"],
    "phone_number": ["formats"],
    "finance": ["account_type", "transaction_type", "currency"],
    "internet": ["avatar_uri", "domain_suffix", "free_email", "password"],
    "commerce": ["color", "department", "product_name", "price", "categories"],
    "date": ["month", "weekday"],
    "title": "",
    "separator": ""
  };

  // Create a Getter for all definitions.foo.bar propetries
  Object.keys(_definitions).forEach(function(d){
    if (typeof self.definitions[d] === "undefined") {
      self.definitions[d] = {};
    }

    if (typeof _definitions[d] === "string") {
        self.definitions[d] = _definitions[d];
      return;
    }

    _definitions[d].forEach(function(p){
      Object.defineProperty(self.definitions[d], p, {
        get: function () {
          if (typeof self.locales[self.locale][d] === "undefined" || typeof self.locales[self.locale][d][p] === "undefined") {
            // certain localization sets contain less data then others.
            // in the case of a missing defintion, use the default localeFallback to substitute the missing set data
            // throw new Error('unknown property ' + d + p)
            return self.locales[localeFallback][d][p];
          } else {
            // return localized data
            return self.locales[self.locale][d][p];
          }
        }
      });
    });
  });

};

Faker.prototype.seed = function(value) {
  var Random = require('./random');
  this.seedValue = value;
  this.random = new Random(this, this.seedValue);
}
module['exports'] = Faker;

},{"./address":40,"./commerce":41,"./company":42,"./date":43,"./fake":44,"./finance":45,"./hacker":46,"./helpers":47,"./image":48,"./internet":50,"./lorem":949,"./name":950,"./phone_number":951,"./random":952}],50:[function(require,module,exports){
var password_generator = require('../vendor/password-generator.js'),
    random_ua = require('../vendor/user-agent');

var Internet = function (faker) {
  var self = this;
  self.avatar = function () {
      return faker.random.arrayElement(faker.definitions.internet.avatar_uri);
  };

  self.email = function (firstName, lastName, provider) {
      provider = provider || faker.random.arrayElement(faker.definitions.internet.free_email);
      return  faker.helpers.slugify(faker.internet.userName(firstName, lastName)) + "@" + provider;
  };

  self.userName = function (firstName, lastName) {
      var result;
      firstName = firstName || faker.name.firstName();
      lastName = lastName || faker.name.lastName();
      switch (faker.random.number(2)) {
      case 0:
          result = firstName + faker.random.number(99);
          break;
      case 1:
          result = firstName + faker.random.arrayElement([".", "_"]) + lastName;
          break;
      case 2:
          result = firstName + faker.random.arrayElement([".", "_"]) + lastName + faker.random.number(99);
          break;
      }
      result = result.toString().replace(/'/g, "");
      result = result.replace(/ /g, "");
      return result;
  };

  self.protocol = function () {
      var protocols = ['http','https'];
      return faker.random.arrayElement(protocols);
  };

  self.url = function () {
      return faker.internet.protocol() + '://' + faker.internet.domainName();
  };

  self.domainName = function () {
      return faker.internet.domainWord() + "." + faker.internet.domainSuffix();
  };

  self.domainSuffix = function () {
      return faker.random.arrayElement(faker.definitions.internet.domain_suffix);
  };

  self.domainWord = function () {
      return faker.name.firstName().replace(/([\\~#&*{}/:<>?|\"])/ig, '').toLowerCase();
  };

  self.ip = function () {
      var randNum = function () {
          return (faker.random.number(255)).toFixed(0);
      };

      var result = [];
      for (var i = 0; i < 4; i++) {
          result[i] = randNum();
      }

      return result.join(".");
  };

  self.userAgent = function () {
    return random_ua.generate();
  };

  self.color = function (baseRed255, baseGreen255, baseBlue255) {
      baseRed255 = baseRed255 || 0;
      baseGreen255 = baseGreen255 || 0;
      baseBlue255 = baseBlue255 || 0;
      // based on awesome response : http://stackoverflow.com/questions/43044/algorithm-to-randomly-generate-an-aesthetically-pleasing-color-palette
      var red = Math.floor((faker.random.number(256) + baseRed255) / 2);
      var green = Math.floor((faker.random.number(256) + baseGreen255) / 2);
      var blue = Math.floor((faker.random.number(256) + baseBlue255) / 2);
      var redStr = red.toString(16);
      var greenStr = green.toString(16);
      var blueStr = blue.toString(16);
      return '#' +
        (redStr.length === 1 ? '0' : '') + redStr +
        (greenStr.length === 1 ? '0' : '') + greenStr +
        (blueStr.length === 1 ? '0': '') + blueStr;

  };

  self.mac = function(){
      var i, mac = "";
      for (i=0; i < 12; i++) {
          mac+= parseInt(Math.random()*16).toString(16);
          if (i%2==1 && i != 11) {
              mac+=":";
          }
      }
      return mac;
  };

  self.password = function (len, memorable, pattern, prefix) {
    len = len || 15;
    if (typeof memorable === "undefined") {
      memorable = false;
    }
    return password_generator(len, memorable, pattern, prefix);
  }
  
};


module["exports"] = Internet;

},{"../vendor/password-generator.js":954,"../vendor/user-agent":955}],51:[function(require,module,exports){
exports['de'] = require('./locales/de');
exports['de_AT'] = require('./locales/de_AT');
exports['de_CH'] = require('./locales/de_CH');
exports['en'] = require('./locales/en');
exports['en_AU'] = require('./locales/en_AU');
exports['en_BORK'] = require('./locales/en_BORK');
exports['en_CA'] = require('./locales/en_CA');
exports['en_GB'] = require('./locales/en_GB');
exports['en_IE'] = require('./locales/en_IE');
exports['en_IND'] = require('./locales/en_IND');
exports['en_US'] = require('./locales/en_US');
exports['en_au_ocker'] = require('./locales/en_au_ocker');
exports['es'] = require('./locales/es');
exports['es_MX'] = require('./locales/es_MX');
exports['fa'] = require('./locales/fa');
exports['fr'] = require('./locales/fr');
exports['fr_CA'] = require('./locales/fr_CA');
exports['ge'] = require('./locales/ge');
exports['it'] = require('./locales/it');
exports['ja'] = require('./locales/ja');
exports['ko'] = require('./locales/ko');
exports['nb_NO'] = require('./locales/nb_NO');
exports['nep'] = require('./locales/nep');
exports['nl'] = require('./locales/nl');
exports['pl'] = require('./locales/pl');
exports['pt_BR'] = require('./locales/pt_BR');
exports['ru'] = require('./locales/ru');
exports['sk'] = require('./locales/sk');
exports['sv'] = require('./locales/sv');
exports['tr'] = require('./locales/tr');
exports['uk'] = require('./locales/uk');
exports['vi'] = require('./locales/vi');
exports['zh_CN'] = require('./locales/zh_CN');
exports['zh_TW'] = require('./locales/zh_TW');

},{"./locales/de":72,"./locales/de_AT":105,"./locales/de_CH":124,"./locales/en":194,"./locales/en_AU":223,"./locales/en_BORK":231,"./locales/en_CA":239,"./locales/en_GB":251,"./locales/en_IE":261,"./locales/en_IND":273,"./locales/en_US":285,"./locales/en_au_ocker":305,"./locales/es":337,"./locales/es_MX":381,"./locales/fa":400,"./locales/fr":426,"./locales/fr_CA":446,"./locales/ge":472,"./locales/it":507,"./locales/ja":529,"./locales/ko":550,"./locales/nb_NO":580,"./locales/nep":600,"./locales/nl":624,"./locales/pl":664,"./locales/pt_BR":693,"./locales/ru":730,"./locales/sk":770,"./locales/sv":814,"./locales/tr":840,"./locales/uk":873,"./locales/vi":900,"./locales/zh_CN":923,"./locales/zh_TW":942}],52:[function(require,module,exports){
module["exports"] = [
  "###",
  "##",
  "#",
  "##a",
  "##b",
  "##c"
];

},{}],53:[function(require,module,exports){
module["exports"] = [
  "#{city_prefix} #{Name.first_name}#{city_suffix}",
  "#{city_prefix} #{Name.first_name}",
  "#{Name.first_name}#{city_suffix}",
  "#{Name.last_name}#{city_suffix}"
];

},{}],54:[function(require,module,exports){
module["exports"] = [
  "Nord",
  "Ost",
  "West",
  "Süd",
  "Neu",
  "Alt",
  "Bad"
];

},{}],55:[function(require,module,exports){
module["exports"] = [
  "stadt",
  "dorf",
  "land",
  "scheid",
  "burg"
];

},{}],56:[function(require,module,exports){
module["exports"] = [
  "Ägypten",
  "Äquatorialguinea",
  "Äthiopien",
  "Österreich",
  "Afghanistan",
  "Albanien",
  "Algerien",
  "Amerikanisch-Samoa",
  "Amerikanische Jungferninseln",
  "Andorra",
  "Angola",
  "Anguilla",
  "Antarktis",
  "Antigua und Barbuda",
  "Argentinien",
  "Armenien",
  "Aruba",
  "Aserbaidschan",
  "Australien",
  "Bahamas",
  "Bahrain",
  "Bangladesch",
  "Barbados",
  "Belarus",
  "Belgien",
  "Belize",
  "Benin",
  "die Bermudas",
  "Bhutan",
  "Bolivien",
  "Bosnien und Herzegowina",
  "Botsuana",
  "Bouvetinsel",
  "Brasilien",
  "Britische Jungferninseln",
  "Britisches Territorium im Indischen Ozean",
  "Brunei Darussalam",
  "Bulgarien",
  "Burkina Faso",
  "Burundi",
  "Chile",
  "China",
  "Cookinseln",
  "Costa Rica",
  "Dänemark",
  "Demokratische Republik Kongo",
  "Demokratische Volksrepublik Korea",
  "Deutschland",
  "Dominica",
  "Dominikanische Republik",
  "Dschibuti",
  "Ecuador",
  "El Salvador",
  "Eritrea",
  "Estland",
  "Färöer",
  "Falklandinseln",
  "Fidschi",
  "Finnland",
  "Frankreich",
  "Französisch-Guayana",
  "Französisch-Polynesien",
  "Französische Gebiete im südlichen Indischen Ozean",
  "Gabun",
  "Gambia",
  "Georgien",
  "Ghana",
  "Gibraltar",
  "Grönland",
  "Grenada",
  "Griechenland",
  "Guadeloupe",
  "Guam",
  "Guatemala",
  "Guinea",
  "Guinea-Bissau",
  "Guyana",
  "Haiti",
  "Heard und McDonaldinseln",
  "Honduras",
  "Hongkong",
  "Indien",
  "Indonesien",
  "Irak",
  "Iran",
  "Irland",
  "Island",
  "Israel",
  "Italien",
  "Jamaika",
  "Japan",
  "Jemen",
  "Jordanien",
  "Jugoslawien",
  "Kaimaninseln",
  "Kambodscha",
  "Kamerun",
  "Kanada",
  "Kap Verde",
  "Kasachstan",
  "Katar",
  "Kenia",
  "Kirgisistan",
  "Kiribati",
  "Kleinere amerikanische Überseeinseln",
  "Kokosinseln",
  "Kolumbien",
  "Komoren",
  "Kongo",
  "Kroatien",
  "Kuba",
  "Kuwait",
  "Laos",
  "Lesotho",
  "Lettland",
  "Libanon",
  "Liberia",
  "Libyen",
  "Liechtenstein",
  "Litauen",
  "Luxemburg",
  "Macau",
  "Madagaskar",
  "Malawi",
  "Malaysia",
  "Malediven",
  "Mali",
  "Malta",
  "ehemalige jugoslawische Republik Mazedonien",
  "Marokko",
  "Marshallinseln",
  "Martinique",
  "Mauretanien",
  "Mauritius",
  "Mayotte",
  "Mexiko",
  "Mikronesien",
  "Monaco",
  "Mongolei",
  "Montserrat",
  "Mosambik",
  "Myanmar",
  "Nördliche Marianen",
  "Namibia",
  "Nauru",
  "Nepal",
  "Neukaledonien",
  "Neuseeland",
  "Nicaragua",
  "Niederländische Antillen",
  "Niederlande",
  "Niger",
  "Nigeria",
  "Niue",
  "Norfolkinsel",
  "Norwegen",
  "Oman",
  "Osttimor",
  "Pakistan",
  "Palau",
  "Panama",
  "Papua-Neuguinea",
  "Paraguay",
  "Peru",
  "Philippinen",
  "Pitcairninseln",
  "Polen",
  "Portugal",
  "Puerto Rico",
  "Réunion",
  "Republik Korea",
  "Republik Moldau",
  "Ruanda",
  "Rumänien",
  "Russische Föderation",
  "São Tomé und Príncipe",
  "Südafrika",
  "Südgeorgien und Südliche Sandwichinseln",
  "Salomonen",
  "Sambia",
  "Samoa",
  "San Marino",
  "Saudi-Arabien",
  "Schweden",
  "Schweiz",
  "Senegal",
  "Seychellen",
  "Sierra Leone",
  "Simbabwe",
  "Singapur",
  "Slowakei",
  "Slowenien",
  "Somalien",
  "Spanien",
  "Sri Lanka",
  "St. Helena",
  "St. Kitts und Nevis",
  "St. Lucia",
  "St. Pierre und Miquelon",
  "St. Vincent und die Grenadinen",
  "Sudan",
  "Surinam",
  "Svalbard und Jan Mayen",
  "Swasiland",
  "Syrien",
  "Türkei",
  "Tadschikistan",
  "Taiwan",
  "Tansania",
  "Thailand",
  "Togo",
  "Tokelau",
  "Tonga",
  "Trinidad und Tobago",
  "Tschad",
  "Tschechische Republik",
  "Tunesien",
  "Turkmenistan",
  "Turks- und Caicosinseln",
  "Tuvalu",
  "Uganda",
  "Ukraine",
  "Ungarn",
  "Uruguay",
  "Usbekistan",
  "Vanuatu",
  "Vatikanstadt",
  "Venezuela",
  "Vereinigte Arabische Emirate",
  "Vereinigte Staaten",
  "Vereinigtes Königreich",
  "Vietnam",
  "Wallis und Futuna",
  "Weihnachtsinsel",
  "Westsahara",
  "Zentralafrikanische Republik",
  "Zypern"
];

},{}],57:[function(require,module,exports){
module["exports"] = [
  "Deutschland"
];

},{}],58:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.country = require("./country");
address.street_root = require("./street_root");
address.building_number = require("./building_number");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":52,"./city":53,"./city_prefix":54,"./city_suffix":55,"./country":56,"./default_country":57,"./postcode":59,"./secondary_address":60,"./state":61,"./state_abbr":62,"./street_address":63,"./street_name":64,"./street_root":65}],59:[function(require,module,exports){
module["exports"] = [
  "#####",
  "#####"
];

},{}],60:[function(require,module,exports){
module["exports"] = [
  "Apt. ###",
  "Zimmer ###",
  "# OG"
];

},{}],61:[function(require,module,exports){
module["exports"] = [
  "Baden-Württemberg",
  "Bayern",
  "Berlin",
  "Brandenburg",
  "Bremen",
  "Hamburg",
  "Hessen",
  "Mecklenburg-Vorpommern",
  "Niedersachsen",
  "Nordrhein-Westfalen",
  "Rheinland-Pfalz",
  "Saarland",
  "Sachsen",
  "Sachsen-Anhalt",
  "Schleswig-Holstein",
  "Thüringen"
];

},{}],62:[function(require,module,exports){
module["exports"] = [
  "BW",
  "BY",
  "BE",
  "BB",
  "HB",
  "HH",
  "HE",
  "MV",
  "NI",
  "NW",
  "RP",
  "SL",
  "SN",
  "ST",
  "SH",
  "TH"
];

},{}],63:[function(require,module,exports){
module["exports"] = [
  "#{street_name} #{building_number}"
];

},{}],64:[function(require,module,exports){
module["exports"] = [
  "#{street_root}"
];

},{}],65:[function(require,module,exports){
module["exports"] = [
  "Ackerweg",
  "Adalbert-Stifter-Str.",
  "Adalbertstr.",
  "Adolf-Baeyer-Str.",
  "Adolf-Kaschny-Str.",
  "Adolf-Reichwein-Str.",
  "Adolfsstr.",
  "Ahornweg",
  "Ahrstr.",
  "Akazienweg",
  "Albert-Einstein-Str.",
  "Albert-Schweitzer-Str.",
  "Albertus-Magnus-Str.",
  "Albert-Zarthe-Weg",
  "Albin-Edelmann-Str.",
  "Albrecht-Haushofer-Str.",
  "Aldegundisstr.",
  "Alexanderstr.",
  "Alfred-Delp-Str.",
  "Alfred-Kubin-Str.",
  "Alfred-Stock-Str.",
  "Alkenrather Str.",
  "Allensteiner Str.",
  "Alsenstr.",
  "Alt Steinbücheler Weg",
  "Alte Garten",
  "Alte Heide",
  "Alte Landstr.",
  "Alte Ziegelei",
  "Altenberger Str.",
  "Altenhof",
  "Alter Grenzweg",
  "Altstadtstr.",
  "Am Alten Gaswerk",
  "Am Alten Schafstall",
  "Am Arenzberg",
  "Am Benthal",
  "Am Birkenberg",
  "Am Blauen Berg",
  "Am Borsberg",
  "Am Brungen",
  "Am Büchelter Hof",
  "Am Buttermarkt",
  "Am Ehrenfriedhof",
  "Am Eselsdamm",
  "Am Falkenberg",
  "Am Frankenberg",
  "Am Gesundheitspark",
  "Am Gierlichshof",
  "Am Graben",
  "Am Hagelkreuz",
  "Am Hang",
  "Am Heidkamp",
  "Am Hemmelrather Hof",
  "Am Hofacker",
  "Am Hohen Ufer",
  "Am Höllers Eck",
  "Am Hühnerberg",
  "Am Jägerhof",
  "Am Junkernkamp",
  "Am Kemperstiegel",
  "Am Kettnersbusch",
  "Am Kiesberg",
  "Am Klösterchen",
  "Am Knechtsgraben",
  "Am Köllerweg",
  "Am Köttersbach",
  "Am Kreispark",
  "Am Kronefeld",
  "Am Küchenhof",
  "Am Kühnsbusch",
  "Am Lindenfeld",
  "Am Märchen",
  "Am Mittelberg",
  "Am Mönchshof",
  "Am Mühlenbach",
  "Am Neuenhof",
  "Am Nonnenbruch",
  "Am Plattenbusch",
  "Am Quettinger Feld",
  "Am Rosenhügel",
  "Am Sandberg",
  "Am Scherfenbrand",
  "Am Schokker",
  "Am Silbersee",
  "Am Sonnenhang",
  "Am Sportplatz",
  "Am Stadtpark",
  "Am Steinberg",
  "Am Telegraf",
  "Am Thelenhof",
  "Am Vogelkreuz",
  "Am Vogelsang",
  "Am Vogelsfeldchen",
  "Am Wambacher Hof",
  "Am Wasserturm",
  "Am Weidenbusch",
  "Am Weiher",
  "Am Weingarten",
  "Am Werth",
  "Amselweg",
  "An den Irlen",
  "An den Rheinauen",
  "An der Bergerweide",
  "An der Dingbank",
  "An der Evangelischen Kirche",
  "An der Evgl. Kirche",
  "An der Feldgasse",
  "An der Fettehenne",
  "An der Kante",
  "An der Laach",
  "An der Lehmkuhle",
  "An der Lichtenburg",
  "An der Luisenburg",
  "An der Robertsburg",
  "An der Schmitten",
  "An der Schusterinsel",
  "An der Steinrütsch",
  "An St. Andreas",
  "An St. Remigius",
  "Andreasstr.",
  "Ankerweg",
  "Annette-Kolb-Str.",
  "Apenrader Str.",
  "Arnold-Ohletz-Str.",
  "Atzlenbacher Str.",
  "Auerweg",
  "Auestr.",
  "Auf dem Acker",
  "Auf dem Blahnenhof",
  "Auf dem Bohnbüchel",
  "Auf dem Bruch",
  "Auf dem End",
  "Auf dem Forst",
  "Auf dem Herberg",
  "Auf dem Lehn",
  "Auf dem Stein",
  "Auf dem Weierberg",
  "Auf dem Weiherhahn",
  "Auf den Reien",
  "Auf der Donnen",
  "Auf der Grieße",
  "Auf der Ohmer",
  "Auf der Weide",
  "Auf'm Berg",
  "Auf'm Kamp",
  "Augustastr.",
  "August-Kekulé-Str.",
  "A.-W.-v.-Hofmann-Str.",
  "Bahnallee",
  "Bahnhofstr.",
  "Baltrumstr.",
  "Bamberger Str.",
  "Baumberger Str.",
  "Bebelstr.",
  "Beckers Kämpchen",
  "Beerenstr.",
  "Beethovenstr.",
  "Behringstr.",
  "Bendenweg",
  "Bensberger Str.",
  "Benzstr.",
  "Bergische Landstr.",
  "Bergstr.",
  "Berliner Platz",
  "Berliner Str.",
  "Bernhard-Letterhaus-Str.",
  "Bernhard-Lichtenberg-Str.",
  "Bernhard-Ridder-Str.",
  "Bernsteinstr.",
  "Bertha-Middelhauve-Str.",
  "Bertha-von-Suttner-Str.",
  "Bertolt-Brecht-Str.",
  "Berzeliusstr.",
  "Bielertstr.",
  "Biesenbach",
  "Billrothstr.",
  "Birkenbergstr.",
  "Birkengartenstr.",
  "Birkenweg",
  "Bismarckstr.",
  "Bitterfelder Str.",
  "Blankenburg",
  "Blaukehlchenweg",
  "Blütenstr.",
  "Boberstr.",
  "Böcklerstr.",
  "Bodelschwinghstr.",
  "Bodestr.",
  "Bogenstr.",
  "Bohnenkampsweg",
  "Bohofsweg",
  "Bonifatiusstr.",
  "Bonner Str.",
  "Borkumstr.",
  "Bornheimer Str.",
  "Borsigstr.",
  "Borussiastr.",
  "Bracknellstr.",
  "Brahmsweg",
  "Brandenburger Str.",
  "Breidenbachstr.",
  "Breslauer Str.",
  "Bruchhauser Str.",
  "Brückenstr.",
  "Brucknerstr.",
  "Brüder-Bonhoeffer-Str.",
  "Buchenweg",
  "Bürgerbuschweg",
  "Burgloch",
  "Burgplatz",
  "Burgstr.",
  "Burgweg",
  "Bürriger Weg",
  "Burscheider Str.",
  "Buschkämpchen",
  "Butterheider Str.",
  "Carl-Duisberg-Platz",
  "Carl-Duisberg-Str.",
  "Carl-Leverkus-Str.",
  "Carl-Maria-von-Weber-Platz",
  "Carl-Maria-von-Weber-Str.",
  "Carlo-Mierendorff-Str.",
  "Carl-Rumpff-Str.",
  "Carl-von-Ossietzky-Str.",
  "Charlottenburger Str.",
  "Christian-Heß-Str.",
  "Claasbruch",
  "Clemens-Winkler-Str.",
  "Concordiastr.",
  "Cranachstr.",
  "Dahlemer Str.",
  "Daimlerstr.",
  "Damaschkestr.",
  "Danziger Str.",
  "Debengasse",
  "Dechant-Fein-Str.",
  "Dechant-Krey-Str.",
  "Deichtorstr.",
  "Dhünnberg",
  "Dhünnstr.",
  "Dianastr.",
  "Diedenhofener Str.",
  "Diepental",
  "Diepenthaler Str.",
  "Dieselstr.",
  "Dillinger Str.",
  "Distelkamp",
  "Dohrgasse",
  "Domblick",
  "Dönhoffstr.",
  "Dornierstr.",
  "Drachenfelsstr.",
  "Dr.-August-Blank-Str.",
  "Dresdener Str.",
  "Driescher Hecke",
  "Drosselweg",
  "Dudweilerstr.",
  "Dünenweg",
  "Dünfelder Str.",
  "Dünnwalder Grenzweg",
  "Düppeler Str.",
  "Dürerstr.",
  "Dürscheider Weg",
  "Düsseldorfer Str.",
  "Edelrather Weg",
  "Edmund-Husserl-Str.",
  "Eduard-Spranger-Str.",
  "Ehrlichstr.",
  "Eichenkamp",
  "Eichenweg",
  "Eidechsenweg",
  "Eifelstr.",
  "Eifgenstr.",
  "Eintrachtstr.",
  "Elbestr.",
  "Elisabeth-Langgässer-Str.",
  "Elisabethstr.",
  "Elisabeth-von-Thadden-Str.",
  "Elisenstr.",
  "Elsa-Brändström-Str.",
  "Elsbachstr.",
  "Else-Lasker-Schüler-Str.",
  "Elsterstr.",
  "Emil-Fischer-Str.",
  "Emil-Nolde-Str.",
  "Engelbertstr.",
  "Engstenberger Weg",
  "Entenpfuhl",
  "Erbelegasse",
  "Erftstr.",
  "Erfurter Str.",
  "Erich-Heckel-Str.",
  "Erich-Klausener-Str.",
  "Erich-Ollenhauer-Str.",
  "Erlenweg",
  "Ernst-Bloch-Str.",
  "Ernst-Ludwig-Kirchner-Str.",
  "Erzbergerstr.",
  "Eschenallee",
  "Eschenweg",
  "Esmarchstr.",
  "Espenweg",
  "Euckenstr.",
  "Eulengasse",
  "Eulenkamp",
  "Ewald-Flamme-Str.",
  "Ewald-Röll-Str.",
  "Fährstr.",
  "Farnweg",
  "Fasanenweg",
  "Faßbacher Hof",
  "Felderstr.",
  "Feldkampstr.",
  "Feldsiefer Weg",
  "Feldsiefer Wiesen",
  "Feldstr.",
  "Feldtorstr.",
  "Felix-von-Roll-Str.",
  "Ferdinand-Lassalle-Str.",
  "Fester Weg",
  "Feuerbachstr.",
  "Feuerdornweg",
  "Fichtenweg",
  "Fichtestr.",
  "Finkelsteinstr.",
  "Finkenweg",
  "Fixheider Str.",
  "Flabbenhäuschen",
  "Flensburger Str.",
  "Fliederweg",
  "Florastr.",
  "Florianweg",
  "Flotowstr.",
  "Flurstr.",
  "Föhrenweg",
  "Fontanestr.",
  "Forellental",
  "Fortunastr.",
  "Franz-Esser-Str.",
  "Franz-Hitze-Str.",
  "Franz-Kail-Str.",
  "Franz-Marc-Str.",
  "Freiburger Str.",
  "Freiheitstr.",
  "Freiherr-vom-Stein-Str.",
  "Freudenthal",
  "Freudenthaler Weg",
  "Fridtjof-Nansen-Str.",
  "Friedenberger Str.",
  "Friedensstr.",
  "Friedhofstr.",
  "Friedlandstr.",
  "Friedlieb-Ferdinand-Runge-Str.",
  "Friedrich-Bayer-Str.",
  "Friedrich-Bergius-Platz",
  "Friedrich-Ebert-Platz",
  "Friedrich-Ebert-Str.",
  "Friedrich-Engels-Str.",
  "Friedrich-List-Str.",
  "Friedrich-Naumann-Str.",
  "Friedrich-Sertürner-Str.",
  "Friedrichstr.",
  "Friedrich-Weskott-Str.",
  "Friesenweg",
  "Frischenberg",
  "Fritz-Erler-Str.",
  "Fritz-Henseler-Str.",
  "Fröbelstr.",
  "Fürstenbergplatz",
  "Fürstenbergstr.",
  "Gabriele-Münter-Str.",
  "Gartenstr.",
  "Gebhardstr.",
  "Geibelstr.",
  "Gellertstr.",
  "Georg-von-Vollmar-Str.",
  "Gerhard-Domagk-Str.",
  "Gerhart-Hauptmann-Str.",
  "Gerichtsstr.",
  "Geschwister-Scholl-Str.",
  "Gezelinallee",
  "Gierener Weg",
  "Ginsterweg",
  "Gisbert-Cremer-Str.",
  "Glücksburger Str.",
  "Gluckstr.",
  "Gneisenaustr.",
  "Goetheplatz",
  "Goethestr.",
  "Golo-Mann-Str.",
  "Görlitzer Str.",
  "Görresstr.",
  "Graebestr.",
  "Graf-Galen-Platz",
  "Gregor-Mendel-Str.",
  "Greifswalder Str.",
  "Grillenweg",
  "Gronenborner Weg",
  "Große Kirchstr.",
  "Grunder Wiesen",
  "Grundermühle",
  "Grundermühlenhof",
  "Grundermühlenweg",
  "Grüner Weg",
  "Grunewaldstr.",
  "Grünstr.",
  "Günther-Weisenborn-Str.",
  "Gustav-Freytag-Str.",
  "Gustav-Heinemann-Str.",
  "Gustav-Radbruch-Str.",
  "Gut Reuschenberg",
  "Gutenbergstr.",
  "Haberstr.",
  "Habichtgasse",
  "Hafenstr.",
  "Hagenauer Str.",
  "Hahnenblecher",
  "Halenseestr.",
  "Halfenleimbach",
  "Hallesche Str.",
  "Halligstr.",
  "Hamberger Str.",
  "Hammerweg",
  "Händelstr.",
  "Hannah-Höch-Str.",
  "Hans-Arp-Str.",
  "Hans-Gerhard-Str.",
  "Hans-Sachs-Str.",
  "Hans-Schlehahn-Str.",
  "Hans-von-Dohnanyi-Str.",
  "Hardenbergstr.",
  "Haselweg",
  "Hauptstr.",
  "Haus-Vorster-Str.",
  "Hauweg",
  "Havelstr.",
  "Havensteinstr.",
  "Haydnstr.",
  "Hebbelstr.",
  "Heckenweg",
  "Heerweg",
  "Hegelstr.",
  "Heidberg",
  "Heidehöhe",
  "Heidestr.",
  "Heimstättenweg",
  "Heinrich-Böll-Str.",
  "Heinrich-Brüning-Str.",
  "Heinrich-Claes-Str.",
  "Heinrich-Heine-Str.",
  "Heinrich-Hörlein-Str.",
  "Heinrich-Lübke-Str.",
  "Heinrich-Lützenkirchen-Weg",
  "Heinrichstr.",
  "Heinrich-Strerath-Str.",
  "Heinrich-von-Kleist-Str.",
  "Heinrich-von-Stephan-Str.",
  "Heisterbachstr.",
  "Helenenstr.",
  "Helmestr.",
  "Hemmelrather Weg",
  "Henry-T.-v.-Böttinger-Str.",
  "Herderstr.",
  "Heribertstr.",
  "Hermann-Ehlers-Str.",
  "Hermann-Hesse-Str.",
  "Hermann-König-Str.",
  "Hermann-Löns-Str.",
  "Hermann-Milde-Str.",
  "Hermann-Nörrenberg-Str.",
  "Hermann-von-Helmholtz-Str.",
  "Hermann-Waibel-Str.",
  "Herzogstr.",
  "Heymannstr.",
  "Hindenburgstr.",
  "Hirzenberg",
  "Hitdorfer Kirchweg",
  "Hitdorfer Str.",
  "Höfer Mühle",
  "Höfer Weg",
  "Hohe Str.",
  "Höhenstr.",
  "Höltgestal",
  "Holunderweg",
  "Holzer Weg",
  "Holzer Wiesen",
  "Hornpottweg",
  "Hubertusweg",
  "Hufelandstr.",
  "Hufer Weg",
  "Humboldtstr.",
  "Hummelsheim",
  "Hummelweg",
  "Humperdinckstr.",
  "Hüscheider Gärten",
  "Hüscheider Str.",
  "Hütte",
  "Ilmstr.",
  "Im Bergischen Heim",
  "Im Bruch",
  "Im Buchenhain",
  "Im Bühl",
  "Im Burgfeld",
  "Im Dorf",
  "Im Eisholz",
  "Im Friedenstal",
  "Im Frohental",
  "Im Grunde",
  "Im Hederichsfeld",
  "Im Jücherfeld",
  "Im Kalkfeld",
  "Im Kirberg",
  "Im Kirchfeld",
  "Im Kreuzbruch",
  "Im Mühlenfeld",
  "Im Nesselrader Kamp",
  "Im Oberdorf",
  "Im Oberfeld",
  "Im Rosengarten",
  "Im Rottland",
  "Im Scheffengarten",
  "Im Staderfeld",
  "Im Steinfeld",
  "Im Weidenblech",
  "Im Winkel",
  "Im Ziegelfeld",
  "Imbach",
  "Imbacher Weg",
  "Immenweg",
  "In den Blechenhöfen",
  "In den Dehlen",
  "In der Birkenau",
  "In der Dasladen",
  "In der Felderhütten",
  "In der Hartmannswiese",
  "In der Höhle",
  "In der Schaafsdellen",
  "In der Wasserkuhl",
  "In der Wüste",
  "In Holzhausen",
  "Insterstr.",
  "Jacob-Fröhlen-Str.",
  "Jägerstr.",
  "Jahnstr.",
  "Jakob-Eulenberg-Weg",
  "Jakobistr.",
  "Jakob-Kaiser-Str.",
  "Jenaer Str.",
  "Johannes-Baptist-Str.",
  "Johannes-Dott-Str.",
  "Johannes-Popitz-Str.",
  "Johannes-Wislicenus-Str.",
  "Johannisburger Str.",
  "Johann-Janssen-Str.",
  "Johann-Wirtz-Weg",
  "Josefstr.",
  "Jüch",
  "Julius-Doms-Str.",
  "Julius-Leber-Str.",
  "Kaiserplatz",
  "Kaiserstr.",
  "Kaiser-Wilhelm-Allee",
  "Kalkstr.",
  "Kämpchenstr.",
  "Kämpenwiese",
  "Kämper Weg",
  "Kamptalweg",
  "Kanalstr.",
  "Kandinskystr.",
  "Kantstr.",
  "Kapellenstr.",
  "Karl-Arnold-Str.",
  "Karl-Bosch-Str.",
  "Karl-Bückart-Str.",
  "Karl-Carstens-Ring",
  "Karl-Friedrich-Goerdeler-Str.",
  "Karl-Jaspers-Str.",
  "Karl-König-Str.",
  "Karl-Krekeler-Str.",
  "Karl-Marx-Str.",
  "Karlstr.",
  "Karl-Ulitzka-Str.",
  "Karl-Wichmann-Str.",
  "Karl-Wingchen-Str.",
  "Käsenbrod",
  "Käthe-Kollwitz-Str.",
  "Katzbachstr.",
  "Kerschensteinerstr.",
  "Kiefernweg",
  "Kieler Str.",
  "Kieselstr.",
  "Kiesweg",
  "Kinderhausen",
  "Kleiberweg",
  "Kleine Kirchstr.",
  "Kleingansweg",
  "Kleinheider Weg",
  "Klief",
  "Kneippstr.",
  "Knochenbergsweg",
  "Kochergarten",
  "Kocherstr.",
  "Kockelsberg",
  "Kolberger Str.",
  "Kolmarer Str.",
  "Kölner Gasse",
  "Kölner Str.",
  "Kolpingstr.",
  "Königsberger Platz",
  "Konrad-Adenauer-Platz",
  "Köpenicker Str.",
  "Kopernikusstr.",
  "Körnerstr.",
  "Köschenberg",
  "Köttershof",
  "Kreuzbroicher Str.",
  "Kreuzkamp",
  "Krummer Weg",
  "Kruppstr.",
  "Kuhlmannweg",
  "Kump",
  "Kumper Weg",
  "Kunstfeldstr.",
  "Küppersteger Str.",
  "Kursiefen",
  "Kursiefer Weg",
  "Kurtekottenweg",
  "Kurt-Schumacher-Ring",
  "Kyllstr.",
  "Langenfelder Str.",
  "Längsleimbach",
  "Lärchenweg",
  "Legienstr.",
  "Lehner Mühle",
  "Leichlinger Str.",
  "Leimbacher Hof",
  "Leinestr.",
  "Leineweberstr.",
  "Leipziger Str.",
  "Lerchengasse",
  "Lessingstr.",
  "Libellenweg",
  "Lichstr.",
  "Liebigstr.",
  "Lindenstr.",
  "Lingenfeld",
  "Linienstr.",
  "Lippe",
  "Löchergraben",
  "Löfflerstr.",
  "Loheweg",
  "Lohrbergstr.",
  "Lohrstr.",
  "Löhstr.",
  "Lortzingstr.",
  "Lötzener Str.",
  "Löwenburgstr.",
  "Lucasstr.",
  "Ludwig-Erhard-Platz",
  "Ludwig-Girtler-Str.",
  "Ludwig-Knorr-Str.",
  "Luisenstr.",
  "Lupinenweg",
  "Lurchenweg",
  "Lützenkirchener Str.",
  "Lycker Str.",
  "Maashofstr.",
  "Manforter Str.",
  "Marc-Chagall-Str.",
  "Maria-Dresen-Str.",
  "Maria-Terwiel-Str.",
  "Marie-Curie-Str.",
  "Marienburger Str.",
  "Mariendorfer Str.",
  "Marienwerderstr.",
  "Marie-Schlei-Str.",
  "Marktplatz",
  "Markusweg",
  "Martin-Buber-Str.",
  "Martin-Heidegger-Str.",
  "Martin-Luther-Str.",
  "Masurenstr.",
  "Mathildenweg",
  "Maurinusstr.",
  "Mauspfad",
  "Max-Beckmann-Str.",
  "Max-Delbrück-Str.",
  "Max-Ernst-Str.",
  "Max-Holthausen-Platz",
  "Max-Horkheimer-Str.",
  "Max-Liebermann-Str.",
  "Max-Pechstein-Str.",
  "Max-Planck-Str.",
  "Max-Scheler-Str.",
  "Max-Schönenberg-Str.",
  "Maybachstr.",
  "Meckhofer Feld",
  "Meisenweg",
  "Memelstr.",
  "Menchendahler Str.",
  "Mendelssohnstr.",
  "Merziger Str.",
  "Mettlacher Str.",
  "Metzer Str.",
  "Michaelsweg",
  "Miselohestr.",
  "Mittelstr.",
  "Mohlenstr.",
  "Moltkestr.",
  "Monheimer Str.",
  "Montanusstr.",
  "Montessoriweg",
  "Moosweg",
  "Morsbroicher Str.",
  "Moselstr.",
  "Moskauer Str.",
  "Mozartstr.",
  "Mühlenweg",
  "Muhrgasse",
  "Muldestr.",
  "Mülhausener Str.",
  "Mülheimer Str.",
  "Münsters Gäßchen",
  "Münzstr.",
  "Müritzstr.",
  "Myliusstr.",
  "Nachtigallenweg",
  "Nauener Str.",
  "Neißestr.",
  "Nelly-Sachs-Str.",
  "Netzestr.",
  "Neuendriesch",
  "Neuenhausgasse",
  "Neuenkamp",
  "Neujudenhof",
  "Neukronenberger Str.",
  "Neustadtstr.",
  "Nicolai-Hartmann-Str.",
  "Niederblecher",
  "Niederfeldstr.",
  "Nietzschestr.",
  "Nikolaus-Groß-Str.",
  "Nobelstr.",
  "Norderneystr.",
  "Nordstr.",
  "Ober dem Hof",
  "Obere Lindenstr.",
  "Obere Str.",
  "Oberölbach",
  "Odenthaler Str.",
  "Oderstr.",
  "Okerstr.",
  "Olof-Palme-Str.",
  "Ophovener Str.",
  "Opladener Platz",
  "Opladener Str.",
  "Ortelsburger Str.",
  "Oskar-Moll-Str.",
  "Oskar-Schlemmer-Str.",
  "Oststr.",
  "Oswald-Spengler-Str.",
  "Otto-Dix-Str.",
  "Otto-Grimm-Str.",
  "Otto-Hahn-Str.",
  "Otto-Müller-Str.",
  "Otto-Stange-Str.",
  "Ottostr.",
  "Otto-Varnhagen-Str.",
  "Otto-Wels-Str.",
  "Ottweilerstr.",
  "Oulustr.",
  "Overfeldweg",
  "Pappelweg",
  "Paracelsusstr.",
  "Parkstr.",
  "Pastor-Louis-Str.",
  "Pastor-Scheibler-Str.",
  "Pastorskamp",
  "Paul-Klee-Str.",
  "Paul-Löbe-Str.",
  "Paulstr.",
  "Peenestr.",
  "Pescher Busch",
  "Peschstr.",
  "Pestalozzistr.",
  "Peter-Grieß-Str.",
  "Peter-Joseph-Lenné-Str.",
  "Peter-Neuenheuser-Str.",
  "Petersbergstr.",
  "Peterstr.",
  "Pfarrer-Jekel-Str.",
  "Pfarrer-Klein-Str.",
  "Pfarrer-Röhr-Str.",
  "Pfeilshofstr.",
  "Philipp-Ott-Str.",
  "Piet-Mondrian-Str.",
  "Platanenweg",
  "Pommernstr.",
  "Porschestr.",
  "Poststr.",
  "Potsdamer Str.",
  "Pregelstr.",
  "Prießnitzstr.",
  "Pützdelle",
  "Quarzstr.",
  "Quettinger Str.",
  "Rat-Deycks-Str.",
  "Rathenaustr.",
  "Ratherkämp",
  "Ratiborer Str.",
  "Raushofstr.",
  "Regensburger Str.",
  "Reinickendorfer Str.",
  "Renkgasse",
  "Rennbaumplatz",
  "Rennbaumstr.",
  "Reuschenberger Str.",
  "Reusrather Str.",
  "Reuterstr.",
  "Rheinallee",
  "Rheindorfer Str.",
  "Rheinstr.",
  "Rhein-Wupper-Platz",
  "Richard-Wagner-Str.",
  "Rilkestr.",
  "Ringstr.",
  "Robert-Blum-Str.",
  "Robert-Koch-Str.",
  "Robert-Medenwald-Str.",
  "Rolandstr.",
  "Romberg",
  "Röntgenstr.",
  "Roonstr.",
  "Ropenstall",
  "Ropenstaller Weg",
  "Rosenthal",
  "Rostocker Str.",
  "Rotdornweg",
  "Röttgerweg",
  "Rückertstr.",
  "Rudolf-Breitscheid-Str.",
  "Rudolf-Mann-Platz",
  "Rudolf-Stracke-Str.",
  "Ruhlachplatz",
  "Ruhlachstr.",
  "Rüttersweg",
  "Saalestr.",
  "Saarbrücker Str.",
  "Saarlauterner Str.",
  "Saarstr.",
  "Salamanderweg",
  "Samlandstr.",
  "Sanddornstr.",
  "Sandstr.",
  "Sauerbruchstr.",
  "Schäfershütte",
  "Scharnhorststr.",
  "Scheffershof",
  "Scheidemannstr.",
  "Schellingstr.",
  "Schenkendorfstr.",
  "Schießbergstr.",
  "Schillerstr.",
  "Schlangenhecke",
  "Schlebuscher Heide",
  "Schlebuscher Str.",
  "Schlebuschrath",
  "Schlehdornstr.",
  "Schleiermacherstr.",
  "Schloßstr.",
  "Schmalenbruch",
  "Schnepfenflucht",
  "Schöffenweg",
  "Schöllerstr.",
  "Schöne Aussicht",
  "Schöneberger Str.",
  "Schopenhauerstr.",
  "Schubertplatz",
  "Schubertstr.",
  "Schulberg",
  "Schulstr.",
  "Schumannstr.",
  "Schwalbenweg",
  "Schwarzastr.",
  "Sebastianusweg",
  "Semmelweisstr.",
  "Siebelplatz",
  "Siemensstr.",
  "Solinger Str.",
  "Sonderburger Str.",
  "Spandauer Str.",
  "Speestr.",
  "Sperberweg",
  "Sperlingsweg",
  "Spitzwegstr.",
  "Sporrenberger Mühle",
  "Spreestr.",
  "St. Ingberter Str.",
  "Starenweg",
  "Stauffenbergstr.",
  "Stefan-Zweig-Str.",
  "Stegerwaldstr.",
  "Steglitzer Str.",
  "Steinbücheler Feld",
  "Steinbücheler Str.",
  "Steinstr.",
  "Steinweg",
  "Stephan-Lochner-Str.",
  "Stephanusstr.",
  "Stettiner Str.",
  "Stixchesstr.",
  "Stöckenstr.",
  "Stralsunder Str.",
  "Straßburger Str.",
  "Stresemannplatz",
  "Strombergstr.",
  "Stromstr.",
  "Stüttekofener Str.",
  "Sudestr.",
  "Sürderstr.",
  "Syltstr.",
  "Talstr.",
  "Tannenbergstr.",
  "Tannenweg",
  "Taubenweg",
  "Teitscheider Weg",
  "Telegrafenstr.",
  "Teltower Str.",
  "Tempelhofer Str.",
  "Theodor-Adorno-Str.",
  "Theodor-Fliedner-Str.",
  "Theodor-Gierath-Str.",
  "Theodor-Haubach-Str.",
  "Theodor-Heuss-Ring",
  "Theodor-Storm-Str.",
  "Theodorstr.",
  "Thomas-Dehler-Str.",
  "Thomas-Morus-Str.",
  "Thomas-von-Aquin-Str.",
  "Tönges Feld",
  "Torstr.",
  "Treptower Str.",
  "Treuburger Str.",
  "Uhlandstr.",
  "Ulmenweg",
  "Ulmer Str.",
  "Ulrichstr.",
  "Ulrich-von-Hassell-Str.",
  "Umlag",
  "Unstrutstr.",
  "Unter dem Schildchen",
  "Unterölbach",
  "Unterstr.",
  "Uppersberg",
  "Van\\'t-Hoff-Str.",
  "Veit-Stoß-Str.",
  "Vereinsstr.",
  "Viktor-Meyer-Str.",
  "Vincent-van-Gogh-Str.",
  "Virchowstr.",
  "Voigtslach",
  "Volhardstr.",
  "Völklinger Str.",
  "Von-Brentano-Str.",
  "Von-Diergardt-Str.",
  "Von-Eichendorff-Str.",
  "Von-Ketteler-Str.",
  "Von-Knoeringen-Str.",
  "Von-Pettenkofer-Str.",
  "Von-Siebold-Str.",
  "Wacholderweg",
  "Waldstr.",
  "Walter-Flex-Str.",
  "Walter-Hempel-Str.",
  "Walter-Hochapfel-Str.",
  "Walter-Nernst-Str.",
  "Wannseestr.",
  "Warnowstr.",
  "Warthestr.",
  "Weddigenstr.",
  "Weichselstr.",
  "Weidenstr.",
  "Weidfeldstr.",
  "Weiherfeld",
  "Weiherstr.",
  "Weinhäuser Str.",
  "Weißdornweg",
  "Weißenseestr.",
  "Weizkamp",
  "Werftstr.",
  "Werkstättenstr.",
  "Werner-Heisenberg-Str.",
  "Werrastr.",
  "Weyerweg",
  "Widdauener Str.",
  "Wiebertshof",
  "Wiehbachtal",
  "Wiembachallee",
  "Wiesdorfer Platz",
  "Wiesenstr.",
  "Wilhelm-Busch-Str.",
  "Wilhelm-Hastrich-Str.",
  "Wilhelm-Leuschner-Str.",
  "Wilhelm-Liebknecht-Str.",
  "Wilhelmsgasse",
  "Wilhelmstr.",
  "Willi-Baumeister-Str.",
  "Willy-Brandt-Ring",
  "Winand-Rossi-Str.",
  "Windthorststr.",
  "Winkelweg",
  "Winterberg",
  "Wittenbergstr.",
  "Wolf-Vostell-Str.",
  "Wolkenburgstr.",
  "Wupperstr.",
  "Wuppertalstr.",
  "Wüstenhof",
  "Yitzhak-Rabin-Str.",
  "Zauberkuhle",
  "Zedernweg",
  "Zehlendorfer Str.",
  "Zehntenweg",
  "Zeisigweg",
  "Zeppelinstr.",
  "Zschopaustr.",
  "Zum Claashäuschen",
  "Zündhütchenweg",
  "Zur Alten Brauerei",
  "Zur alten Fabrik"
];

},{}],66:[function(require,module,exports){
module["exports"] = [
  "+49-1##-#######",
  "+49-1###-########"
];

},{}],67:[function(require,module,exports){
var cell_phone = {};
module['exports'] = cell_phone;
cell_phone.formats = require("./formats");

},{"./formats":66}],68:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.legal_form = require("./legal_form");
company.name = require("./name");

},{"./legal_form":69,"./name":70,"./suffix":71}],69:[function(require,module,exports){
module["exports"] = [
  "GmbH",
  "AG",
  "Gruppe",
  "KG",
  "GmbH & Co. KG",
  "UG",
  "OHG"
];

},{}],70:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name}-#{Name.last_name}",
  "#{Name.last_name}, #{Name.last_name} und #{Name.last_name}"
];

},{}],71:[function(require,module,exports){
arguments[4][69][0].apply(exports,arguments)
},{"dup":69}],72:[function(require,module,exports){
var de = {};
module['exports'] = de;
de.title = "German";
de.address = require("./address");
de.company = require("./company");
de.internet = require("./internet");
de.lorem = require("./lorem");
de.name = require("./name");
de.phone_number = require("./phone_number");
de.cell_phone = require("./cell_phone");
},{"./address":58,"./cell_phone":67,"./company":68,"./internet":75,"./lorem":76,"./name":79,"./phone_number":85}],73:[function(require,module,exports){
module["exports"] = [
  "com",
  "info",
  "name",
  "net",
  "org",
  "de",
  "ch"
];

},{}],74:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.com",
  "hotmail.com"
];

},{}],75:[function(require,module,exports){
var internet = {};
module['exports'] = internet;
internet.free_email = require("./free_email");
internet.domain_suffix = require("./domain_suffix");

},{"./domain_suffix":73,"./free_email":74}],76:[function(require,module,exports){
var lorem = {};
module['exports'] = lorem;
lorem.words = require("./words");

},{"./words":77}],77:[function(require,module,exports){
module["exports"] = [
  "alias",
  "consequatur",
  "aut",
  "perferendis",
  "sit",
  "voluptatem",
  "accusantium",
  "doloremque",
  "aperiam",
  "eaque",
  "ipsa",
  "quae",
  "ab",
  "illo",
  "inventore",
  "veritatis",
  "et",
  "quasi",
  "architecto",
  "beatae",
  "vitae",
  "dicta",
  "sunt",
  "explicabo",
  "aspernatur",
  "aut",
  "odit",
  "aut",
  "fugit",
  "sed",
  "quia",
  "consequuntur",
  "magni",
  "dolores",
  "eos",
  "qui",
  "ratione",
  "voluptatem",
  "sequi",
  "nesciunt",
  "neque",
  "dolorem",
  "ipsum",
  "quia",
  "dolor",
  "sit",
  "amet",
  "consectetur",
  "adipisci",
  "velit",
  "sed",
  "quia",
  "non",
  "numquam",
  "eius",
  "modi",
  "tempora",
  "incidunt",
  "ut",
  "labore",
  "et",
  "dolore",
  "magnam",
  "aliquam",
  "quaerat",
  "voluptatem",
  "ut",
  "enim",
  "ad",
  "minima",
  "veniam",
  "quis",
  "nostrum",
  "exercitationem",
  "ullam",
  "corporis",
  "nemo",
  "enim",
  "ipsam",
  "voluptatem",
  "quia",
  "voluptas",
  "sit",
  "suscipit",
  "laboriosam",
  "nisi",
  "ut",
  "aliquid",
  "ex",
  "ea",
  "commodi",
  "consequatur",
  "quis",
  "autem",
  "vel",
  "eum",
  "iure",
  "reprehenderit",
  "qui",
  "in",
  "ea",
  "voluptate",
  "velit",
  "esse",
  "quam",
  "nihil",
  "molestiae",
  "et",
  "iusto",
  "odio",
  "dignissimos",
  "ducimus",
  "qui",
  "blanditiis",
  "praesentium",
  "laudantium",
  "totam",
  "rem",
  "voluptatum",
  "deleniti",
  "atque",
  "corrupti",
  "quos",
  "dolores",
  "et",
  "quas",
  "molestias",
  "excepturi",
  "sint",
  "occaecati",
  "cupiditate",
  "non",
  "provident",
  "sed",
  "ut",
  "perspiciatis",
  "unde",
  "omnis",
  "iste",
  "natus",
  "error",
  "similique",
  "sunt",
  "in",
  "culpa",
  "qui",
  "officia",
  "deserunt",
  "mollitia",
  "animi",
  "id",
  "est",
  "laborum",
  "et",
  "dolorum",
  "fuga",
  "et",
  "harum",
  "quidem",
  "rerum",
  "facilis",
  "est",
  "et",
  "expedita",
  "distinctio",
  "nam",
  "libero",
  "tempore",
  "cum",
  "soluta",
  "nobis",
  "est",
  "eligendi",
  "optio",
  "cumque",
  "nihil",
  "impedit",
  "quo",
  "porro",
  "quisquam",
  "est",
  "qui",
  "minus",
  "id",
  "quod",
  "maxime",
  "placeat",
  "facere",
  "possimus",
  "omnis",
  "voluptas",
  "assumenda",
  "est",
  "omnis",
  "dolor",
  "repellendus",
  "temporibus",
  "autem",
  "quibusdam",
  "et",
  "aut",
  "consequatur",
  "vel",
  "illum",
  "qui",
  "dolorem",
  "eum",
  "fugiat",
  "quo",
  "voluptas",
  "nulla",
  "pariatur",
  "at",
  "vero",
  "eos",
  "et",
  "accusamus",
  "officiis",
  "debitis",
  "aut",
  "rerum",
  "necessitatibus",
  "saepe",
  "eveniet",
  "ut",
  "et",
  "voluptates",
  "repudiandae",
  "sint",
  "et",
  "molestiae",
  "non",
  "recusandae",
  "itaque",
  "earum",
  "rerum",
  "hic",
  "tenetur",
  "a",
  "sapiente",
  "delectus",
  "ut",
  "aut",
  "reiciendis",
  "voluptatibus",
  "maiores",
  "doloribus",
  "asperiores",
  "repellat"
];

},{}],78:[function(require,module,exports){
module["exports"] = [
  "Aaron",
  "Abdul",
  "Abdullah",
  "Adam",
  "Adrian",
  "Adriano",
  "Ahmad",
  "Ahmed",
  "Ahmet",
  "Alan",
  "Albert",
  "Alessandro",
  "Alessio",
  "Alex",
  "Alexander",
  "Alfred",
  "Ali",
  "Amar",
  "Amir",
  "Amon",
  "Andre",
  "Andreas",
  "Andrew",
  "Angelo",
  "Ansgar",
  "Anthony",
  "Anton",
  "Antonio",
  "Arda",
  "Arian",
  "Armin",
  "Arne",
  "Arno",
  "Arthur",
  "Artur",
  "Arved",
  "Arvid",
  "Ayman",
  "Baran",
  "Baris",
  "Bastian",
  "Batuhan",
  "Bela",
  "Ben",
  "Benedikt",
  "Benjamin",
  "Bennet",
  "Bennett",
  "Benno",
  "Bent",
  "Berat",
  "Berkay",
  "Bernd",
  "Bilal",
  "Bjarne",
  "Björn",
  "Bo",
  "Boris",
  "Brandon",
  "Brian",
  "Bruno",
  "Bryan",
  "Burak",
  "Calvin",
  "Can",
  "Carl",
  "Carlo",
  "Carlos",
  "Caspar",
  "Cedric",
  "Cedrik",
  "Cem",
  "Charlie",
  "Chris",
  "Christian",
  "Christiano",
  "Christoph",
  "Christopher",
  "Claas",
  "Clemens",
  "Colin",
  "Collin",
  "Conner",
  "Connor",
  "Constantin",
  "Corvin",
  "Curt",
  "Damian",
  "Damien",
  "Daniel",
  "Danilo",
  "Danny",
  "Darian",
  "Dario",
  "Darius",
  "Darren",
  "David",
  "Davide",
  "Davin",
  "Dean",
  "Deniz",
  "Dennis",
  "Denny",
  "Devin",
  "Diego",
  "Dion",
  "Domenic",
  "Domenik",
  "Dominic",
  "Dominik",
  "Dorian",
  "Dustin",
  "Dylan",
  "Ecrin",
  "Eddi",
  "Eddy",
  "Edgar",
  "Edwin",
  "Efe",
  "Ege",
  "Elia",
  "Eliah",
  "Elias",
  "Elijah",
  "Emanuel",
  "Emil",
  "Emilian",
  "Emilio",
  "Emir",
  "Emirhan",
  "Emre",
  "Enes",
  "Enno",
  "Enrico",
  "Eren",
  "Eric",
  "Erik",
  "Etienne",
  "Fabian",
  "Fabien",
  "Fabio",
  "Fabrice",
  "Falk",
  "Felix",
  "Ferdinand",
  "Fiete",
  "Filip",
  "Finlay",
  "Finley",
  "Finn",
  "Finnley",
  "Florian",
  "Francesco",
  "Franz",
  "Frederic",
  "Frederick",
  "Frederik",
  "Friedrich",
  "Fritz",
  "Furkan",
  "Fynn",
  "Gabriel",
  "Georg",
  "Gerrit",
  "Gian",
  "Gianluca",
  "Gino",
  "Giuliano",
  "Giuseppe",
  "Gregor",
  "Gustav",
  "Hagen",
  "Hamza",
  "Hannes",
  "Hanno",
  "Hans",
  "Hasan",
  "Hassan",
  "Hauke",
  "Hendrik",
  "Hennes",
  "Henning",
  "Henri",
  "Henrick",
  "Henrik",
  "Henry",
  "Hugo",
  "Hussein",
  "Ian",
  "Ibrahim",
  "Ilias",
  "Ilja",
  "Ilyas",
  "Immanuel",
  "Ismael",
  "Ismail",
  "Ivan",
  "Iven",
  "Jack",
  "Jacob",
  "Jaden",
  "Jakob",
  "Jamal",
  "James",
  "Jamie",
  "Jan",
  "Janek",
  "Janis",
  "Janne",
  "Jannek",
  "Jannes",
  "Jannik",
  "Jannis",
  "Jano",
  "Janosch",
  "Jared",
  "Jari",
  "Jarne",
  "Jarno",
  "Jaron",
  "Jason",
  "Jasper",
  "Jay",
  "Jayden",
  "Jayson",
  "Jean",
  "Jens",
  "Jeremias",
  "Jeremie",
  "Jeremy",
  "Jermaine",
  "Jerome",
  "Jesper",
  "Jesse",
  "Jim",
  "Jimmy",
  "Joe",
  "Joel",
  "Joey",
  "Johann",
  "Johannes",
  "John",
  "Johnny",
  "Jon",
  "Jona",
  "Jonah",
  "Jonas",
  "Jonathan",
  "Jonte",
  "Joost",
  "Jordan",
  "Joris",
  "Joscha",
  "Joschua",
  "Josef",
  "Joseph",
  "Josh",
  "Joshua",
  "Josua",
  "Juan",
  "Julian",
  "Julien",
  "Julius",
  "Juri",
  "Justin",
  "Justus",
  "Kaan",
  "Kai",
  "Kalle",
  "Karim",
  "Karl",
  "Karlo",
  "Kay",
  "Keanu",
  "Kenan",
  "Kenny",
  "Keno",
  "Kerem",
  "Kerim",
  "Kevin",
  "Kian",
  "Kilian",
  "Kim",
  "Kimi",
  "Kjell",
  "Klaas",
  "Klemens",
  "Konrad",
  "Konstantin",
  "Koray",
  "Korbinian",
  "Kurt",
  "Lars",
  "Lasse",
  "Laurence",
  "Laurens",
  "Laurenz",
  "Laurin",
  "Lean",
  "Leander",
  "Leandro",
  "Leif",
  "Len",
  "Lenn",
  "Lennard",
  "Lennart",
  "Lennert",
  "Lennie",
  "Lennox",
  "Lenny",
  "Leo",
  "Leon",
  "Leonard",
  "Leonardo",
  "Leonhard",
  "Leonidas",
  "Leopold",
  "Leroy",
  "Levent",
  "Levi",
  "Levin",
  "Lewin",
  "Lewis",
  "Liam",
  "Lian",
  "Lias",
  "Lino",
  "Linus",
  "Lio",
  "Lion",
  "Lionel",
  "Logan",
  "Lorenz",
  "Lorenzo",
  "Loris",
  "Louis",
  "Luan",
  "Luc",
  "Luca",
  "Lucas",
  "Lucian",
  "Lucien",
  "Ludwig",
  "Luis",
  "Luiz",
  "Luk",
  "Luka",
  "Lukas",
  "Luke",
  "Lutz",
  "Maddox",
  "Mads",
  "Magnus",
  "Maik",
  "Maksim",
  "Malik",
  "Malte",
  "Manuel",
  "Marc",
  "Marcel",
  "Marco",
  "Marcus",
  "Marek",
  "Marian",
  "Mario",
  "Marius",
  "Mark",
  "Marko",
  "Markus",
  "Marlo",
  "Marlon",
  "Marten",
  "Martin",
  "Marvin",
  "Marwin",
  "Mateo",
  "Mathis",
  "Matis",
  "Mats",
  "Matteo",
  "Mattes",
  "Matthias",
  "Matthis",
  "Matti",
  "Mattis",
  "Maurice",
  "Max",
  "Maxim",
  "Maximilian",
  "Mehmet",
  "Meik",
  "Melvin",
  "Merlin",
  "Mert",
  "Michael",
  "Michel",
  "Mick",
  "Miguel",
  "Mika",
  "Mikail",
  "Mike",
  "Milan",
  "Milo",
  "Mio",
  "Mirac",
  "Mirco",
  "Mirko",
  "Mohamed",
  "Mohammad",
  "Mohammed",
  "Moritz",
  "Morten",
  "Muhammed",
  "Murat",
  "Mustafa",
  "Nathan",
  "Nathanael",
  "Nelson",
  "Neo",
  "Nevio",
  "Nick",
  "Niclas",
  "Nico",
  "Nicolai",
  "Nicolas",
  "Niels",
  "Nikita",
  "Niklas",
  "Niko",
  "Nikolai",
  "Nikolas",
  "Nils",
  "Nino",
  "Noah",
  "Noel",
  "Norman",
  "Odin",
  "Oke",
  "Ole",
  "Oliver",
  "Omar",
  "Onur",
  "Oscar",
  "Oskar",
  "Pascal",
  "Patrice",
  "Patrick",
  "Paul",
  "Peer",
  "Pepe",
  "Peter",
  "Phil",
  "Philip",
  "Philipp",
  "Pierre",
  "Piet",
  "Pit",
  "Pius",
  "Quentin",
  "Quirin",
  "Rafael",
  "Raik",
  "Ramon",
  "Raphael",
  "Rasmus",
  "Raul",
  "Rayan",
  "René",
  "Ricardo",
  "Riccardo",
  "Richard",
  "Rick",
  "Rico",
  "Robert",
  "Robin",
  "Rocco",
  "Roman",
  "Romeo",
  "Ron",
  "Ruben",
  "Ryan",
  "Said",
  "Salih",
  "Sam",
  "Sami",
  "Sammy",
  "Samuel",
  "Sandro",
  "Santino",
  "Sascha",
  "Sean",
  "Sebastian",
  "Selim",
  "Semih",
  "Shawn",
  "Silas",
  "Simeon",
  "Simon",
  "Sinan",
  "Sky",
  "Stefan",
  "Steffen",
  "Stephan",
  "Steve",
  "Steven",
  "Sven",
  "Sönke",
  "Sören",
  "Taha",
  "Tamino",
  "Tammo",
  "Tarik",
  "Tayler",
  "Taylor",
  "Teo",
  "Theo",
  "Theodor",
  "Thies",
  "Thilo",
  "Thomas",
  "Thorben",
  "Thore",
  "Thorge",
  "Tiago",
  "Til",
  "Till",
  "Tillmann",
  "Tim",
  "Timm",
  "Timo",
  "Timon",
  "Timothy",
  "Tino",
  "Titus",
  "Tizian",
  "Tjark",
  "Tobias",
  "Tom",
  "Tommy",
  "Toni",
  "Tony",
  "Torben",
  "Tore",
  "Tristan",
  "Tyler",
  "Tyron",
  "Umut",
  "Valentin",
  "Valentino",
  "Veit",
  "Victor",
  "Viktor",
  "Vin",
  "Vincent",
  "Vito",
  "Vitus",
  "Wilhelm",
  "Willi",
  "William",
  "Willy",
  "Xaver",
  "Yannic",
  "Yannick",
  "Yannik",
  "Yannis",
  "Yasin",
  "Youssef",
  "Yunus",
  "Yusuf",
  "Yven",
  "Yves",
  "Ömer",
  "Aaliyah",
  "Abby",
  "Abigail",
  "Ada",
  "Adelina",
  "Adriana",
  "Aileen",
  "Aimee",
  "Alana",
  "Alea",
  "Alena",
  "Alessa",
  "Alessia",
  "Alexa",
  "Alexandra",
  "Alexia",
  "Alexis",
  "Aleyna",
  "Alia",
  "Alica",
  "Alice",
  "Alicia",
  "Alina",
  "Alisa",
  "Alisha",
  "Alissa",
  "Aliya",
  "Aliyah",
  "Allegra",
  "Alma",
  "Alyssa",
  "Amalia",
  "Amanda",
  "Amelia",
  "Amelie",
  "Amina",
  "Amira",
  "Amy",
  "Ana",
  "Anabel",
  "Anastasia",
  "Andrea",
  "Angela",
  "Angelina",
  "Angelique",
  "Anja",
  "Ann",
  "Anna",
  "Annabel",
  "Annabell",
  "Annabelle",
  "Annalena",
  "Anne",
  "Anneke",
  "Annelie",
  "Annemarie",
  "Anni",
  "Annie",
  "Annika",
  "Anny",
  "Anouk",
  "Antonia",
  "Arda",
  "Ariana",
  "Ariane",
  "Arwen",
  "Ashley",
  "Asya",
  "Aurelia",
  "Aurora",
  "Ava",
  "Ayleen",
  "Aylin",
  "Ayse",
  "Azra",
  "Betty",
  "Bianca",
  "Bianka",
  "Caitlin",
  "Cara",
  "Carina",
  "Carla",
  "Carlotta",
  "Carmen",
  "Carolin",
  "Carolina",
  "Caroline",
  "Cassandra",
  "Catharina",
  "Catrin",
  "Cecile",
  "Cecilia",
  "Celia",
  "Celina",
  "Celine",
  "Ceyda",
  "Ceylin",
  "Chantal",
  "Charleen",
  "Charlotta",
  "Charlotte",
  "Chayenne",
  "Cheyenne",
  "Chiara",
  "Christin",
  "Christina",
  "Cindy",
  "Claire",
  "Clara",
  "Clarissa",
  "Colleen",
  "Collien",
  "Cora",
  "Corinna",
  "Cosima",
  "Dana",
  "Daniela",
  "Daria",
  "Darleen",
  "Defne",
  "Delia",
  "Denise",
  "Diana",
  "Dilara",
  "Dina",
  "Dorothea",
  "Ecrin",
  "Eda",
  "Eileen",
  "Ela",
  "Elaine",
  "Elanur",
  "Elea",
  "Elena",
  "Eleni",
  "Eleonora",
  "Eliana",
  "Elif",
  "Elina",
  "Elisa",
  "Elisabeth",
  "Ella",
  "Ellen",
  "Elli",
  "Elly",
  "Elsa",
  "Emelie",
  "Emely",
  "Emilia",
  "Emilie",
  "Emily",
  "Emma",
  "Emmely",
  "Emmi",
  "Emmy",
  "Enie",
  "Enna",
  "Enya",
  "Esma",
  "Estelle",
  "Esther",
  "Eva",
  "Evelin",
  "Evelina",
  "Eveline",
  "Evelyn",
  "Fabienne",
  "Fatima",
  "Fatma",
  "Felicia",
  "Felicitas",
  "Felina",
  "Femke",
  "Fenja",
  "Fine",
  "Finia",
  "Finja",
  "Finnja",
  "Fiona",
  "Flora",
  "Florentine",
  "Francesca",
  "Franka",
  "Franziska",
  "Frederike",
  "Freya",
  "Frida",
  "Frieda",
  "Friederike",
  "Giada",
  "Gina",
  "Giulia",
  "Giuliana",
  "Greta",
  "Hailey",
  "Hana",
  "Hanna",
  "Hannah",
  "Heidi",
  "Helen",
  "Helena",
  "Helene",
  "Helin",
  "Henriette",
  "Henrike",
  "Hermine",
  "Ida",
  "Ilayda",
  "Imke",
  "Ina",
  "Ines",
  "Inga",
  "Inka",
  "Irem",
  "Isa",
  "Isabel",
  "Isabell",
  "Isabella",
  "Isabelle",
  "Ivonne",
  "Jacqueline",
  "Jamie",
  "Jamila",
  "Jana",
  "Jane",
  "Janin",
  "Janina",
  "Janine",
  "Janna",
  "Janne",
  "Jara",
  "Jasmin",
  "Jasmina",
  "Jasmine",
  "Jella",
  "Jenna",
  "Jennifer",
  "Jenny",
  "Jessica",
  "Jessy",
  "Jette",
  "Jil",
  "Jill",
  "Joana",
  "Joanna",
  "Joelina",
  "Joeline",
  "Joelle",
  "Johanna",
  "Joleen",
  "Jolie",
  "Jolien",
  "Jolin",
  "Jolina",
  "Joline",
  "Jona",
  "Jonah",
  "Jonna",
  "Josefin",
  "Josefine",
  "Josephin",
  "Josephine",
  "Josie",
  "Josy",
  "Joy",
  "Joyce",
  "Judith",
  "Judy",
  "Jule",
  "Julia",
  "Juliana",
  "Juliane",
  "Julie",
  "Julienne",
  "Julika",
  "Julina",
  "Juna",
  "Justine",
  "Kaja",
  "Karina",
  "Karla",
  "Karlotta",
  "Karolina",
  "Karoline",
  "Kassandra",
  "Katarina",
  "Katharina",
  "Kathrin",
  "Katja",
  "Katrin",
  "Kaya",
  "Kayra",
  "Kiana",
  "Kiara",
  "Kim",
  "Kimberley",
  "Kimberly",
  "Kira",
  "Klara",
  "Korinna",
  "Kristin",
  "Kyra",
  "Laila",
  "Lana",
  "Lara",
  "Larissa",
  "Laura",
  "Laureen",
  "Lavinia",
  "Lea",
  "Leah",
  "Leana",
  "Leandra",
  "Leann",
  "Lee",
  "Leila",
  "Lena",
  "Lene",
  "Leni",
  "Lenia",
  "Lenja",
  "Lenya",
  "Leona",
  "Leoni",
  "Leonie",
  "Leonora",
  "Leticia",
  "Letizia",
  "Levke",
  "Leyla",
  "Lia",
  "Liah",
  "Liana",
  "Lili",
  "Lilia",
  "Lilian",
  "Liliana",
  "Lilith",
  "Lilli",
  "Lillian",
  "Lilly",
  "Lily",
  "Lina",
  "Linda",
  "Lindsay",
  "Line",
  "Linn",
  "Linnea",
  "Lisa",
  "Lisann",
  "Lisanne",
  "Liv",
  "Livia",
  "Liz",
  "Lola",
  "Loreen",
  "Lorena",
  "Lotta",
  "Lotte",
  "Louisa",
  "Louise",
  "Luana",
  "Luca",
  "Lucia",
  "Lucie",
  "Lucienne",
  "Lucy",
  "Luisa",
  "Luise",
  "Luka",
  "Luna",
  "Luzie",
  "Lya",
  "Lydia",
  "Lyn",
  "Lynn",
  "Madeleine",
  "Madita",
  "Madleen",
  "Madlen",
  "Magdalena",
  "Maike",
  "Mailin",
  "Maira",
  "Maja",
  "Malena",
  "Malia",
  "Malin",
  "Malina",
  "Mandy",
  "Mara",
  "Marah",
  "Mareike",
  "Maren",
  "Maria",
  "Mariam",
  "Marie",
  "Marieke",
  "Mariella",
  "Marika",
  "Marina",
  "Marisa",
  "Marissa",
  "Marit",
  "Marla",
  "Marleen",
  "Marlen",
  "Marlena",
  "Marlene",
  "Marta",
  "Martha",
  "Mary",
  "Maryam",
  "Mathilda",
  "Mathilde",
  "Matilda",
  "Maxi",
  "Maxima",
  "Maxine",
  "Maya",
  "Mayra",
  "Medina",
  "Medine",
  "Meike",
  "Melanie",
  "Melek",
  "Melike",
  "Melina",
  "Melinda",
  "Melis",
  "Melisa",
  "Melissa",
  "Merle",
  "Merve",
  "Meryem",
  "Mette",
  "Mia",
  "Michaela",
  "Michelle",
  "Mieke",
  "Mila",
  "Milana",
  "Milena",
  "Milla",
  "Mina",
  "Mira",
  "Miray",
  "Miriam",
  "Mirja",
  "Mona",
  "Monique",
  "Nadine",
  "Nadja",
  "Naemi",
  "Nancy",
  "Naomi",
  "Natalia",
  "Natalie",
  "Nathalie",
  "Neele",
  "Nela",
  "Nele",
  "Nelli",
  "Nelly",
  "Nia",
  "Nicole",
  "Nika",
  "Nike",
  "Nikita",
  "Nila",
  "Nina",
  "Nisa",
  "Noemi",
  "Nora",
  "Olivia",
  "Patricia",
  "Patrizia",
  "Paula",
  "Paulina",
  "Pauline",
  "Penelope",
  "Philine",
  "Phoebe",
  "Pia",
  "Rahel",
  "Rania",
  "Rebecca",
  "Rebekka",
  "Riana",
  "Rieke",
  "Rike",
  "Romina",
  "Romy",
  "Ronja",
  "Rosa",
  "Rosalie",
  "Ruby",
  "Sabrina",
  "Sahra",
  "Sally",
  "Salome",
  "Samantha",
  "Samia",
  "Samira",
  "Sandra",
  "Sandy",
  "Sanja",
  "Saphira",
  "Sara",
  "Sarah",
  "Saskia",
  "Selin",
  "Selina",
  "Selma",
  "Sena",
  "Sidney",
  "Sienna",
  "Silja",
  "Sina",
  "Sinja",
  "Smilla",
  "Sofia",
  "Sofie",
  "Sonja",
  "Sophia",
  "Sophie",
  "Soraya",
  "Stefanie",
  "Stella",
  "Stephanie",
  "Stina",
  "Sude",
  "Summer",
  "Susanne",
  "Svea",
  "Svenja",
  "Sydney",
  "Tabea",
  "Talea",
  "Talia",
  "Tamara",
  "Tamia",
  "Tamina",
  "Tanja",
  "Tara",
  "Tarja",
  "Teresa",
  "Tessa",
  "Thalea",
  "Thalia",
  "Thea",
  "Theresa",
  "Tia",
  "Tina",
  "Tomke",
  "Tuana",
  "Valentina",
  "Valeria",
  "Valerie",
  "Vanessa",
  "Vera",
  "Veronika",
  "Victoria",
  "Viktoria",
  "Viola",
  "Vivian",
  "Vivien",
  "Vivienne",
  "Wibke",
  "Wiebke",
  "Xenia",
  "Yara",
  "Yaren",
  "Yasmin",
  "Ylvi",
  "Ylvie",
  "Yvonne",
  "Zara",
  "Zehra",
  "Zeynep",
  "Zoe",
  "Zoey",
  "Zoé"
];

},{}],79:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.nobility_title_prefix = require("./nobility_title_prefix");
name.name = require("./name");

},{"./first_name":78,"./last_name":80,"./name":81,"./nobility_title_prefix":82,"./prefix":83}],80:[function(require,module,exports){
module["exports"] = [
  "Abel",
  "Abicht",
  "Abraham",
  "Abramovic",
  "Abt",
  "Achilles",
  "Achkinadze",
  "Ackermann",
  "Adam",
  "Adams",
  "Ade",
  "Agostini",
  "Ahlke",
  "Ahrenberg",
  "Ahrens",
  "Aigner",
  "Albert",
  "Albrecht",
  "Alexa",
  "Alexander",
  "Alizadeh",
  "Allgeyer",
  "Amann",
  "Amberg",
  "Anding",
  "Anggreny",
  "Apitz",
  "Arendt",
  "Arens",
  "Arndt",
  "Aryee",
  "Aschenbroich",
  "Assmus",
  "Astafei",
  "Auer",
  "Axmann",
  "Baarck",
  "Bachmann",
  "Badane",
  "Bader",
  "Baganz",
  "Bahl",
  "Bak",
  "Balcer",
  "Balck",
  "Balkow",
  "Balnuweit",
  "Balzer",
  "Banse",
  "Barr",
  "Bartels",
  "Barth",
  "Barylla",
  "Baseda",
  "Battke",
  "Bauer",
  "Bauermeister",
  "Baumann",
  "Baumeister",
  "Bauschinger",
  "Bauschke",
  "Bayer",
  "Beavogui",
  "Beck",
  "Beckel",
  "Becker",
  "Beckmann",
  "Bedewitz",
  "Beele",
  "Beer",
  "Beggerow",
  "Beh",
  "Behr",
  "Behrenbruch",
  "Belz",
  "Bender",
  "Benecke",
  "Benner",
  "Benninger",
  "Benzing",
  "Berends",
  "Berger",
  "Berner",
  "Berning",
  "Bertenbreiter",
  "Best",
  "Bethke",
  "Betz",
  "Beushausen",
  "Beutelspacher",
  "Beyer",
  "Biba",
  "Bichler",
  "Bickel",
  "Biedermann",
  "Bieler",
  "Bielert",
  "Bienasch",
  "Bienias",
  "Biesenbach",
  "Bigdeli",
  "Birkemeyer",
  "Bittner",
  "Blank",
  "Blaschek",
  "Blassneck",
  "Bloch",
  "Blochwitz",
  "Blockhaus",
  "Blum",
  "Blume",
  "Bock",
  "Bode",
  "Bogdashin",
  "Bogenrieder",
  "Bohge",
  "Bolm",
  "Borgschulze",
  "Bork",
  "Bormann",
  "Bornscheuer",
  "Borrmann",
  "Borsch",
  "Boruschewski",
  "Bos",
  "Bosler",
  "Bourrouag",
  "Bouschen",
  "Boxhammer",
  "Boyde",
  "Bozsik",
  "Brand",
  "Brandenburg",
  "Brandis",
  "Brandt",
  "Brauer",
  "Braun",
  "Brehmer",
  "Breitenstein",
  "Bremer",
  "Bremser",
  "Brenner",
  "Brettschneider",
  "Breu",
  "Breuer",
  "Briesenick",
  "Bringmann",
  "Brinkmann",
  "Brix",
  "Broening",
  "Brosch",
  "Bruckmann",
  "Bruder",
  "Bruhns",
  "Brunner",
  "Bruns",
  "Bräutigam",
  "Brömme",
  "Brüggmann",
  "Buchholz",
  "Buchrucker",
  "Buder",
  "Bultmann",
  "Bunjes",
  "Burger",
  "Burghagen",
  "Burkhard",
  "Burkhardt",
  "Burmeister",
  "Busch",
  "Buschbaum",
  "Busemann",
  "Buss",
  "Busse",
  "Bussmann",
  "Byrd",
  "Bäcker",
  "Böhm",
  "Bönisch",
  "Börgeling",
  "Börner",
  "Böttner",
  "Büchele",
  "Bühler",
  "Büker",
  "Büngener",
  "Bürger",
  "Bürklein",
  "Büscher",
  "Büttner",
  "Camara",
  "Carlowitz",
  "Carlsohn",
  "Caspari",
  "Caspers",
  "Chapron",
  "Christ",
  "Cierpinski",
  "Clarius",
  "Cleem",
  "Cleve",
  "Co",
  "Conrad",
  "Cordes",
  "Cornelsen",
  "Cors",
  "Cotthardt",
  "Crews",
  "Cronjäger",
  "Crosskofp",
  "Da",
  "Dahm",
  "Dahmen",
  "Daimer",
  "Damaske",
  "Danneberg",
  "Danner",
  "Daub",
  "Daubner",
  "Daudrich",
  "Dauer",
  "Daum",
  "Dauth",
  "Dautzenberg",
  "De",
  "Decker",
  "Deckert",
  "Deerberg",
  "Dehmel",
  "Deja",
  "Delonge",
  "Demut",
  "Dengler",
  "Denner",
  "Denzinger",
  "Derr",
  "Dertmann",
  "Dethloff",
  "Deuschle",
  "Dieckmann",
  "Diedrich",
  "Diekmann",
  "Dienel",
  "Dies",
  "Dietrich",
  "Dietz",
  "Dietzsch",
  "Diezel",
  "Dilla",
  "Dingelstedt",
  "Dippl",
  "Dittmann",
  "Dittmar",
  "Dittmer",
  "Dix",
  "Dobbrunz",
  "Dobler",
  "Dohring",
  "Dolch",
  "Dold",
  "Dombrowski",
  "Donie",
  "Doskoczynski",
  "Dragu",
  "Drechsler",
  "Drees",
  "Dreher",
  "Dreier",
  "Dreissigacker",
  "Dressler",
  "Drews",
  "Duma",
  "Dutkiewicz",
  "Dyett",
  "Dylus",
  "Dächert",
  "Döbel",
  "Döring",
  "Dörner",
  "Dörre",
  "Dück",
  "Eberhard",
  "Eberhardt",
  "Ecker",
  "Eckhardt",
  "Edorh",
  "Effler",
  "Eggenmueller",
  "Ehm",
  "Ehmann",
  "Ehrig",
  "Eich",
  "Eichmann",
  "Eifert",
  "Einert",
  "Eisenlauer",
  "Ekpo",
  "Elbe",
  "Eleyth",
  "Elss",
  "Emert",
  "Emmelmann",
  "Ender",
  "Engel",
  "Engelen",
  "Engelmann",
  "Eplinius",
  "Erdmann",
  "Erhardt",
  "Erlei",
  "Erm",
  "Ernst",
  "Ertl",
  "Erwes",
  "Esenwein",
  "Esser",
  "Evers",
  "Everts",
  "Ewald",
  "Fahner",
  "Faller",
  "Falter",
  "Farber",
  "Fassbender",
  "Faulhaber",
  "Fehrig",
  "Feld",
  "Felke",
  "Feller",
  "Fenner",
  "Fenske",
  "Feuerbach",
  "Fietz",
  "Figl",
  "Figura",
  "Filipowski",
  "Filsinger",
  "Fincke",
  "Fink",
  "Finke",
  "Fischer",
  "Fitschen",
  "Fleischer",
  "Fleischmann",
  "Floder",
  "Florczak",
  "Flore",
  "Flottmann",
  "Forkel",
  "Forst",
  "Frahmeke",
  "Frank",
  "Franke",
  "Franta",
  "Frantz",
  "Franz",
  "Franzis",
  "Franzmann",
  "Frauen",
  "Frauendorf",
  "Freigang",
  "Freimann",
  "Freimuth",
  "Freisen",
  "Frenzel",
  "Frey",
  "Fricke",
  "Fried",
  "Friedek",
  "Friedenberg",
  "Friedmann",
  "Friedrich",
  "Friess",
  "Frisch",
  "Frohn",
  "Frosch",
  "Fuchs",
  "Fuhlbrügge",
  "Fusenig",
  "Fust",
  "Förster",
  "Gaba",
  "Gabius",
  "Gabler",
  "Gadschiew",
  "Gakstädter",
  "Galander",
  "Gamlin",
  "Gamper",
  "Gangnus",
  "Ganzmann",
  "Garatva",
  "Gast",
  "Gastel",
  "Gatzka",
  "Gauder",
  "Gebhardt",
  "Geese",
  "Gehre",
  "Gehrig",
  "Gehring",
  "Gehrke",
  "Geiger",
  "Geisler",
  "Geissler",
  "Gelling",
  "Gens",
  "Gerbennow",
  "Gerdel",
  "Gerhardt",
  "Gerschler",
  "Gerson",
  "Gesell",
  "Geyer",
  "Ghirmai",
  "Ghosh",
  "Giehl",
  "Gierisch",
  "Giesa",
  "Giesche",
  "Gilde",
  "Glatting",
  "Goebel",
  "Goedicke",
  "Goldbeck",
  "Goldfuss",
  "Goldkamp",
  "Goldkühle",
  "Goller",
  "Golling",
  "Gollnow",
  "Golomski",
  "Gombert",
  "Gotthardt",
  "Gottschalk",
  "Gotz",
  "Goy",
  "Gradzki",
  "Graf",
  "Grams",
  "Grasse",
  "Gratzky",
  "Grau",
  "Greb",
  "Green",
  "Greger",
  "Greithanner",
  "Greschner",
  "Griem",
  "Griese",
  "Grimm",
  "Gromisch",
  "Gross",
  "Grosser",
  "Grossheim",
  "Grosskopf",
  "Grothaus",
  "Grothkopp",
  "Grotke",
  "Grube",
  "Gruber",
  "Grundmann",
  "Gruning",
  "Gruszecki",
  "Gröss",
  "Grötzinger",
  "Grün",
  "Grüner",
  "Gummelt",
  "Gunkel",
  "Gunther",
  "Gutjahr",
  "Gutowicz",
  "Gutschank",
  "Göbel",
  "Göckeritz",
  "Göhler",
  "Görlich",
  "Görmer",
  "Götz",
  "Götzelmann",
  "Güldemeister",
  "Günther",
  "Günz",
  "Gürbig",
  "Haack",
  "Haaf",
  "Habel",
  "Hache",
  "Hackbusch",
  "Hackelbusch",
  "Hadfield",
  "Hadwich",
  "Haferkamp",
  "Hahn",
  "Hajek",
  "Hallmann",
  "Hamann",
  "Hanenberger",
  "Hannecker",
  "Hanniske",
  "Hansen",
  "Hardy",
  "Hargasser",
  "Harms",
  "Harnapp",
  "Harter",
  "Harting",
  "Hartlieb",
  "Hartmann",
  "Hartwig",
  "Hartz",
  "Haschke",
  "Hasler",
  "Hasse",
  "Hassfeld",
  "Haug",
  "Hauke",
  "Haupt",
  "Haverney",
  "Heberstreit",
  "Hechler",
  "Hecht",
  "Heck",
  "Hedermann",
  "Hehl",
  "Heidelmann",
  "Heidler",
  "Heinemann",
  "Heinig",
  "Heinke",
  "Heinrich",
  "Heinze",
  "Heiser",
  "Heist",
  "Hellmann",
  "Helm",
  "Helmke",
  "Helpling",
  "Hengmith",
  "Henkel",
  "Hennes",
  "Henry",
  "Hense",
  "Hensel",
  "Hentel",
  "Hentschel",
  "Hentschke",
  "Hepperle",
  "Herberger",
  "Herbrand",
  "Hering",
  "Hermann",
  "Hermecke",
  "Herms",
  "Herold",
  "Herrmann",
  "Herschmann",
  "Hertel",
  "Herweg",
  "Herwig",
  "Herzenberg",
  "Hess",
  "Hesse",
  "Hessek",
  "Hessler",
  "Hetzler",
  "Heuck",
  "Heydemüller",
  "Hiebl",
  "Hildebrand",
  "Hildenbrand",
  "Hilgendorf",
  "Hillard",
  "Hiller",
  "Hingsen",
  "Hingst",
  "Hinrichs",
  "Hirsch",
  "Hirschberg",
  "Hirt",
  "Hodea",
  "Hoffman",
  "Hoffmann",
  "Hofmann",
  "Hohenberger",
  "Hohl",
  "Hohn",
  "Hohnheiser",
  "Hold",
  "Holdt",
  "Holinski",
  "Holl",
  "Holtfreter",
  "Holz",
  "Holzdeppe",
  "Holzner",
  "Hommel",
  "Honz",
  "Hooss",
  "Hoppe",
  "Horak",
  "Horn",
  "Horna",
  "Hornung",
  "Hort",
  "Howard",
  "Huber",
  "Huckestein",
  "Hudak",
  "Huebel",
  "Hugo",
  "Huhn",
  "Hujo",
  "Huke",
  "Huls",
  "Humbert",
  "Huneke",
  "Huth",
  "Häber",
  "Häfner",
  "Höcke",
  "Höft",
  "Höhne",
  "Hönig",
  "Hördt",
  "Hübenbecker",
  "Hübl",
  "Hübner",
  "Hügel",
  "Hüttcher",
  "Hütter",
  "Ibe",
  "Ihly",
  "Illing",
  "Isak",
  "Isekenmeier",
  "Itt",
  "Jacob",
  "Jacobs",
  "Jagusch",
  "Jahn",
  "Jahnke",
  "Jakobs",
  "Jakubczyk",
  "Jambor",
  "Jamrozy",
  "Jander",
  "Janich",
  "Janke",
  "Jansen",
  "Jarets",
  "Jaros",
  "Jasinski",
  "Jasper",
  "Jegorov",
  "Jellinghaus",
  "Jeorga",
  "Jerschabek",
  "Jess",
  "John",
  "Jonas",
  "Jossa",
  "Jucken",
  "Jung",
  "Jungbluth",
  "Jungton",
  "Just",
  "Jürgens",
  "Kaczmarek",
  "Kaesmacher",
  "Kahl",
  "Kahlert",
  "Kahles",
  "Kahlmeyer",
  "Kaiser",
  "Kalinowski",
  "Kallabis",
  "Kallensee",
  "Kampf",
  "Kampschulte",
  "Kappe",
  "Kappler",
  "Karhoff",
  "Karrass",
  "Karst",
  "Karsten",
  "Karus",
  "Kass",
  "Kasten",
  "Kastner",
  "Katzinski",
  "Kaufmann",
  "Kaul",
  "Kausemann",
  "Kawohl",
  "Kazmarek",
  "Kedzierski",
  "Keil",
  "Keiner",
  "Keller",
  "Kelm",
  "Kempe",
  "Kemper",
  "Kempter",
  "Kerl",
  "Kern",
  "Kesselring",
  "Kesselschläger",
  "Kette",
  "Kettenis",
  "Keutel",
  "Kick",
  "Kiessling",
  "Kinadeter",
  "Kinzel",
  "Kinzy",
  "Kirch",
  "Kirst",
  "Kisabaka",
  "Klaas",
  "Klabuhn",
  "Klapper",
  "Klauder",
  "Klaus",
  "Kleeberg",
  "Kleiber",
  "Klein",
  "Kleinert",
  "Kleininger",
  "Kleinmann",
  "Kleinsteuber",
  "Kleiss",
  "Klemme",
  "Klimczak",
  "Klinger",
  "Klink",
  "Klopsch",
  "Klose",
  "Kloss",
  "Kluge",
  "Kluwe",
  "Knabe",
  "Kneifel",
  "Knetsch",
  "Knies",
  "Knippel",
  "Knobel",
  "Knoblich",
  "Knoll",
  "Knorr",
  "Knorscheidt",
  "Knut",
  "Kobs",
  "Koch",
  "Kochan",
  "Kock",
  "Koczulla",
  "Koderisch",
  "Koehl",
  "Koehler",
  "Koenig",
  "Koester",
  "Kofferschlager",
  "Koha",
  "Kohle",
  "Kohlmann",
  "Kohnle",
  "Kohrt",
  "Koj",
  "Kolb",
  "Koleiski",
  "Kolokas",
  "Komoll",
  "Konieczny",
  "Konig",
  "Konow",
  "Konya",
  "Koob",
  "Kopf",
  "Kosenkow",
  "Koster",
  "Koszewski",
  "Koubaa",
  "Kovacs",
  "Kowalick",
  "Kowalinski",
  "Kozakiewicz",
  "Krabbe",
  "Kraft",
  "Kral",
  "Kramer",
  "Krauel",
  "Kraus",
  "Krause",
  "Krauspe",
  "Kreb",
  "Krebs",
  "Kreissig",
  "Kresse",
  "Kreutz",
  "Krieger",
  "Krippner",
  "Krodinger",
  "Krohn",
  "Krol",
  "Kron",
  "Krueger",
  "Krug",
  "Kruger",
  "Krull",
  "Kruschinski",
  "Krämer",
  "Kröckert",
  "Kröger",
  "Krüger",
  "Kubera",
  "Kufahl",
  "Kuhlee",
  "Kuhnen",
  "Kulimann",
  "Kulma",
  "Kumbernuss",
  "Kummle",
  "Kunz",
  "Kupfer",
  "Kupprion",
  "Kuprion",
  "Kurnicki",
  "Kurrat",
  "Kurschilgen",
  "Kuschewitz",
  "Kuschmann",
  "Kuske",
  "Kustermann",
  "Kutscherauer",
  "Kutzner",
  "Kwadwo",
  "Kähler",
  "Käther",
  "Köhler",
  "Köhrbrück",
  "Köhre",
  "Kölotzei",
  "König",
  "Köpernick",
  "Köseoglu",
  "Kúhn",
  "Kúhnert",
  "Kühn",
  "Kühnel",
  "Kühnemund",
  "Kühnert",
  "Kühnke",
  "Küsters",
  "Küter",
  "Laack",
  "Lack",
  "Ladewig",
  "Lakomy",
  "Lammert",
  "Lamos",
  "Landmann",
  "Lang",
  "Lange",
  "Langfeld",
  "Langhirt",
  "Lanig",
  "Lauckner",
  "Lauinger",
  "Laurén",
  "Lausecker",
  "Laux",
  "Laws",
  "Lax",
  "Leberer",
  "Lehmann",
  "Lehner",
  "Leibold",
  "Leide",
  "Leimbach",
  "Leipold",
  "Leist",
  "Leiter",
  "Leiteritz",
  "Leitheim",
  "Leiwesmeier",
  "Lenfers",
  "Lenk",
  "Lenz",
  "Lenzen",
  "Leo",
  "Lepthin",
  "Lesch",
  "Leschnik",
  "Letzelter",
  "Lewin",
  "Lewke",
  "Leyckes",
  "Lg",
  "Lichtenfeld",
  "Lichtenhagen",
  "Lichtl",
  "Liebach",
  "Liebe",
  "Liebich",
  "Liebold",
  "Lieder",
  "Lienshöft",
  "Linden",
  "Lindenberg",
  "Lindenmayer",
  "Lindner",
  "Linke",
  "Linnenbaum",
  "Lippe",
  "Lipske",
  "Lipus",
  "Lischka",
  "Lobinger",
  "Logsch",
  "Lohmann",
  "Lohre",
  "Lohse",
  "Lokar",
  "Loogen",
  "Lorenz",
  "Losch",
  "Loska",
  "Lott",
  "Loy",
  "Lubina",
  "Ludolf",
  "Lufft",
  "Lukoschek",
  "Lutje",
  "Lutz",
  "Löser",
  "Löwa",
  "Lübke",
  "Maak",
  "Maczey",
  "Madetzky",
  "Madubuko",
  "Mai",
  "Maier",
  "Maisch",
  "Malek",
  "Malkus",
  "Mallmann",
  "Malucha",
  "Manns",
  "Manz",
  "Marahrens",
  "Marchewski",
  "Margis",
  "Markowski",
  "Marl",
  "Marner",
  "Marquart",
  "Marschek",
  "Martel",
  "Marten",
  "Martin",
  "Marx",
  "Marxen",
  "Mathes",
  "Mathies",
  "Mathiszik",
  "Matschke",
  "Mattern",
  "Matthes",
  "Matula",
  "Mau",
  "Maurer",
  "Mauroff",
  "May",
  "Maybach",
  "Mayer",
  "Mebold",
  "Mehl",
  "Mehlhorn",
  "Mehlorn",
  "Meier",
  "Meisch",
  "Meissner",
  "Meloni",
  "Melzer",
  "Menga",
  "Menne",
  "Mensah",
  "Mensing",
  "Merkel",
  "Merseburg",
  "Mertens",
  "Mesloh",
  "Metzger",
  "Metzner",
  "Mewes",
  "Meyer",
  "Michallek",
  "Michel",
  "Mielke",
  "Mikitenko",
  "Milde",
  "Minah",
  "Mintzlaff",
  "Mockenhaupt",
  "Moede",
  "Moedl",
  "Moeller",
  "Moguenara",
  "Mohr",
  "Mohrhard",
  "Molitor",
  "Moll",
  "Moller",
  "Molzan",
  "Montag",
  "Moormann",
  "Mordhorst",
  "Morgenstern",
  "Morhelfer",
  "Moritz",
  "Moser",
  "Motchebon",
  "Motzenbbäcker",
  "Mrugalla",
  "Muckenthaler",
  "Mues",
  "Muller",
  "Mulrain",
  "Mächtig",
  "Mäder",
  "Möcks",
  "Mögenburg",
  "Möhsner",
  "Möldner",
  "Möllenbeck",
  "Möller",
  "Möllinger",
  "Mörsch",
  "Mühleis",
  "Müller",
  "Münch",
  "Nabein",
  "Nabow",
  "Nagel",
  "Nannen",
  "Nastvogel",
  "Nau",
  "Naubert",
  "Naumann",
  "Ne",
  "Neimke",
  "Nerius",
  "Neubauer",
  "Neubert",
  "Neuendorf",
  "Neumair",
  "Neumann",
  "Neupert",
  "Neurohr",
  "Neuschwander",
  "Newton",
  "Ney",
  "Nicolay",
  "Niedermeier",
  "Nieklauson",
  "Niklaus",
  "Nitzsche",
  "Noack",
  "Nodler",
  "Nolte",
  "Normann",
  "Norris",
  "Northoff",
  "Nowak",
  "Nussbeck",
  "Nwachukwu",
  "Nytra",
  "Nöh",
  "Oberem",
  "Obergföll",
  "Obermaier",
  "Ochs",
  "Oeser",
  "Olbrich",
  "Onnen",
  "Ophey",
  "Oppong",
  "Orth",
  "Orthmann",
  "Oschkenat",
  "Osei",
  "Osenberg",
  "Ostendarp",
  "Ostwald",
  "Otte",
  "Otto",
  "Paesler",
  "Pajonk",
  "Pallentin",
  "Panzig",
  "Paschke",
  "Patzwahl",
  "Paukner",
  "Peselman",
  "Peter",
  "Peters",
  "Petzold",
  "Pfeiffer",
  "Pfennig",
  "Pfersich",
  "Pfingsten",
  "Pflieger",
  "Pflügner",
  "Philipp",
  "Pichlmaier",
  "Piesker",
  "Pietsch",
  "Pingpank",
  "Pinnock",
  "Pippig",
  "Pitschugin",
  "Plank",
  "Plass",
  "Platzer",
  "Plauk",
  "Plautz",
  "Pletsch",
  "Plotzitzka",
  "Poehn",
  "Poeschl",
  "Pogorzelski",
  "Pohl",
  "Pohland",
  "Pohle",
  "Polifka",
  "Polizzi",
  "Pollmächer",
  "Pomp",
  "Ponitzsch",
  "Porsche",
  "Porth",
  "Poschmann",
  "Poser",
  "Pottel",
  "Prah",
  "Prange",
  "Prediger",
  "Pressler",
  "Preuk",
  "Preuss",
  "Prey",
  "Priemer",
  "Proske",
  "Pusch",
  "Pöche",
  "Pöge",
  "Raabe",
  "Rabenstein",
  "Rach",
  "Radtke",
  "Rahn",
  "Ranftl",
  "Rangen",
  "Ranz",
  "Rapp",
  "Rath",
  "Rau",
  "Raubuch",
  "Raukuc",
  "Rautenkranz",
  "Rehwagen",
  "Reiber",
  "Reichardt",
  "Reichel",
  "Reichling",
  "Reif",
  "Reifenrath",
  "Reimann",
  "Reinberg",
  "Reinelt",
  "Reinhardt",
  "Reinke",
  "Reitze",
  "Renk",
  "Rentz",
  "Renz",
  "Reppin",
  "Restle",
  "Restorff",
  "Retzke",
  "Reuber",
  "Reumann",
  "Reus",
  "Reuss",
  "Reusse",
  "Rheder",
  "Rhoden",
  "Richards",
  "Richter",
  "Riedel",
  "Riediger",
  "Rieger",
  "Riekmann",
  "Riepl",
  "Riermeier",
  "Riester",
  "Riethmüller",
  "Rietmüller",
  "Rietscher",
  "Ringel",
  "Ringer",
  "Rink",
  "Ripken",
  "Ritosek",
  "Ritschel",
  "Ritter",
  "Rittweg",
  "Ritz",
  "Roba",
  "Rockmeier",
  "Rodehau",
  "Rodowski",
  "Roecker",
  "Roggatz",
  "Rohländer",
  "Rohrer",
  "Rokossa",
  "Roleder",
  "Roloff",
  "Roos",
  "Rosbach",
  "Roschinsky",
  "Rose",
  "Rosenauer",
  "Rosenbauer",
  "Rosenthal",
  "Rosksch",
  "Rossberg",
  "Rossler",
  "Roth",
  "Rother",
  "Ruch",
  "Ruckdeschel",
  "Rumpf",
  "Rupprecht",
  "Ruth",
  "Ryjikh",
  "Ryzih",
  "Rädler",
  "Räntsch",
  "Rödiger",
  "Röse",
  "Röttger",
  "Rücker",
  "Rüdiger",
  "Rüter",
  "Sachse",
  "Sack",
  "Saflanis",
  "Sagafe",
  "Sagonas",
  "Sahner",
  "Saile",
  "Sailer",
  "Salow",
  "Salzer",
  "Salzmann",
  "Sammert",
  "Sander",
  "Sarvari",
  "Sattelmaier",
  "Sauer",
  "Sauerland",
  "Saumweber",
  "Savoia",
  "Scc",
  "Schacht",
  "Schaefer",
  "Schaffarzik",
  "Schahbasian",
  "Scharf",
  "Schedler",
  "Scheer",
  "Schelk",
  "Schellenbeck",
  "Schembera",
  "Schenk",
  "Scherbarth",
  "Scherer",
  "Schersing",
  "Scherz",
  "Scheurer",
  "Scheuring",
  "Scheytt",
  "Schielke",
  "Schieskow",
  "Schildhauer",
  "Schilling",
  "Schima",
  "Schimmer",
  "Schindzielorz",
  "Schirmer",
  "Schirrmeister",
  "Schlachter",
  "Schlangen",
  "Schlawitz",
  "Schlechtweg",
  "Schley",
  "Schlicht",
  "Schlitzer",
  "Schmalzle",
  "Schmid",
  "Schmidt",
  "Schmidtchen",
  "Schmitt",
  "Schmitz",
  "Schmuhl",
  "Schneider",
  "Schnelting",
  "Schnieder",
  "Schniedermeier",
  "Schnürer",
  "Schoberg",
  "Scholz",
  "Schonberg",
  "Schondelmaier",
  "Schorr",
  "Schott",
  "Schottmann",
  "Schouren",
  "Schrader",
  "Schramm",
  "Schreck",
  "Schreiber",
  "Schreiner",
  "Schreiter",
  "Schroder",
  "Schröder",
  "Schuermann",
  "Schuff",
  "Schuhaj",
  "Schuldt",
  "Schult",
  "Schulte",
  "Schultz",
  "Schultze",
  "Schulz",
  "Schulze",
  "Schumacher",
  "Schumann",
  "Schupp",
  "Schuri",
  "Schuster",
  "Schwab",
  "Schwalm",
  "Schwanbeck",
  "Schwandke",
  "Schwanitz",
  "Schwarthoff",
  "Schwartz",
  "Schwarz",
  "Schwarzer",
  "Schwarzkopf",
  "Schwarzmeier",
  "Schwatlo",
  "Schweisfurth",
  "Schwennen",
  "Schwerdtner",
  "Schwidde",
  "Schwirkschlies",
  "Schwuchow",
  "Schäfer",
  "Schäffel",
  "Schäffer",
  "Schäning",
  "Schöckel",
  "Schönball",
  "Schönbeck",
  "Schönberg",
  "Schönebeck",
  "Schönenberger",
  "Schönfeld",
  "Schönherr",
  "Schönlebe",
  "Schötz",
  "Schüler",
  "Schüppel",
  "Schütz",
  "Schütze",
  "Seeger",
  "Seelig",
  "Sehls",
  "Seibold",
  "Seidel",
  "Seiders",
  "Seigel",
  "Seiler",
  "Seitz",
  "Semisch",
  "Senkel",
  "Sewald",
  "Siebel",
  "Siebert",
  "Siegling",
  "Sielemann",
  "Siemon",
  "Siener",
  "Sievers",
  "Siewert",
  "Sihler",
  "Sillah",
  "Simon",
  "Sinnhuber",
  "Sischka",
  "Skibicki",
  "Sladek",
  "Slotta",
  "Smieja",
  "Soboll",
  "Sokolowski",
  "Soller",
  "Sollner",
  "Sommer",
  "Somssich",
  "Sonn",
  "Sonnabend",
  "Spahn",
  "Spank",
  "Spelmeyer",
  "Spiegelburg",
  "Spielvogel",
  "Spinner",
  "Spitzmüller",
  "Splinter",
  "Sporrer",
  "Sprenger",
  "Spöttel",
  "Stahl",
  "Stang",
  "Stanger",
  "Stauss",
  "Steding",
  "Steffen",
  "Steffny",
  "Steidl",
  "Steigauf",
  "Stein",
  "Steinecke",
  "Steinert",
  "Steinkamp",
  "Steinmetz",
  "Stelkens",
  "Stengel",
  "Stengl",
  "Stenzel",
  "Stepanov",
  "Stephan",
  "Stern",
  "Steuk",
  "Stief",
  "Stifel",
  "Stoll",
  "Stolle",
  "Stolz",
  "Storl",
  "Storp",
  "Stoutjesdijk",
  "Stratmann",
  "Straub",
  "Strausa",
  "Streck",
  "Streese",
  "Strege",
  "Streit",
  "Streller",
  "Strieder",
  "Striezel",
  "Strogies",
  "Strohschank",
  "Strunz",
  "Strutz",
  "Stube",
  "Stöckert",
  "Stöppler",
  "Stöwer",
  "Stürmer",
  "Suffa",
  "Sujew",
  "Sussmann",
  "Suthe",
  "Sutschet",
  "Swillims",
  "Szendrei",
  "Sören",
  "Sürth",
  "Tafelmeier",
  "Tang",
  "Tasche",
  "Taufratshofer",
  "Tegethof",
  "Teichmann",
  "Tepper",
  "Terheiden",
  "Terlecki",
  "Teufel",
  "Theele",
  "Thieke",
  "Thimm",
  "Thiomas",
  "Thomas",
  "Thriene",
  "Thränhardt",
  "Thust",
  "Thyssen",
  "Thöne",
  "Tidow",
  "Tiedtke",
  "Tietze",
  "Tilgner",
  "Tillack",
  "Timmermann",
  "Tischler",
  "Tischmann",
  "Tittman",
  "Tivontschik",
  "Tonat",
  "Tonn",
  "Trampeli",
  "Trauth",
  "Trautmann",
  "Travan",
  "Treff",
  "Tremmel",
  "Tress",
  "Tsamonikian",
  "Tschiers",
  "Tschirch",
  "Tuch",
  "Tucholke",
  "Tudow",
  "Tuschmo",
  "Tächl",
  "Többen",
  "Töpfer",
  "Uhlemann",
  "Uhlig",
  "Uhrig",
  "Uibel",
  "Uliczka",
  "Ullmann",
  "Ullrich",
  "Umbach",
  "Umlauft",
  "Umminger",
  "Unger",
  "Unterpaintner",
  "Urban",
  "Urbaniak",
  "Urbansky",
  "Urhig",
  "Vahlensieck",
  "Van",
  "Vangermain",
  "Vater",
  "Venghaus",
  "Verniest",
  "Verzi",
  "Vey",
  "Viellehner",
  "Vieweg",
  "Voelkel",
  "Vogel",
  "Vogelgsang",
  "Vogt",
  "Voigt",
  "Vokuhl",
  "Volk",
  "Volker",
  "Volkmann",
  "Von",
  "Vona",
  "Vontein",
  "Wachenbrunner",
  "Wachtel",
  "Wagner",
  "Waibel",
  "Wakan",
  "Waldmann",
  "Wallner",
  "Wallstab",
  "Walter",
  "Walther",
  "Walton",
  "Walz",
  "Wanner",
  "Wartenberg",
  "Waschbüsch",
  "Wassilew",
  "Wassiluk",
  "Weber",
  "Wehrsen",
  "Weidlich",
  "Weidner",
  "Weigel",
  "Weight",
  "Weiler",
  "Weimer",
  "Weis",
  "Weiss",
  "Weller",
  "Welsch",
  "Welz",
  "Welzel",
  "Weniger",
  "Wenk",
  "Werle",
  "Werner",
  "Werrmann",
  "Wessel",
  "Wessinghage",
  "Weyel",
  "Wezel",
  "Wichmann",
  "Wickert",
  "Wiebe",
  "Wiechmann",
  "Wiegelmann",
  "Wierig",
  "Wiese",
  "Wieser",
  "Wilhelm",
  "Wilky",
  "Will",
  "Willwacher",
  "Wilts",
  "Wimmer",
  "Winkelmann",
  "Winkler",
  "Winter",
  "Wischek",
  "Wischer",
  "Wissing",
  "Wittich",
  "Wittl",
  "Wolf",
  "Wolfarth",
  "Wolff",
  "Wollenberg",
  "Wollmann",
  "Woytkowska",
  "Wujak",
  "Wurm",
  "Wyludda",
  "Wölpert",
  "Wöschler",
  "Wühn",
  "Wünsche",
  "Zach",
  "Zaczkiewicz",
  "Zahn",
  "Zaituc",
  "Zandt",
  "Zanner",
  "Zapletal",
  "Zauber",
  "Zeidler",
  "Zekl",
  "Zender",
  "Zeuch",
  "Zeyen",
  "Zeyhle",
  "Ziegler",
  "Zimanyi",
  "Zimmer",
  "Zimmermann",
  "Zinser",
  "Zintl",
  "Zipp",
  "Zipse",
  "Zschunke",
  "Zuber",
  "Zwiener",
  "Zümsande",
  "Östringer",
  "Überacker"
];

},{}],81:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name}",
  "#{first_name} #{nobility_title_prefix} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}"
];

},{}],82:[function(require,module,exports){
module["exports"] = [
  "zu",
  "von",
  "vom",
  "von der"
];

},{}],83:[function(require,module,exports){
module["exports"] = [
  "Hr.",
  "Fr.",
  "Dr.",
  "Prof. Dr."
];

},{}],84:[function(require,module,exports){
module["exports"] = [
  "(0###) #########",
  "(0####) #######",
  "+49-###-#######",
  "+49-####-########"
];

},{}],85:[function(require,module,exports){
var phone_number = {};
module['exports'] = phone_number;
phone_number.formats = require("./formats");

},{"./formats":84}],86:[function(require,module,exports){
arguments[4][52][0].apply(exports,arguments)
},{"dup":52}],87:[function(require,module,exports){
module["exports"] = [
  "#{city_name}"
];

},{}],88:[function(require,module,exports){
module["exports"] = [
  "Aigen im Mühlkreis",
  "Allerheiligen bei Wildon",
  "Altenfelden",
  "Arriach",
  "Axams",
  "Baumgartenberg",
  "Bergern im Dunkelsteinerwald",
  "Berndorf bei Salzburg",
  "Bregenz",
  "Breitenbach am Inn",
  "Deutsch-Wagram",
  "Dienten am Hochkönig",
  "Dietach",
  "Dornbirn",
  "Dürnkrut",
  "Eben im Pongau",
  "Ebenthal in Kärnten",
  "Eichgraben",
  "Eisenstadt",
  "Ellmau",
  "Feistritz am Wechsel",
  "Finkenberg",
  "Fiss",
  "Frantschach-St. Gertraud",
  "Fritzens",
  "Gams bei Hieflau",
  "Geiersberg",
  "Graz",
  "Großhöflein",
  "Gößnitz",
  "Hartl",
  "Hausleiten",
  "Herzogenburg",
  "Hinterhornbach",
  "Hochwolkersdorf",
  "Ilz",
  "Ilztal",
  "Innerbraz",
  "Innsbruck",
  "Itter",
  "Jagerberg",
  "Jeging",
  "Johnsbach",
  "Johnsdorf-Brunn",
  "Jungholz",
  "Kirchdorf am Inn",
  "Klagenfurt",
  "Kottes-Purk",
  "Krumau am Kamp",
  "Krumbach",
  "Lavamünd",
  "Lech",
  "Linz",
  "Ludesch",
  "Lödersdorf",
  "Marbach an der Donau",
  "Mattsee",
  "Mautern an der Donau",
  "Mauterndorf",
  "Mitterbach am Erlaufsee",
  "Neudorf bei Passail",
  "Neudorf bei Staatz",
  "Neukirchen an der Enknach",
  "Neustift an der Lafnitz",
  "Niederleis",
  "Oberndorf in Tirol",
  "Oberstorcha",
  "Oberwaltersdorf",
  "Oed-Oehling",
  "Ort im Innkreis",
  "Pilgersdorf",
  "Pitschgau",
  "Pollham",
  "Preitenegg",
  "Purbach am Neusiedler See",
  "Rabenwald",
  "Raiding",
  "Rastenfeld",
  "Ratten",
  "Rettenegg",
  "Salzburg",
  "Sankt Johann im Saggautal",
  "St. Peter am Kammersberg",
  "St. Pölten",
  "St. Veit an der Glan",
  "Taxenbach",
  "Tragwein",
  "Trebesing",
  "Trieben",
  "Turnau",
  "Ungerdorf",
  "Unterauersbach",
  "Unterstinkenbrunn",
  "Untertilliach",
  "Uttendorf",
  "Vals",
  "Velden am Wörther See",
  "Viehhofen",
  "Villach",
  "Vitis",
  "Waidhofen an der Thaya",
  "Waldkirchen am Wesen",
  "Weißkirchen an der Traun",
  "Wien",
  "Wimpassing im Schwarzatale",
  "Ybbs an der Donau",
  "Ybbsitz",
  "Yspertal",
  "Zeillern",
  "Zell am Pettenfirst",
  "Zell an der Pram",
  "Zerlach",
  "Zwölfaxing",
  "Öblarn",
  "Übelbach",
  "Überackern",
  "Übersaxen",
  "Übersbach"
];

},{}],89:[function(require,module,exports){
arguments[4][56][0].apply(exports,arguments)
},{"dup":56}],90:[function(require,module,exports){
module["exports"] = [
  "Österreich"
];

},{}],91:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.country = require("./country");
address.street_root = require("./street_root");
address.building_number = require("./building_number");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city_name = require("./city_name");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":86,"./city":87,"./city_name":88,"./country":89,"./default_country":90,"./postcode":92,"./secondary_address":93,"./state":94,"./state_abbr":95,"./street_address":96,"./street_name":97,"./street_root":98}],92:[function(require,module,exports){
module["exports"] = [
  "####"
];

},{}],93:[function(require,module,exports){
arguments[4][60][0].apply(exports,arguments)
},{"dup":60}],94:[function(require,module,exports){
module["exports"] = [
  "Burgenland",
  "Kärnten",
  "Niederösterreich",
  "Oberösterreich",
  "Salzburg",
  "Steiermark",
  "Tirol",
  "Vorarlberg",
  "Wien"
];

},{}],95:[function(require,module,exports){
module["exports"] = [
  "Bgld.",
  "Ktn.",
  "NÖ",
  "OÖ",
  "Sbg.",
  "Stmk.",
  "T",
  "Vbg.",
  "W"
];

},{}],96:[function(require,module,exports){
arguments[4][63][0].apply(exports,arguments)
},{"dup":63}],97:[function(require,module,exports){
arguments[4][64][0].apply(exports,arguments)
},{"dup":64}],98:[function(require,module,exports){
module["exports"] = [
  "Ahorn",
  "Ahorngasse (St. Andrä)",
  "Alleestraße (Poysbrunn)",
  "Alpenlandstraße",
  "Alte Poststraße",
  "Alte Ufergasse",
  "Am Kronawett (Hagenbrunn)",
  "Am Mühlwasser",
  "Am Rebenhang",
  "Am Sternweg",
  "Anton Wildgans-Straße",
  "Auer-von-Welsbach-Weg",
  "Auf der Stift",
  "Aufeldgasse",
  "Bahngasse",
  "Bahnhofstraße",
  "Bahnstraße (Gerhaus)",
  "Basteigasse",
  "Berggasse",
  "Bergstraße",
  "Birkenweg",
  "Blasiussteig",
  "Blattur",
  "Bruderhofgasse",
  "Brunnelligasse",
  "Bühelweg",
  "Darnautgasse",
  "Donaugasse",
  "Dorfplatz (Haselbach)",
  "Dr.-Oberreiter-Straße",
  "Dr.Karl Holoubek-Str.",
  "Drautal Bundesstraße",
  "Dürnrohrer Straße",
  "Ebenthalerstraße",
  "Eckgrabenweg",
  "Erlenstraße",
  "Erlenweg",
  "Eschenweg",
  "Etrichgasse",
  "Fassergasse",
  "Feichteggerwiese",
  "Feld-Weg",
  "Feldgasse",
  "Feldstapfe",
  "Fischpointweg",
  "Flachbergstraße",
  "Flurweg",
  "Franz Schubert-Gasse",
  "Franz-Schneeweiß-Weg",
  "Franz-von-Assisi-Straße",
  "Fritz-Pregl-Straße",
  "Fuchsgrubenweg",
  "Födlerweg",
  "Föhrenweg",
  "Fünfhaus (Paasdorf)",
  "Gabelsbergerstraße",
  "Gartenstraße",
  "Geigen",
  "Geigergasse",
  "Gemeindeaugasse",
  "Gemeindeplatz",
  "Georg-Aichinger-Straße",
  "Glanfeldbachweg",
  "Graben (Burgauberg)",
  "Grub",
  "Gröretgasse",
  "Grünbach",
  "Gösting",
  "Hainschwang",
  "Hans-Mauracher-Straße",
  "Hart",
  "Teichstraße",
  "Hauptplatz",
  "Hauptstraße",
  "Heideweg",
  "Heinrich Landauer Gasse",
  "Helenengasse",
  "Hermann von Gilmweg",
  "Hermann-Löns-Gasse",
  "Herminengasse",
  "Hernstorferstraße",
  "Hirsdorf",
  "Hochfeistritz",
  "Hochhaus Neue Donau",
  "Hof",
  "Hussovits Gasse",
  "Höggen",
  "Hütten",
  "Janzgasse",
  "Jochriemgutstraße",
  "Johann-Strauß-Gasse",
  "Julius-Raab-Straße",
  "Kahlenberger Straße",
  "Karl Kraft-Straße",
  "Kegelprielstraße",
  "Keltenberg-Eponaweg",
  "Kennedybrücke",
  "Kerpelystraße",
  "Kindergartenstraße",
  "Kinderheimgasse",
  "Kirchenplatz",
  "Kirchweg",
  "Klagenfurter Straße",
  "Klamm",
  "Kleinbaumgarten",
  "Klingergasse",
  "Koloniestraße",
  "Konrad-Duden-Gasse",
  "Krankenhausstraße",
  "Kubinstraße",
  "Köhldorfergasse",
  "Lackenweg",
  "Lange Mekotte",
  "Leifling",
  "Leopold Frank-Straße (Pellendorf)",
  "Lerchengasse (Pirka)",
  "Lichtensternsiedlung V",
  "Lindenhofstraße",
  "Lindenweg",
  "Luegstraße",
  "Maierhof",
  "Malerweg",
  "Mitterweg",
  "Mittlere Hauptstraße",
  "Moosbachgasse",
  "Morettigasse",
  "Musikpavillon Riezlern",
  "Mühlboden",
  "Mühle",
  "Mühlenweg",
  "Neustiftgasse",
  "Niederegg",
  "Niedergams",
  "Nordwestbahnbrücke",
  "Oberbödenalm",
  "Obere Berggasse",
  "Oedt",
  "Am Färberberg",
  "Ottogasse",
  "Paul Peters-Gasse",
  "Perspektivstraße",
  "Poppichl",
  "Privatweg",
  "Prixgasse",
  "Pyhra",
  "Radetzkystraße",
  "Raiden",
  "Reichensteinstraße",
  "Reitbauernstraße",
  "Reiterweg",
  "Reitschulgasse",
  "Ringweg",
  "Rupertistraße",
  "Römerstraße",
  "Römerweg",
  "Sackgasse",
  "Schaunbergerstraße",
  "Schloßweg",
  "Schulgasse (Langeck)",
  "Schönholdsiedlung",
  "Seeblick",
  "Seestraße",
  "Semriacherstraße",
  "Simling",
  "Sipbachzeller Straße",
  "Sonnenweg",
  "Spargelfeldgasse",
  "Spiesmayrweg",
  "Sportplatzstraße",
  "St.Ulrich",
  "Steilmannstraße",
  "Steingrüneredt",
  "Strassfeld",
  "Straßerau",
  "Stöpflweg",
  "Stüra",
  "Taferngasse",
  "Tennweg",
  "Thomas Koschat-Gasse",
  "Tiroler Straße",
  "Torrogasse",
  "Uferstraße (Schwarzau am Steinfeld)",
  "Unterdörfl",
  "Unterer Sonnrainweg",
  "Verwaltersiedlung",
  "Waldhang",
  "Wasen",
  "Weidenstraße",
  "Weiherweg",
  "Wettsteingasse",
  "Wiener Straße",
  "Windisch",
  "Zebragasse",
  "Zellerstraße",
  "Ziehrerstraße",
  "Zulechnerweg",
  "Zwergjoch",
  "Ötzbruck"
];

},{}],99:[function(require,module,exports){
module["exports"] = [
  "+43-6##-#######",
  "06##-########",
  "+436#########",
  "06##########"
];

},{}],100:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"./formats":99,"dup":67}],101:[function(require,module,exports){
arguments[4][68][0].apply(exports,arguments)
},{"./legal_form":102,"./name":103,"./suffix":104,"dup":68}],102:[function(require,module,exports){
arguments[4][69][0].apply(exports,arguments)
},{"dup":69}],103:[function(require,module,exports){
arguments[4][70][0].apply(exports,arguments)
},{"dup":70}],104:[function(require,module,exports){
arguments[4][69][0].apply(exports,arguments)
},{"dup":69}],105:[function(require,module,exports){
var de_AT = {};
module['exports'] = de_AT;
de_AT.title = "German (Austria)";
de_AT.address = require("./address");
de_AT.company = require("./company");
de_AT.internet = require("./internet");
de_AT.name = require("./name");
de_AT.phone_number = require("./phone_number");
de_AT.cell_phone = require("./cell_phone");

},{"./address":91,"./cell_phone":100,"./company":101,"./internet":108,"./name":110,"./phone_number":116}],106:[function(require,module,exports){
module["exports"] = [
  "com",
  "info",
  "name",
  "net",
  "org",
  "de",
  "ch",
  "at"
];

},{}],107:[function(require,module,exports){
arguments[4][74][0].apply(exports,arguments)
},{"dup":74}],108:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"./domain_suffix":106,"./free_email":107,"dup":75}],109:[function(require,module,exports){
arguments[4][78][0].apply(exports,arguments)
},{"dup":78}],110:[function(require,module,exports){
arguments[4][79][0].apply(exports,arguments)
},{"./first_name":109,"./last_name":111,"./name":112,"./nobility_title_prefix":113,"./prefix":114,"dup":79}],111:[function(require,module,exports){
arguments[4][80][0].apply(exports,arguments)
},{"dup":80}],112:[function(require,module,exports){
arguments[4][81][0].apply(exports,arguments)
},{"dup":81}],113:[function(require,module,exports){
arguments[4][82][0].apply(exports,arguments)
},{"dup":82}],114:[function(require,module,exports){
module["exports"] = [
  "Dr.",
  "Prof. Dr."
];

},{}],115:[function(require,module,exports){
module["exports"] = [
  "01 #######",
  "01#######",
  "+43-1-#######",
  "+431#######",
  "0#### ####",
  "0#########",
  "+43-####-####",
  "+43 ########"
];

},{}],116:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":115,"dup":85}],117:[function(require,module,exports){
module["exports"] = [
  "CH",
  "CH",
  "CH",
  "DE",
  "AT",
  "US",
  "LI",
  "US",
  "HK",
  "VN"
];

},{}],118:[function(require,module,exports){
module["exports"] = [
  "Schweiz"
];

},{}],119:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.country_code = require("./country_code");
address.postcode = require("./postcode");
address.default_country = require("./default_country");

},{"./country_code":117,"./default_country":118,"./postcode":120}],120:[function(require,module,exports){
module["exports"] = [
  "1###",
  "2###",
  "3###",
  "4###",
  "5###",
  "6###",
  "7###",
  "8###",
  "9###"
];

},{}],121:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.name = require("./name");

},{"./name":122,"./suffix":123}],122:[function(require,module,exports){
arguments[4][70][0].apply(exports,arguments)
},{"dup":70}],123:[function(require,module,exports){
module["exports"] = [
  "AG",
  "GmbH",
  "und Söhne",
  "und Partner",
  "& Co.",
  "Gruppe",
  "LLC",
  "Inc."
];

},{}],124:[function(require,module,exports){
var de_CH = {};
module['exports'] = de_CH;
de_CH.title = "German (Switzerland)";
de_CH.address = require("./address");
de_CH.company = require("./company");
de_CH.internet = require("./internet");
de_CH.phone_number = require("./phone_number");

},{"./address":119,"./company":121,"./internet":126,"./phone_number":128}],125:[function(require,module,exports){
module["exports"] = [
  "com",
  "net",
  "biz",
  "ch",
  "de",
  "li",
  "at",
  "ch",
  "ch"
];

},{}],126:[function(require,module,exports){
var internet = {};
module['exports'] = internet;
internet.domain_suffix = require("./domain_suffix");

},{"./domain_suffix":125}],127:[function(require,module,exports){
module["exports"] = [
  "0800 ### ###",
  "0800 ## ## ##",
  "0## ### ## ##",
  "0## ### ## ##",
  "+41 ## ### ## ##",
  "0900 ### ###",
  "076 ### ## ##",
  "+4178 ### ## ##",
  "0041 79 ### ## ##"
];

},{}],128:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":127,"dup":85}],129:[function(require,module,exports){
module["exports"] = [
  "#####",
  "####",
  "###"
];

},{}],130:[function(require,module,exports){
arguments[4][53][0].apply(exports,arguments)
},{"dup":53}],131:[function(require,module,exports){
module["exports"] = [
  "North",
  "East",
  "West",
  "South",
  "New",
  "Lake",
  "Port"
];

},{}],132:[function(require,module,exports){
module["exports"] = [
  "town",
  "ton",
  "land",
  "ville",
  "berg",
  "burgh",
  "borough",
  "bury",
  "view",
  "port",
  "mouth",
  "stad",
  "furt",
  "chester",
  "mouth",
  "fort",
  "haven",
  "side",
  "shire"
];

},{}],133:[function(require,module,exports){
module["exports"] = [
  "Afghanistan",
  "Albania",
  "Algeria",
  "American Samoa",
  "Andorra",
  "Angola",
  "Anguilla",
  "Antarctica (the territory South of 60 deg S)",
  "Antigua and Barbuda",
  "Argentina",
  "Armenia",
  "Aruba",
  "Australia",
  "Austria",
  "Azerbaijan",
  "Bahamas",
  "Bahrain",
  "Bangladesh",
  "Barbados",
  "Belarus",
  "Belgium",
  "Belize",
  "Benin",
  "Bermuda",
  "Bhutan",
  "Bolivia",
  "Bosnia and Herzegovina",
  "Botswana",
  "Bouvet Island (Bouvetoya)",
  "Brazil",
  "British Indian Ocean Territory (Chagos Archipelago)",
  "Brunei Darussalam",
  "Bulgaria",
  "Burkina Faso",
  "Burundi",
  "Cambodia",
  "Cameroon",
  "Canada",
  "Cape Verde",
  "Cayman Islands",
  "Central African Republic",
  "Chad",
  "Chile",
  "China",
  "Christmas Island",
  "Cocos (Keeling) Islands",
  "Colombia",
  "Comoros",
  "Congo",
  "Congo",
  "Cook Islands",
  "Costa Rica",
  "Cote d'Ivoire",
  "Croatia",
  "Cuba",
  "Cyprus",
  "Czech Republic",
  "Denmark",
  "Djibouti",
  "Dominica",
  "Dominican Republic",
  "Ecuador",
  "Egypt",
  "El Salvador",
  "Equatorial Guinea",
  "Eritrea",
  "Estonia",
  "Ethiopia",
  "Faroe Islands",
  "Falkland Islands (Malvinas)",
  "Fiji",
  "Finland",
  "France",
  "French Guiana",
  "French Polynesia",
  "French Southern Territories",
  "Gabon",
  "Gambia",
  "Georgia",
  "Germany",
  "Ghana",
  "Gibraltar",
  "Greece",
  "Greenland",
  "Grenada",
  "Guadeloupe",
  "Guam",
  "Guatemala",
  "Guernsey",
  "Guinea",
  "Guinea-Bissau",
  "Guyana",
  "Haiti",
  "Heard Island and McDonald Islands",
  "Holy See (Vatican City State)",
  "Honduras",
  "Hong Kong",
  "Hungary",
  "Iceland",
  "India",
  "Indonesia",
  "Iran",
  "Iraq",
  "Ireland",
  "Isle of Man",
  "Israel",
  "Italy",
  "Jamaica",
  "Japan",
  "Jersey",
  "Jordan",
  "Kazakhstan",
  "Kenya",
  "Kiribati",
  "Democratic People's Republic of Korea",
  "Republic of Korea",
  "Kuwait",
  "Kyrgyz Republic",
  "Lao People's Democratic Republic",
  "Latvia",
  "Lebanon",
  "Lesotho",
  "Liberia",
  "Libyan Arab Jamahiriya",
  "Liechtenstein",
  "Lithuania",
  "Luxembourg",
  "Macao",
  "Macedonia",
  "Madagascar",
  "Malawi",
  "Malaysia",
  "Maldives",
  "Mali",
  "Malta",
  "Marshall Islands",
  "Martinique",
  "Mauritania",
  "Mauritius",
  "Mayotte",
  "Mexico",
  "Micronesia",
  "Moldova",
  "Monaco",
  "Mongolia",
  "Montenegro",
  "Montserrat",
  "Morocco",
  "Mozambique",
  "Myanmar",
  "Namibia",
  "Nauru",
  "Nepal",
  "Netherlands Antilles",
  "Netherlands",
  "New Caledonia",
  "New Zealand",
  "Nicaragua",
  "Niger",
  "Nigeria",
  "Niue",
  "Norfolk Island",
  "Northern Mariana Islands",
  "Norway",
  "Oman",
  "Pakistan",
  "Palau",
  "Palestinian Territory",
  "Panama",
  "Papua New Guinea",
  "Paraguay",
  "Peru",
  "Philippines",
  "Pitcairn Islands",
  "Poland",
  "Portugal",
  "Puerto Rico",
  "Qatar",
  "Reunion",
  "Romania",
  "Russian Federation",
  "Rwanda",
  "Saint Barthelemy",
  "Saint Helena",
  "Saint Kitts and Nevis",
  "Saint Lucia",
  "Saint Martin",
  "Saint Pierre and Miquelon",
  "Saint Vincent and the Grenadines",
  "Samoa",
  "San Marino",
  "Sao Tome and Principe",
  "Saudi Arabia",
  "Senegal",
  "Serbia",
  "Seychelles",
  "Sierra Leone",
  "Singapore",
  "Slovakia (Slovak Republic)",
  "Slovenia",
  "Solomon Islands",
  "Somalia",
  "South Africa",
  "South Georgia and the South Sandwich Islands",
  "Spain",
  "Sri Lanka",
  "Sudan",
  "Suriname",
  "Svalbard & Jan Mayen Islands",
  "Swaziland",
  "Sweden",
  "Switzerland",
  "Syrian Arab Republic",
  "Taiwan",
  "Tajikistan",
  "Tanzania",
  "Thailand",
  "Timor-Leste",
  "Togo",
  "Tokelau",
  "Tonga",
  "Trinidad and Tobago",
  "Tunisia",
  "Turkey",
  "Turkmenistan",
  "Turks and Caicos Islands",
  "Tuvalu",
  "Uganda",
  "Ukraine",
  "United Arab Emirates",
  "United Kingdom",
  "United States of America",
  "United States Minor Outlying Islands",
  "Uruguay",
  "Uzbekistan",
  "Vanuatu",
  "Venezuela",
  "Vietnam",
  "Virgin Islands, British",
  "Virgin Islands, U.S.",
  "Wallis and Futuna",
  "Western Sahara",
  "Yemen",
  "Zambia",
  "Zimbabwe"
];

},{}],134:[function(require,module,exports){
module["exports"] = [
  "AD",
  "AE",
  "AF",
  "AG",
  "AI",
  "AL",
  "AM",
  "AO",
  "AQ",
  "AR",
  "AS",
  "AT",
  "AU",
  "AW",
  "AX",
  "AZ",
  "BA",
  "BB",
  "BD",
  "BE",
  "BF",
  "BG",
  "BH",
  "BI",
  "BJ",
  "BL",
  "BM",
  "BN",
  "BO",
  "BQ",
  "BQ",
  "BR",
  "BS",
  "BT",
  "BV",
  "BW",
  "BY",
  "BZ",
  "CA",
  "CC",
  "CD",
  "CF",
  "CG",
  "CH",
  "CI",
  "CK",
  "CL",
  "CM",
  "CN",
  "CO",
  "CR",
  "CU",
  "CV",
  "CW",
  "CX",
  "CY",
  "CZ",
  "DE",
  "DJ",
  "DK",
  "DM",
  "DO",
  "DZ",
  "EC",
  "EE",
  "EG",
  "EH",
  "ER",
  "ES",
  "ET",
  "FI",
  "FJ",
  "FK",
  "FM",
  "FO",
  "FR",
  "GA",
  "GB",
  "GD",
  "GE",
  "GF",
  "GG",
  "GH",
  "GI",
  "GL",
  "GM",
  "GN",
  "GP",
  "GQ",
  "GR",
  "GS",
  "GT",
  "GU",
  "GW",
  "GY",
  "HK",
  "HM",
  "HN",
  "HR",
  "HT",
  "HU",
  "ID",
  "IE",
  "IL",
  "IM",
  "IN",
  "IO",
  "IQ",
  "IR",
  "IS",
  "IT",
  "JE",
  "JM",
  "JO",
  "JP",
  "KE",
  "KG",
  "KH",
  "KI",
  "KM",
  "KN",
  "KP",
  "KR",
  "KW",
  "KY",
  "KZ",
  "LA",
  "LB",
  "LC",
  "LI",
  "LK",
  "LR",
  "LS",
  "LT",
  "LU",
  "LV",
  "LY",
  "MA",
  "MC",
  "MD",
  "ME",
  "MF",
  "MG",
  "MH",
  "MK",
  "ML",
  "MM",
  "MN",
  "MO",
  "MP",
  "MQ",
  "MR",
  "MS",
  "MT",
  "MU",
  "MV",
  "MW",
  "MX",
  "MY",
  "MZ",
  "NA",
  "NC",
  "NE",
  "NF",
  "NG",
  "NI",
  "NL",
  "NO",
  "NP",
  "NR",
  "NU",
  "NZ",
  "OM",
  "PA",
  "PE",
  "PF",
  "PG",
  "PH",
  "PK",
  "PL",
  "PM",
  "PN",
  "PR",
  "PS",
  "PT",
  "PW",
  "PY",
  "QA",
  "RE",
  "RO",
  "RS",
  "RU",
  "RW",
  "SA",
  "SB",
  "SC",
  "SD",
  "SE",
  "SG",
  "SH",
  "SI",
  "SJ",
  "SK",
  "SL",
  "SM",
  "SN",
  "SO",
  "SR",
  "SS",
  "ST",
  "SV",
  "SX",
  "SY",
  "SZ",
  "TC",
  "TD",
  "TF",
  "TG",
  "TH",
  "TJ",
  "TK",
  "TL",
  "TM",
  "TN",
  "TO",
  "TR",
  "TT",
  "TV",
  "TW",
  "TZ",
  "UA",
  "UG",
  "UM",
  "US",
  "UY",
  "UZ",
  "VA",
  "VC",
  "VE",
  "VG",
  "VI",
  "VN",
  "VU",
  "WF",
  "WS",
  "YE",
  "YT",
  "ZA",
  "ZM",
  "ZW"
];

},{}],135:[function(require,module,exports){
module["exports"] = [
  "Avon",
  "Bedfordshire",
  "Berkshire",
  "Borders",
  "Buckinghamshire",
  "Cambridgeshire"
];

},{}],136:[function(require,module,exports){
module["exports"] = [
  "United States of America"
];

},{}],137:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.county = require("./county");
address.country = require("./country");
address.country_code = require("./country_code");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.postcode_by_state = require("./postcode_by_state");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.time_zone = require("./time_zone");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":129,"./city":130,"./city_prefix":131,"./city_suffix":132,"./country":133,"./country_code":134,"./county":135,"./default_country":136,"./postcode":138,"./postcode_by_state":139,"./secondary_address":140,"./state":141,"./state_abbr":142,"./street_address":143,"./street_name":144,"./street_suffix":145,"./time_zone":146}],138:[function(require,module,exports){
module["exports"] = [
  "#####",
  "#####-####"
];

},{}],139:[function(require,module,exports){
arguments[4][138][0].apply(exports,arguments)
},{"dup":138}],140:[function(require,module,exports){
module["exports"] = [
  "Apt. ###",
  "Suite ###"
];

},{}],141:[function(require,module,exports){
module["exports"] = [
  "Alabama",
  "Alaska",
  "Arizona",
  "Arkansas",
  "California",
  "Colorado",
  "Connecticut",
  "Delaware",
  "Florida",
  "Georgia",
  "Hawaii",
  "Idaho",
  "Illinois",
  "Indiana",
  "Iowa",
  "Kansas",
  "Kentucky",
  "Louisiana",
  "Maine",
  "Maryland",
  "Massachusetts",
  "Michigan",
  "Minnesota",
  "Mississippi",
  "Missouri",
  "Montana",
  "Nebraska",
  "Nevada",
  "New Hampshire",
  "New Jersey",
  "New Mexico",
  "New York",
  "North Carolina",
  "North Dakota",
  "Ohio",
  "Oklahoma",
  "Oregon",
  "Pennsylvania",
  "Rhode Island",
  "South Carolina",
  "South Dakota",
  "Tennessee",
  "Texas",
  "Utah",
  "Vermont",
  "Virginia",
  "Washington",
  "West Virginia",
  "Wisconsin",
  "Wyoming"
];

},{}],142:[function(require,module,exports){
module["exports"] = [
  "AL",
  "AK",
  "AZ",
  "AR",
  "CA",
  "CO",
  "CT",
  "DE",
  "FL",
  "GA",
  "HI",
  "ID",
  "IL",
  "IN",
  "IA",
  "KS",
  "KY",
  "LA",
  "ME",
  "MD",
  "MA",
  "MI",
  "MN",
  "MS",
  "MO",
  "MT",
  "NE",
  "NV",
  "NH",
  "NJ",
  "NM",
  "NY",
  "NC",
  "ND",
  "OH",
  "OK",
  "OR",
  "PA",
  "RI",
  "SC",
  "SD",
  "TN",
  "TX",
  "UT",
  "VT",
  "VA",
  "WA",
  "WV",
  "WI",
  "WY"
];

},{}],143:[function(require,module,exports){
module["exports"] = [
  "#{building_number} #{street_name}"
];

},{}],144:[function(require,module,exports){
module["exports"] = [
  "#{Name.first_name} #{street_suffix}",
  "#{Name.last_name} #{street_suffix}"
];

},{}],145:[function(require,module,exports){
module["exports"] = [
  "Alley",
  "Avenue",
  "Branch",
  "Bridge",
  "Brook",
  "Brooks",
  "Burg",
  "Burgs",
  "Bypass",
  "Camp",
  "Canyon",
  "Cape",
  "Causeway",
  "Center",
  "Centers",
  "Circle",
  "Circles",
  "Cliff",
  "Cliffs",
  "Club",
  "Common",
  "Corner",
  "Corners",
  "Course",
  "Court",
  "Courts",
  "Cove",
  "Coves",
  "Creek",
  "Crescent",
  "Crest",
  "Crossing",
  "Crossroad",
  "Curve",
  "Dale",
  "Dam",
  "Divide",
  "Drive",
  "Drive",
  "Drives",
  "Estate",
  "Estates",
  "Expressway",
  "Extension",
  "Extensions",
  "Fall",
  "Falls",
  "Ferry",
  "Field",
  "Fields",
  "Flat",
  "Flats",
  "Ford",
  "Fords",
  "Forest",
  "Forge",
  "Forges",
  "Fork",
  "Forks",
  "Fort",
  "Freeway",
  "Garden",
  "Gardens",
  "Gateway",
  "Glen",
  "Glens",
  "Green",
  "Greens",
  "Grove",
  "Groves",
  "Harbor",
  "Harbors",
  "Haven",
  "Heights",
  "Highway",
  "Hill",
  "Hills",
  "Hollow",
  "Inlet",
  "Inlet",
  "Island",
  "Island",
  "Islands",
  "Islands",
  "Isle",
  "Isle",
  "Junction",
  "Junctions",
  "Key",
  "Keys",
  "Knoll",
  "Knolls",
  "Lake",
  "Lakes",
  "Land",
  "Landing",
  "Lane",
  "Light",
  "Lights",
  "Loaf",
  "Lock",
  "Locks",
  "Locks",
  "Lodge",
  "Lodge",
  "Loop",
  "Mall",
  "Manor",
  "Manors",
  "Meadow",
  "Meadows",
  "Mews",
  "Mill",
  "Mills",
  "Mission",
  "Mission",
  "Motorway",
  "Mount",
  "Mountain",
  "Mountain",
  "Mountains",
  "Mountains",
  "Neck",
  "Orchard",
  "Oval",
  "Overpass",
  "Park",
  "Parks",
  "Parkway",
  "Parkways",
  "Pass",
  "Passage",
  "Path",
  "Pike",
  "Pine",
  "Pines",
  "Place",
  "Plain",
  "Plains",
  "Plains",
  "Plaza",
  "Plaza",
  "Point",
  "Points",
  "Port",
  "Port",
  "Ports",
  "Ports",
  "Prairie",
  "Prairie",
  "Radial",
  "Ramp",
  "Ranch",
  "Rapid",
  "Rapids",
  "Rest",
  "Ridge",
  "Ridges",
  "River",
  "Road",
  "Road",
  "Roads",
  "Roads",
  "Route",
  "Row",
  "Rue",
  "Run",
  "Shoal",
  "Shoals",
  "Shore",
  "Shores",
  "Skyway",
  "Spring",
  "Springs",
  "Springs",
  "Spur",
  "Spurs",
  "Square",
  "Square",
  "Squares",
  "Squares",
  "Station",
  "Station",
  "Stravenue",
  "Stravenue",
  "Stream",
  "Stream",
  "Street",
  "Street",
  "Streets",
  "Summit",
  "Summit",
  "Terrace",
  "Throughway",
  "Trace",
  "Track",
  "Trafficway",
  "Trail",
  "Trail",
  "Tunnel",
  "Tunnel",
  "Turnpike",
  "Turnpike",
  "Underpass",
  "Union",
  "Unions",
  "Valley",
  "Valleys",
  "Via",
  "Viaduct",
  "View",
  "Views",
  "Village",
  "Village",
  "Villages",
  "Ville",
  "Vista",
  "Vista",
  "Walk",
  "Walks",
  "Wall",
  "Way",
  "Ways",
  "Well",
  "Wells"
];

},{}],146:[function(require,module,exports){
module["exports"] = [
  "Pacific/Midway",
  "Pacific/Pago_Pago",
  "Pacific/Honolulu",
  "America/Juneau",
  "America/Los_Angeles",
  "America/Tijuana",
  "America/Denver",
  "America/Phoenix",
  "America/Chihuahua",
  "America/Mazatlan",
  "America/Chicago",
  "America/Regina",
  "America/Mexico_City",
  "America/Mexico_City",
  "America/Monterrey",
  "America/Guatemala",
  "America/New_York",
  "America/Indiana/Indianapolis",
  "America/Bogota",
  "America/Lima",
  "America/Lima",
  "America/Halifax",
  "America/Caracas",
  "America/La_Paz",
  "America/Santiago",
  "America/St_Johns",
  "America/Sao_Paulo",
  "America/Argentina/Buenos_Aires",
  "America/Guyana",
  "America/Godthab",
  "Atlantic/South_Georgia",
  "Atlantic/Azores",
  "Atlantic/Cape_Verde",
  "Europe/Dublin",
  "Europe/London",
  "Europe/Lisbon",
  "Europe/London",
  "Africa/Casablanca",
  "Africa/Monrovia",
  "Etc/UTC",
  "Europe/Belgrade",
  "Europe/Bratislava",
  "Europe/Budapest",
  "Europe/Ljubljana",
  "Europe/Prague",
  "Europe/Sarajevo",
  "Europe/Skopje",
  "Europe/Warsaw",
  "Europe/Zagreb",
  "Europe/Brussels",
  "Europe/Copenhagen",
  "Europe/Madrid",
  "Europe/Paris",
  "Europe/Amsterdam",
  "Europe/Berlin",
  "Europe/Berlin",
  "Europe/Rome",
  "Europe/Stockholm",
  "Europe/Vienna",
  "Africa/Algiers",
  "Europe/Bucharest",
  "Africa/Cairo",
  "Europe/Helsinki",
  "Europe/Kiev",
  "Europe/Riga",
  "Europe/Sofia",
  "Europe/Tallinn",
  "Europe/Vilnius",
  "Europe/Athens",
  "Europe/Istanbul",
  "Europe/Minsk",
  "Asia/Jerusalem",
  "Africa/Harare",
  "Africa/Johannesburg",
  "Europe/Moscow",
  "Europe/Moscow",
  "Europe/Moscow",
  "Asia/Kuwait",
  "Asia/Riyadh",
  "Africa/Nairobi",
  "Asia/Baghdad",
  "Asia/Tehran",
  "Asia/Muscat",
  "Asia/Muscat",
  "Asia/Baku",
  "Asia/Tbilisi",
  "Asia/Yerevan",
  "Asia/Kabul",
  "Asia/Yekaterinburg",
  "Asia/Karachi",
  "Asia/Karachi",
  "Asia/Tashkent",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kathmandu",
  "Asia/Dhaka",
  "Asia/Dhaka",
  "Asia/Colombo",
  "Asia/Almaty",
  "Asia/Novosibirsk",
  "Asia/Rangoon",
  "Asia/Bangkok",
  "Asia/Bangkok",
  "Asia/Jakarta",
  "Asia/Krasnoyarsk",
  "Asia/Shanghai",
  "Asia/Chongqing",
  "Asia/Hong_Kong",
  "Asia/Urumqi",
  "Asia/Kuala_Lumpur",
  "Asia/Singapore",
  "Asia/Taipei",
  "Australia/Perth",
  "Asia/Irkutsk",
  "Asia/Ulaanbaatar",
  "Asia/Seoul",
  "Asia/Tokyo",
  "Asia/Tokyo",
  "Asia/Tokyo",
  "Asia/Yakutsk",
  "Australia/Darwin",
  "Australia/Adelaide",
  "Australia/Melbourne",
  "Australia/Melbourne",
  "Australia/Sydney",
  "Australia/Brisbane",
  "Australia/Hobart",
  "Asia/Vladivostok",
  "Pacific/Guam",
  "Pacific/Port_Moresby",
  "Asia/Magadan",
  "Asia/Magadan",
  "Pacific/Noumea",
  "Pacific/Fiji",
  "Asia/Kamchatka",
  "Pacific/Majuro",
  "Pacific/Auckland",
  "Pacific/Auckland",
  "Pacific/Tongatapu",
  "Pacific/Fakaofo",
  "Pacific/Apia"
];

},{}],147:[function(require,module,exports){
module["exports"] = [
  "#{Name.name}",
  "#{Company.name}"
];

},{}],148:[function(require,module,exports){
var app = {};
module['exports'] = app;
app.name = require("./name");
app.version = require("./version");
app.author = require("./author");

},{"./author":147,"./name":149,"./version":150}],149:[function(require,module,exports){
module["exports"] = [
  "Redhold",
  "Treeflex",
  "Trippledex",
  "Kanlam",
  "Bigtax",
  "Daltfresh",
  "Toughjoyfax",
  "Mat Lam Tam",
  "Otcom",
  "Tres-Zap",
  "Y-Solowarm",
  "Tresom",
  "Voltsillam",
  "Biodex",
  "Greenlam",
  "Viva",
  "Matsoft",
  "Temp",
  "Zoolab",
  "Subin",
  "Rank",
  "Job",
  "Stringtough",
  "Tin",
  "It",
  "Home Ing",
  "Zamit",
  "Sonsing",
  "Konklab",
  "Alpha",
  "Latlux",
  "Voyatouch",
  "Alphazap",
  "Holdlamis",
  "Zaam-Dox",
  "Sub-Ex",
  "Quo Lux",
  "Bamity",
  "Ventosanzap",
  "Lotstring",
  "Hatity",
  "Tempsoft",
  "Overhold",
  "Fixflex",
  "Konklux",
  "Zontrax",
  "Tampflex",
  "Span",
  "Namfix",
  "Transcof",
  "Stim",
  "Fix San",
  "Sonair",
  "Stronghold",
  "Fintone",
  "Y-find",
  "Opela",
  "Lotlux",
  "Ronstring",
  "Zathin",
  "Duobam",
  "Keylex"
];

},{}],150:[function(require,module,exports){
module["exports"] = [
  "0.#.#",
  "0.##",
  "#.##",
  "#.#",
  "#.#.#"
];

},{}],151:[function(require,module,exports){
module["exports"] = [
  "2011-10-12",
  "2012-11-12",
  "2015-11-11",
  "2013-9-12"
];

},{}],152:[function(require,module,exports){
module["exports"] = [
  "1234-2121-1221-1211",
  "1212-1221-1121-1234",
  "1211-1221-1234-2201",
  "1228-1221-1221-1431"
];

},{}],153:[function(require,module,exports){
module["exports"] = [
  "visa",
  "mastercard",
  "americanexpress",
  "discover"
];

},{}],154:[function(require,module,exports){
var business = {};
module['exports'] = business;
business.credit_card_numbers = require("./credit_card_numbers");
business.credit_card_expiry_dates = require("./credit_card_expiry_dates");
business.credit_card_types = require("./credit_card_types");

},{"./credit_card_expiry_dates":151,"./credit_card_numbers":152,"./credit_card_types":153}],155:[function(require,module,exports){
module["exports"] = [
  "###-###-####",
  "(###) ###-####",
  "1-###-###-####",
  "###.###.####"
];

},{}],156:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"./formats":155,"dup":67}],157:[function(require,module,exports){
module["exports"] = [
  "red",
  "green",
  "blue",
  "yellow",
  "purple",
  "mint green",
  "teal",
  "white",
  "black",
  "orange",
  "pink",
  "grey",
  "maroon",
  "violet",
  "turquoise",
  "tan",
  "sky blue",
  "salmon",
  "plum",
  "orchid",
  "olive",
  "magenta",
  "lime",
  "ivory",
  "indigo",
  "gold",
  "fuchsia",
  "cyan",
  "azure",
  "lavender",
  "silver"
];

},{}],158:[function(require,module,exports){
module["exports"] = [
  "Books",
  "Movies",
  "Music",
  "Games",
  "Electronics",
  "Computers",
  "Home",
  "Garden",
  "Tools",
  "Grocery",
  "Health",
  "Beauty",
  "Toys",
  "Kids",
  "Baby",
  "Clothing",
  "Shoes",
  "Jewelery",
  "Sports",
  "Outdoors",
  "Automotive",
  "Industrial"
];

},{}],159:[function(require,module,exports){
var commerce = {};
module['exports'] = commerce;
commerce.color = require("./color");
commerce.department = require("./department");
commerce.product_name = require("./product_name");

},{"./color":157,"./department":158,"./product_name":160}],160:[function(require,module,exports){
module["exports"] = {
  "adjective": [
    "Small",
    "Ergonomic",
    "Rustic",
    "Intelligent",
    "Gorgeous",
    "Incredible",
    "Fantastic",
    "Practical",
    "Sleek",
    "Awesome",
    "Generic",
    "Handcrafted",
    "Handmade",
    "Licensed",
    "Refined",
    "Unbranded",
    "Tasty"
  ],
  "material": [
    "Steel",
    "Wooden",
    "Concrete",
    "Plastic",
    "Cotton",
    "Granite",
    "Rubber",
    "Metal",
    "Soft",
    "Fresh",
    "Frozen"
  ],
  "product": [
    "Chair",
    "Car",
    "Computer",
    "Keyboard",
    "Mouse",
    "Bike",
    "Ball",
    "Gloves",
    "Pants",
    "Shirt",
    "Table",
    "Shoes",
    "Hat",
    "Towels",
    "Soap",
    "Tuna",
    "Chicken",
    "Fish",
    "Cheese",
    "Bacon",
    "Pizza",
    "Salad",
    "Sausages",
    "Chips"
  ]
};

},{}],161:[function(require,module,exports){
module["exports"] = [
  "Adaptive",
  "Advanced",
  "Ameliorated",
  "Assimilated",
  "Automated",
  "Balanced",
  "Business-focused",
  "Centralized",
  "Cloned",
  "Compatible",
  "Configurable",
  "Cross-group",
  "Cross-platform",
  "Customer-focused",
  "Customizable",
  "Decentralized",
  "De-engineered",
  "Devolved",
  "Digitized",
  "Distributed",
  "Diverse",
  "Down-sized",
  "Enhanced",
  "Enterprise-wide",
  "Ergonomic",
  "Exclusive",
  "Expanded",
  "Extended",
  "Face to face",
  "Focused",
  "Front-line",
  "Fully-configurable",
  "Function-based",
  "Fundamental",
  "Future-proofed",
  "Grass-roots",
  "Horizontal",
  "Implemented",
  "Innovative",
  "Integrated",
  "Intuitive",
  "Inverse",
  "Managed",
  "Mandatory",
  "Monitored",
  "Multi-channelled",
  "Multi-lateral",
  "Multi-layered",
  "Multi-tiered",
  "Networked",
  "Object-based",
  "Open-architected",
  "Open-source",
  "Operative",
  "Optimized",
  "Optional",
  "Organic",
  "Organized",
  "Persevering",
  "Persistent",
  "Phased",
  "Polarised",
  "Pre-emptive",
  "Proactive",
  "Profit-focused",
  "Profound",
  "Programmable",
  "Progressive",
  "Public-key",
  "Quality-focused",
  "Reactive",
  "Realigned",
  "Re-contextualized",
  "Re-engineered",
  "Reduced",
  "Reverse-engineered",
  "Right-sized",
  "Robust",
  "Seamless",
  "Secured",
  "Self-enabling",
  "Sharable",
  "Stand-alone",
  "Streamlined",
  "Switchable",
  "Synchronised",
  "Synergistic",
  "Synergized",
  "Team-oriented",
  "Total",
  "Triple-buffered",
  "Universal",
  "Up-sized",
  "Upgradable",
  "User-centric",
  "User-friendly",
  "Versatile",
  "Virtual",
  "Visionary",
  "Vision-oriented"
];

},{}],162:[function(require,module,exports){
module["exports"] = [
  "clicks-and-mortar",
  "value-added",
  "vertical",
  "proactive",
  "robust",
  "revolutionary",
  "scalable",
  "leading-edge",
  "innovative",
  "intuitive",
  "strategic",
  "e-business",
  "mission-critical",
  "sticky",
  "one-to-one",
  "24/7",
  "end-to-end",
  "global",
  "B2B",
  "B2C",
  "granular",
  "frictionless",
  "virtual",
  "viral",
  "dynamic",
  "24/365",
  "best-of-breed",
  "killer",
  "magnetic",
  "bleeding-edge",
  "web-enabled",
  "interactive",
  "dot-com",
  "sexy",
  "back-end",
  "real-time",
  "efficient",
  "front-end",
  "distributed",
  "seamless",
  "extensible",
  "turn-key",
  "world-class",
  "open-source",
  "cross-platform",
  "cross-media",
  "synergistic",
  "bricks-and-clicks",
  "out-of-the-box",
  "enterprise",
  "integrated",
  "impactful",
  "wireless",
  "transparent",
  "next-generation",
  "cutting-edge",
  "user-centric",
  "visionary",
  "customized",
  "ubiquitous",
  "plug-and-play",
  "collaborative",
  "compelling",
  "holistic",
  "rich"
];

},{}],163:[function(require,module,exports){
module["exports"] = [
  "synergies",
  "web-readiness",
  "paradigms",
  "markets",
  "partnerships",
  "infrastructures",
  "platforms",
  "initiatives",
  "channels",
  "eyeballs",
  "communities",
  "ROI",
  "solutions",
  "e-tailers",
  "e-services",
  "action-items",
  "portals",
  "niches",
  "technologies",
  "content",
  "vortals",
  "supply-chains",
  "convergence",
  "relationships",
  "architectures",
  "interfaces",
  "e-markets",
  "e-commerce",
  "systems",
  "bandwidth",
  "infomediaries",
  "models",
  "mindshare",
  "deliverables",
  "users",
  "schemas",
  "networks",
  "applications",
  "metrics",
  "e-business",
  "functionalities",
  "experiences",
  "web services",
  "methodologies"
];

},{}],164:[function(require,module,exports){
module["exports"] = [
  "implement",
  "utilize",
  "integrate",
  "streamline",
  "optimize",
  "evolve",
  "transform",
  "embrace",
  "enable",
  "orchestrate",
  "leverage",
  "reinvent",
  "aggregate",
  "architect",
  "enhance",
  "incentivize",
  "morph",
  "empower",
  "envisioneer",
  "monetize",
  "harness",
  "facilitate",
  "seize",
  "disintermediate",
  "synergize",
  "strategize",
  "deploy",
  "brand",
  "grow",
  "target",
  "syndicate",
  "synthesize",
  "deliver",
  "mesh",
  "incubate",
  "engage",
  "maximize",
  "benchmark",
  "expedite",
  "reintermediate",
  "whiteboard",
  "visualize",
  "repurpose",
  "innovate",
  "scale",
  "unleash",
  "drive",
  "extend",
  "engineer",
  "revolutionize",
  "generate",
  "exploit",
  "transition",
  "e-enable",
  "iterate",
  "cultivate",
  "matrix",
  "productize",
  "redefine",
  "recontextualize"
];

},{}],165:[function(require,module,exports){
module["exports"] = [
  "24 hour",
  "24/7",
  "3rd generation",
  "4th generation",
  "5th generation",
  "6th generation",
  "actuating",
  "analyzing",
  "asymmetric",
  "asynchronous",
  "attitude-oriented",
  "background",
  "bandwidth-monitored",
  "bi-directional",
  "bifurcated",
  "bottom-line",
  "clear-thinking",
  "client-driven",
  "client-server",
  "coherent",
  "cohesive",
  "composite",
  "context-sensitive",
  "contextually-based",
  "content-based",
  "dedicated",
  "demand-driven",
  "didactic",
  "directional",
  "discrete",
  "disintermediate",
  "dynamic",
  "eco-centric",
  "empowering",
  "encompassing",
  "even-keeled",
  "executive",
  "explicit",
  "exuding",
  "fault-tolerant",
  "foreground",
  "fresh-thinking",
  "full-range",
  "global",
  "grid-enabled",
  "heuristic",
  "high-level",
  "holistic",
  "homogeneous",
  "human-resource",
  "hybrid",
  "impactful",
  "incremental",
  "intangible",
  "interactive",
  "intermediate",
  "leading edge",
  "local",
  "logistical",
  "maximized",
  "methodical",
  "mission-critical",
  "mobile",
  "modular",
  "motivating",
  "multimedia",
  "multi-state",
  "multi-tasking",
  "national",
  "needs-based",
  "neutral",
  "next generation",
  "non-volatile",
  "object-oriented",
  "optimal",
  "optimizing",
  "radical",
  "real-time",
  "reciprocal",
  "regional",
  "responsive",
  "scalable",
  "secondary",
  "solution-oriented",
  "stable",
  "static",
  "systematic",
  "systemic",
  "system-worthy",
  "tangible",
  "tertiary",
  "transitional",
  "uniform",
  "upward-trending",
  "user-facing",
  "value-added",
  "web-enabled",
  "well-modulated",
  "zero administration",
  "zero defect",
  "zero tolerance"
];

},{}],166:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.adjective = require("./adjective");
company.descriptor = require("./descriptor");
company.noun = require("./noun");
company.bs_verb = require("./bs_verb");
company.bs_adjective = require("./bs_adjective");
company.bs_noun = require("./bs_noun");
company.name = require("./name");

},{"./adjective":161,"./bs_adjective":162,"./bs_noun":163,"./bs_verb":164,"./descriptor":165,"./name":167,"./noun":168,"./suffix":169}],167:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name}-#{Name.last_name}",
  "#{Name.last_name}, #{Name.last_name} and #{Name.last_name}"
];

},{}],168:[function(require,module,exports){
module["exports"] = [
  "ability",
  "access",
  "adapter",
  "algorithm",
  "alliance",
  "analyzer",
  "application",
  "approach",
  "architecture",
  "archive",
  "artificial intelligence",
  "array",
  "attitude",
  "benchmark",
  "budgetary management",
  "capability",
  "capacity",
  "challenge",
  "circuit",
  "collaboration",
  "complexity",
  "concept",
  "conglomeration",
  "contingency",
  "core",
  "customer loyalty",
  "database",
  "data-warehouse",
  "definition",
  "emulation",
  "encoding",
  "encryption",
  "extranet",
  "firmware",
  "flexibility",
  "focus group",
  "forecast",
  "frame",
  "framework",
  "function",
  "functionalities",
  "Graphic Interface",
  "groupware",
  "Graphical User Interface",
  "hardware",
  "help-desk",
  "hierarchy",
  "hub",
  "implementation",
  "info-mediaries",
  "infrastructure",
  "initiative",
  "installation",
  "instruction set",
  "interface",
  "internet solution",
  "intranet",
  "knowledge user",
  "knowledge base",
  "local area network",
  "leverage",
  "matrices",
  "matrix",
  "methodology",
  "middleware",
  "migration",
  "model",
  "moderator",
  "monitoring",
  "moratorium",
  "neural-net",
  "open architecture",
  "open system",
  "orchestration",
  "paradigm",
  "parallelism",
  "policy",
  "portal",
  "pricing structure",
  "process improvement",
  "product",
  "productivity",
  "project",
  "projection",
  "protocol",
  "secured line",
  "service-desk",
  "software",
  "solution",
  "standardization",
  "strategy",
  "structure",
  "success",
  "superstructure",
  "support",
  "synergy",
  "system engine",
  "task-force",
  "throughput",
  "time-frame",
  "toolset",
  "utilisation",
  "website",
  "workforce"
];

},{}],169:[function(require,module,exports){
module["exports"] = [
  "Inc",
  "and Sons",
  "LLC",
  "Group"
];

},{}],170:[function(require,module,exports){
module["exports"] = [
  "/34##-######-####L/",
  "/37##-######-####L/"
];

},{}],171:[function(require,module,exports){
module["exports"] = [
  "/30[0-5]#-######-###L/",
  "/368#-######-###L/"
];

},{}],172:[function(require,module,exports){
module["exports"] = [
  "/6011-####-####-###L/",
  "/65##-####-####-###L/",
  "/64[4-9]#-####-####-###L/",
  "/6011-62##-####-####-###L/",
  "/65##-62##-####-####-###L/",
  "/64[4-9]#-62##-####-####-###L/"
];

},{}],173:[function(require,module,exports){
var credit_card = {};
module['exports'] = credit_card;
credit_card.visa = require("./visa");
credit_card.mastercard = require("./mastercard");
credit_card.discover = require("./discover");
credit_card.american_express = require("./american_express");
credit_card.diners_club = require("./diners_club");
credit_card.jcb = require("./jcb");
credit_card.switch = require("./switch");
credit_card.solo = require("./solo");
credit_card.maestro = require("./maestro");
credit_card.laser = require("./laser");

},{"./american_express":170,"./diners_club":171,"./discover":172,"./jcb":174,"./laser":175,"./maestro":176,"./mastercard":177,"./solo":178,"./switch":179,"./visa":180}],174:[function(require,module,exports){
module["exports"] = [
  "/3528-####-####-###L/",
  "/3529-####-####-###L/",
  "/35[3-8]#-####-####-###L/"
];

},{}],175:[function(require,module,exports){
module["exports"] = [
  "/6304###########L/",
  "/6706###########L/",
  "/6771###########L/",
  "/6709###########L/",
  "/6304#########{5,6}L/",
  "/6706#########{5,6}L/",
  "/6771#########{5,6}L/",
  "/6709#########{5,6}L/"
];

},{}],176:[function(require,module,exports){
module["exports"] = [
  "/50#{9,16}L/",
  "/5[6-8]#{9,16}L/",
  "/56##{9,16}L/"
];

},{}],177:[function(require,module,exports){
module["exports"] = [
  "/5[1-5]##-####-####-###L/",
  "/6771-89##-####-###L/"
];

},{}],178:[function(require,module,exports){
module["exports"] = [
  "/6767-####-####-###L/",
  "/6767-####-####-####-#L/",
  "/6767-####-####-####-##L/"
];

},{}],179:[function(require,module,exports){
module["exports"] = [
  "/6759-####-####-###L/",
  "/6759-####-####-####-#L/",
  "/6759-####-####-####-##L/"
];

},{}],180:[function(require,module,exports){
module["exports"] = [
  "/4###########L/",
  "/4###-####-####-###L/"
];

},{}],181:[function(require,module,exports){
var date = {};
module["exports"] = date;
date.month = require("./month");
date.weekday = require("./weekday");

},{"./month":182,"./weekday":183}],182:[function(require,module,exports){
// Source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/en.xml#L1799
module["exports"] = {
  wide: [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December"
  ],
  // Property "wide_context" is optional, if not set then "wide" will be used instead
  // It is used to specify a word in context, which may differ from a stand-alone word
  wide_context: [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December"
  ],
  abbr: [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec"
  ],
  // Property "abbr_context" is optional, if not set then "abbr" will be used instead
  // It is used to specify a word in context, which may differ from a stand-alone word
  abbr_context: [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec"
  ]
};

},{}],183:[function(require,module,exports){
// Source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/en.xml#L1847
module["exports"] = {
  wide: [
    "Sunday",
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday"
  ],
  // Property "wide_context" is optional, if not set then "wide" will be used instead
  // It is used to specify a word in context, which may differ from a stand-alone word
  wide_context: [
    "Sunday",
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday"
  ],
  abbr: [
    "Sun",
    "Mon",
    "Tue",
    "Wed",
    "Thu",
    "Fri",
    "Sat"
  ],
  // Property "abbr_context" is optional, if not set then "abbr" will be used instead
  // It is used to specify a word in context, which may differ from a stand-alone word
  abbr_context: [
    "Sun",
    "Mon",
    "Tue",
    "Wed",
    "Thu",
    "Fri",
    "Sat"
  ]
};

},{}],184:[function(require,module,exports){
module["exports"] = [
  "Checking",
  "Savings",
  "Money Market",
  "Investment",
  "Home Loan",
  "Credit Card",
  "Auto Loan",
  "Personal Loan"
];

},{}],185:[function(require,module,exports){
module["exports"] = {
  "UAE Dirham": {
    "code": "AED",
    "symbol": ""
  },
  "Afghani": {
    "code": "AFN",
    "symbol": "؋"
  },
  "Lek": {
    "code": "ALL",
    "symbol": "Lek"
  },
  "Armenian Dram": {
    "code": "AMD",
    "symbol": ""
  },
  "Netherlands Antillian Guilder": {
    "code": "ANG",
    "symbol": "ƒ"
  },
  "Kwanza": {
    "code": "AOA",
    "symbol": ""
  },
  "Argentine Peso": {
    "code": "ARS",
    "symbol": "$"
  },
  "Australian Dollar": {
    "code": "AUD",
    "symbol": "$"
  },
  "Aruban Guilder": {
    "code": "AWG",
    "symbol": "ƒ"
  },
  "Azerbaijanian Manat": {
    "code": "AZN",
    "symbol": "ман"
  },
  "Convertible Marks": {
    "code": "BAM",
    "symbol": "KM"
  },
  "Barbados Dollar": {
    "code": "BBD",
    "symbol": "$"
  },
  "Taka": {
    "code": "BDT",
    "symbol": ""
  },
  "Bulgarian Lev": {
    "code": "BGN",
    "symbol": "лв"
  },
  "Bahraini Dinar": {
    "code": "BHD",
    "symbol": ""
  },
  "Burundi Franc": {
    "code": "BIF",
    "symbol": ""
  },
  "Bermudian Dollar (customarily known as Bermuda Dollar)": {
    "code": "BMD",
    "symbol": "$"
  },
  "Brunei Dollar": {
    "code": "BND",
    "symbol": "$"
  },
  "Boliviano Mvdol": {
    "code": "BOB BOV",
    "symbol": "$b"
  },
  "Brazilian Real": {
    "code": "BRL",
    "symbol": "R$"
  },
  "Bahamian Dollar": {
    "code": "BSD",
    "symbol": "$"
  },
  "Pula": {
    "code": "BWP",
    "symbol": "P"
  },
  "Belarussian Ruble": {
    "code": "BYR",
    "symbol": "p."
  },
  "Belize Dollar": {
    "code": "BZD",
    "symbol": "BZ$"
  },
  "Canadian Dollar": {
    "code": "CAD",
    "symbol": "$"
  },
  "Congolese Franc": {
    "code": "CDF",
    "symbol": ""
  },
  "Swiss Franc": {
    "code": "CHF",
    "symbol": "CHF"
  },
  "Chilean Peso Unidades de fomento": {
    "code": "CLP CLF",
    "symbol": "$"
  },
  "Yuan Renminbi": {
    "code": "CNY",
    "symbol": "¥"
  },
  "Colombian Peso Unidad de Valor Real": {
    "code": "COP COU",
    "symbol": "$"
  },
  "Costa Rican Colon": {
    "code": "CRC",
    "symbol": "₡"
  },
  "Cuban Peso Peso Convertible": {
    "code": "CUP CUC",
    "symbol": "₱"
  },
  "Cape Verde Escudo": {
    "code": "CVE",
    "symbol": ""
  },
  "Czech Koruna": {
    "code": "CZK",
    "symbol": "Kč"
  },
  "Djibouti Franc": {
    "code": "DJF",
    "symbol": ""
  },
  "Danish Krone": {
    "code": "DKK",
    "symbol": "kr"
  },
  "Dominican Peso": {
    "code": "DOP",
    "symbol": "RD$"
  },
  "Algerian Dinar": {
    "code": "DZD",
    "symbol": ""
  },
  "Kroon": {
    "code": "EEK",
    "symbol": ""
  },
  "Egyptian Pound": {
    "code": "EGP",
    "symbol": "£"
  },
  "Nakfa": {
    "code": "ERN",
    "symbol": ""
  },
  "Ethiopian Birr": {
    "code": "ETB",
    "symbol": ""
  },
  "Euro": {
    "code": "EUR",
    "symbol": "€"
  },
  "Fiji Dollar": {
    "code": "FJD",
    "symbol": "$"
  },
  "Falkland Islands Pound": {
    "code": "FKP",
    "symbol": "£"
  },
  "Pound Sterling": {
    "code": "GBP",
    "symbol": "£"
  },
  "Lari": {
    "code": "GEL",
    "symbol": ""
  },
  "Cedi": {
    "code": "GHS",
    "symbol": ""
  },
  "Gibraltar Pound": {
    "code": "GIP",
    "symbol": "£"
  },
  "Dalasi": {
    "code": "GMD",
    "symbol": ""
  },
  "Guinea Franc": {
    "code": "GNF",
    "symbol": ""
  },
  "Quetzal": {
    "code": "GTQ",
    "symbol": "Q"
  },
  "Guyana Dollar": {
    "code": "GYD",
    "symbol": "$"
  },
  "Hong Kong Dollar": {
    "code": "HKD",
    "symbol": "$"
  },
  "Lempira": {
    "code": "HNL",
    "symbol": "L"
  },
  "Croatian Kuna": {
    "code": "HRK",
    "symbol": "kn"
  },
  "Gourde US Dollar": {
    "code": "HTG USD",
    "symbol": ""
  },
  "Forint": {
    "code": "HUF",
    "symbol": "Ft"
  },
  "Rupiah": {
    "code": "IDR",
    "symbol": "Rp"
  },
  "New Israeli Sheqel": {
    "code": "ILS",
    "symbol": "₪"
  },
  "Indian Rupee": {
    "code": "INR",
    "symbol": ""
  },
  "Indian Rupee Ngultrum": {
    "code": "INR BTN",
    "symbol": ""
  },
  "Iraqi Dinar": {
    "code": "IQD",
    "symbol": ""
  },
  "Iranian Rial": {
    "code": "IRR",
    "symbol": "﷼"
  },
  "Iceland Krona": {
    "code": "ISK",
    "symbol": "kr"
  },
  "Jamaican Dollar": {
    "code": "JMD",
    "symbol": "J$"
  },
  "Jordanian Dinar": {
    "code": "JOD",
    "symbol": ""
  },
  "Yen": {
    "code": "JPY",
    "symbol": "¥"
  },
  "Kenyan Shilling": {
    "code": "KES",
    "symbol": ""
  },
  "Som": {
    "code": "KGS",
    "symbol": "лв"
  },
  "Riel": {
    "code": "KHR",
    "symbol": "៛"
  },
  "Comoro Franc": {
    "code": "KMF",
    "symbol": ""
  },
  "North Korean Won": {
    "code": "KPW",
    "symbol": "₩"
  },
  "Won": {
    "code": "KRW",
    "symbol": "₩"
  },
  "Kuwaiti Dinar": {
    "code": "KWD",
    "symbol": ""
  },
  "Cayman Islands Dollar": {
    "code": "KYD",
    "symbol": "$"
  },
  "Tenge": {
    "code": "KZT",
    "symbol": "лв"
  },
  "Kip": {
    "code": "LAK",
    "symbol": "₭"
  },
  "Lebanese Pound": {
    "code": "LBP",
    "symbol": "£"
  },
  "Sri Lanka Rupee": {
    "code": "LKR",
    "symbol": "₨"
  },
  "Liberian Dollar": {
    "code": "LRD",
    "symbol": "$"
  },
  "Lithuanian Litas": {
    "code": "LTL",
    "symbol": "Lt"
  },
  "Latvian Lats": {
    "code": "LVL",
    "symbol": "Ls"
  },
  "Libyan Dinar": {
    "code": "LYD",
    "symbol": ""
  },
  "Moroccan Dirham": {
    "code": "MAD",
    "symbol": ""
  },
  "Moldovan Leu": {
    "code": "MDL",
    "symbol": ""
  },
  "Malagasy Ariary": {
    "code": "MGA",
    "symbol": ""
  },
  "Denar": {
    "code": "MKD",
    "symbol": "ден"
  },
  "Kyat": {
    "code": "MMK",
    "symbol": ""
  },
  "Tugrik": {
    "code": "MNT",
    "symbol": "₮"
  },
  "Pataca": {
    "code": "MOP",
    "symbol": ""
  },
  "Ouguiya": {
    "code": "MRO",
    "symbol": ""
  },
  "Mauritius Rupee": {
    "code": "MUR",
    "symbol": "₨"
  },
  "Rufiyaa": {
    "code": "MVR",
    "symbol": ""
  },
  "Kwacha": {
    "code": "MWK",
    "symbol": ""
  },
  "Mexican Peso Mexican Unidad de Inversion (UDI)": {
    "code": "MXN MXV",
    "symbol": "$"
  },
  "Malaysian Ringgit": {
    "code": "MYR",
    "symbol": "RM"
  },
  "Metical": {
    "code": "MZN",
    "symbol": "MT"
  },
  "Naira": {
    "code": "NGN",
    "symbol": "₦"
  },
  "Cordoba Oro": {
    "code": "NIO",
    "symbol": "C$"
  },
  "Norwegian Krone": {
    "code": "NOK",
    "symbol": "kr"
  },
  "Nepalese Rupee": {
    "code": "NPR",
    "symbol": "₨"
  },
  "New Zealand Dollar": {
    "code": "NZD",
    "symbol": "$"
  },
  "Rial Omani": {
    "code": "OMR",
    "symbol": "﷼"
  },
  "Balboa US Dollar": {
    "code": "PAB USD",
    "symbol": "B/."
  },
  "Nuevo Sol": {
    "code": "PEN",
    "symbol": "S/."
  },
  "Kina": {
    "code": "PGK",
    "symbol": ""
  },
  "Philippine Peso": {
    "code": "PHP",
    "symbol": "Php"
  },
  "Pakistan Rupee": {
    "code": "PKR",
    "symbol": "₨"
  },
  "Zloty": {
    "code": "PLN",
    "symbol": "zł"
  },
  "Guarani": {
    "code": "PYG",
    "symbol": "Gs"
  },
  "Qatari Rial": {
    "code": "QAR",
    "symbol": "﷼"
  },
  "New Leu": {
    "code": "RON",
    "symbol": "lei"
  },
  "Serbian Dinar": {
    "code": "RSD",
    "symbol": "Дин."
  },
  "Russian Ruble": {
    "code": "RUB",
    "symbol": "руб"
  },
  "Rwanda Franc": {
    "code": "RWF",
    "symbol": ""
  },
  "Saudi Riyal": {
    "code": "SAR",
    "symbol": "﷼"
  },
  "Solomon Islands Dollar": {
    "code": "SBD",
    "symbol": "$"
  },
  "Seychelles Rupee": {
    "code": "SCR",
    "symbol": "₨"
  },
  "Sudanese Pound": {
    "code": "SDG",
    "symbol": ""
  },
  "Swedish Krona": {
    "code": "SEK",
    "symbol": "kr"
  },
  "Singapore Dollar": {
    "code": "SGD",
    "symbol": "$"
  },
  "Saint Helena Pound": {
    "code": "SHP",
    "symbol": "£"
  },
  "Leone": {
    "code": "SLL",
    "symbol": ""
  },
  "Somali Shilling": {
    "code": "SOS",
    "symbol": "S"
  },
  "Surinam Dollar": {
    "code": "SRD",
    "symbol": "$"
  },
  "Dobra": {
    "code": "STD",
    "symbol": ""
  },
  "El Salvador Colon US Dollar": {
    "code": "SVC USD",
    "symbol": "$"
  },
  "Syrian Pound": {
    "code": "SYP",
    "symbol": "£"
  },
  "Lilangeni": {
    "code": "SZL",
    "symbol": ""
  },
  "Baht": {
    "code": "THB",
    "symbol": "฿"
  },
  "Somoni": {
    "code": "TJS",
    "symbol": ""
  },
  "Manat": {
    "code": "TMT",
    "symbol": ""
  },
  "Tunisian Dinar": {
    "code": "TND",
    "symbol": ""
  },
  "Pa'anga": {
    "code": "TOP",
    "symbol": ""
  },
  "Turkish Lira": {
    "code": "TRY",
    "symbol": "TL"
  },
  "Trinidad and Tobago Dollar": {
    "code": "TTD",
    "symbol": "TT$"
  },
  "New Taiwan Dollar": {
    "code": "TWD",
    "symbol": "NT$"
  },
  "Tanzanian Shilling": {
    "code": "TZS",
    "symbol": ""
  },
  "Hryvnia": {
    "code": "UAH",
    "symbol": "₴"
  },
  "Uganda Shilling": {
    "code": "UGX",
    "symbol": ""
  },
  "US Dollar": {
    "code": "USD",
    "symbol": "$"
  },
  "Peso Uruguayo Uruguay Peso en Unidades Indexadas": {
    "code": "UYU UYI",
    "symbol": "$U"
  },
  "Uzbekistan Sum": {
    "code": "UZS",
    "symbol": "лв"
  },
  "Bolivar Fuerte": {
    "code": "VEF",
    "symbol": "Bs"
  },
  "Dong": {
    "code": "VND",
    "symbol": "₫"
  },
  "Vatu": {
    "code": "VUV",
    "symbol": ""
  },
  "Tala": {
    "code": "WST",
    "symbol": ""
  },
  "CFA Franc BEAC": {
    "code": "XAF",
    "symbol": ""
  },
  "Silver": {
    "code": "XAG",
    "symbol": ""
  },
  "Gold": {
    "code": "XAU",
    "symbol": ""
  },
  "Bond Markets Units European Composite Unit (EURCO)": {
    "code": "XBA",
    "symbol": ""
  },
  "European Monetary Unit (E.M.U.-6)": {
    "code": "XBB",
    "symbol": ""
  },
  "European Unit of Account 9(E.U.A.-9)": {
    "code": "XBC",
    "symbol": ""
  },
  "European Unit of Account 17(E.U.A.-17)": {
    "code": "XBD",
    "symbol": ""
  },
  "East Caribbean Dollar": {
    "code": "XCD",
    "symbol": "$"
  },
  "SDR": {
    "code": "XDR",
    "symbol": ""
  },
  "UIC-Franc": {
    "code": "XFU",
    "symbol": ""
  },
  "CFA Franc BCEAO": {
    "code": "XOF",
    "symbol": ""
  },
  "Palladium": {
    "code": "XPD",
    "symbol": ""
  },
  "CFP Franc": {
    "code": "XPF",
    "symbol": ""
  },
  "Platinum": {
    "code": "XPT",
    "symbol": ""
  },
  "Codes specifically reserved for testing purposes": {
    "code": "XTS",
    "symbol": ""
  },
  "Yemeni Rial": {
    "code": "YER",
    "symbol": "﷼"
  },
  "Rand": {
    "code": "ZAR",
    "symbol": "R"
  },
  "Rand Loti": {
    "code": "ZAR LSL",
    "symbol": ""
  },
  "Rand Namibia Dollar": {
    "code": "ZAR NAD",
    "symbol": ""
  },
  "Zambian Kwacha": {
    "code": "ZMK",
    "symbol": ""
  },
  "Zimbabwe Dollar": {
    "code": "ZWL",
    "symbol": ""
  }
};

},{}],186:[function(require,module,exports){
var finance = {};
module['exports'] = finance;
finance.account_type = require("./account_type");
finance.transaction_type = require("./transaction_type");
finance.currency = require("./currency");

},{"./account_type":184,"./currency":185,"./transaction_type":187}],187:[function(require,module,exports){
module["exports"] = [
  "deposit",
  "withdrawal",
  "payment",
  "invoice"
];

},{}],188:[function(require,module,exports){
module["exports"] = [
  "TCP",
  "HTTP",
  "SDD",
  "RAM",
  "GB",
  "CSS",
  "SSL",
  "AGP",
  "SQL",
  "FTP",
  "PCI",
  "AI",
  "ADP",
  "RSS",
  "XML",
  "EXE",
  "COM",
  "HDD",
  "THX",
  "SMTP",
  "SMS",
  "USB",
  "PNG",
  "SAS",
  "IB",
  "SCSI",
  "JSON",
  "XSS",
  "JBOD"
];

},{}],189:[function(require,module,exports){
module["exports"] = [
  "auxiliary",
  "primary",
  "back-end",
  "digital",
  "open-source",
  "virtual",
  "cross-platform",
  "redundant",
  "online",
  "haptic",
  "multi-byte",
  "bluetooth",
  "wireless",
  "1080p",
  "neural",
  "optical",
  "solid state",
  "mobile"
];

},{}],190:[function(require,module,exports){
var hacker = {};
module['exports'] = hacker;
hacker.abbreviation = require("./abbreviation");
hacker.adjective = require("./adjective");
hacker.noun = require("./noun");
hacker.verb = require("./verb");
hacker.ingverb = require("./ingverb");

},{"./abbreviation":188,"./adjective":189,"./ingverb":191,"./noun":192,"./verb":193}],191:[function(require,module,exports){
module["exports"] = [
  "backing up",
  "bypassing",
  "hacking",
  "overriding",
  "compressing",
  "copying",
  "navigating",
  "indexing",
  "connecting",
  "generating",
  "quantifying",
  "calculating",
  "synthesizing",
  "transmitting",
  "programming",
  "parsing"
];

},{}],192:[function(require,module,exports){
module["exports"] = [
  "driver",
  "protocol",
  "bandwidth",
  "panel",
  "microchip",
  "program",
  "port",
  "card",
  "array",
  "interface",
  "system",
  "sensor",
  "firewall",
  "hard drive",
  "pixel",
  "alarm",
  "feed",
  "monitor",
  "application",
  "transmitter",
  "bus",
  "circuit",
  "capacitor",
  "matrix"
];

},{}],193:[function(require,module,exports){
module["exports"] = [
  "back up",
  "bypass",
  "hack",
  "override",
  "compress",
  "copy",
  "navigate",
  "index",
  "connect",
  "generate",
  "quantify",
  "calculate",
  "synthesize",
  "input",
  "transmit",
  "program",
  "reboot",
  "parse"
];

},{}],194:[function(require,module,exports){
var en = {};
module['exports'] = en;
en.title = "English";
en.separator = " & ";
en.address = require("./address");
en.credit_card = require("./credit_card");
en.company = require("./company");
en.internet = require("./internet");
en.lorem = require("./lorem");
en.name = require("./name");
en.phone_number = require("./phone_number");
en.cell_phone = require("./cell_phone");
en.business = require("./business");
en.commerce = require("./commerce");
en.team = require("./team");
en.hacker = require("./hacker");
en.app = require("./app");
en.finance = require("./finance");
en.date = require("./date");

},{"./address":137,"./app":148,"./business":154,"./cell_phone":156,"./commerce":159,"./company":166,"./credit_card":173,"./date":181,"./finance":186,"./hacker":190,"./internet":198,"./lorem":199,"./name":203,"./phone_number":210,"./team":212}],195:[function(require,module,exports){
module["exports"] = [
  "https://s3.amazonaws.com/uifaces/faces/twitter/jarjan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mahdif/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sprayaga/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ruzinav/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Skyhartman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/moscoz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kurafire/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/91bilal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/igorgarybaldi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/calebogden/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/malykhinv/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joelhelin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kushsolitary/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/coreyweb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/snowshade/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/areus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/holdenweb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/heyimjuani/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/envex/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/unterdreht/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/collegeman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/peejfancher/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andyisonline/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ultragex/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fuck_you_two/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adellecharles/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ateneupopular/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ahmetalpbalkan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Stievius/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kerem/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/osvaldas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/angelceballos/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thierrykoblentz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/peterlandt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/catarino/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/weglov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brandclay/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/flame_kaizar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ahmetsulek/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nicolasfolliot/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jayrobinson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/victorerixon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kolage/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michzen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/markjenkins/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nicolai_larsen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/noxdzine/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alagoon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/idiot/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mizko/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chadengle/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mutlu82/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/simobenso/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vocino/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/guiiipontes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/soyjavi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joshaustin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tomaslau/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/VinThomas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ManikRathee/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/langate/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cemshid/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/leemunroe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_shahedk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/enda/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/BillSKenney/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/divya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joshhemsley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sindresorhus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/soffes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/9lessons/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/linux29/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Chakintosh/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/anaami/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joreira/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shadeed9/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scottkclark/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jedbridges/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/salleedesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marakasina/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ariil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/BrianPurkiss/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michaelmartinho/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bublienko/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/devankoshal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ZacharyZorbas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/timmillwood/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joshuasortino/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/damenleeturks/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tomas_janousek/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/herrhaase/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/RussellBishop/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brajeshwar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nachtmeister/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cbracco/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bermonpainter/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/abdullindenis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/isacosta/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/suprb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yalozhkin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chandlervdw/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iamgarth/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_victa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/commadelimited/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/roybarberuk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/axel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vladarbatov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ffbel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/syropian/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ankitind/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/traneblow/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/flashmurphy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ChrisFarina78/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/baliomega/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/saschamt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jm_denis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/anoff/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kennyadr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chatyrko/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dingyi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mds/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/terryxlife/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aaroni/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kinday/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/prrstn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/eduardostuart/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dhilipsiva/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/GavicoInd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/baires/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rohixx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bigmancho/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/blakesimkins/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/leeiio/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tjrus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/uberschizo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kylefoundry/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/claudioguglieri/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ripplemdk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/exentrich/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jakemoore/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joaoedumedeiros/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/poormini/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tereshenkov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/keryilmaz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/haydn_woods/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rude/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/llun/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sgaurav_baghel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jamiebrittain/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/badlittleduck/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pifagor/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/agromov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/benefritz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/erwanhesry/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/diesellaws/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeremiaha/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/koridhandy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chaensel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andrewcohen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/smaczny/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gonzalorobaina/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nandini_m/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sydlawrence/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cdharrison/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tgerken/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lewisainslie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/charliecwaite/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/robbschiller/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/flexrs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mattdetails/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/raquelwilson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/karsh/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mrmartineau/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/opnsrce/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hgharrygo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/maximseshuk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/uxalex/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/samihah/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chanpory/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sharvin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/josemarques/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jefffis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/krystalfister/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lokesh_coder/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thedamianhdez/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dpmachado/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/funwatercat/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/timothycd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ivanfilipovbg/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/picard102/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marcobarbosa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/krasnoukhov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/g3d/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ademilter/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rickdt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/operatino/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bungiwan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hugomano/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/logorado/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dc_user/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/horaciobella/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/SlaapMe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/teeragit/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iqonicd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ilya_pestov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andrewarrow/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ssiskind/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/HenryHoffman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rdsaunders/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adamsxu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/curiousoffice/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/themadray/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michigangraham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kohette/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nickfratter/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/runningskull/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/madysondesigns/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brenton_clarke/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jennyshen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bradenhamm/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kurtinc/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/amanruzaini/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/coreyhaggard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Karimmove/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aaronalfred/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wtrsld/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jitachi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/therealmarvin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pmeissner/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ooomz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chacky14/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jesseddy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thinmatt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shanehudson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/akmur/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/IsaryAmairani/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/arthurholcombe1/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andychipster/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/boxmodel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ehsandiary/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/LucasPerdidao/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shalt0ni/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/swaplord/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kaelifa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/plbabin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/guillemboti/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/arindam_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/renbyrd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thiagovernetti/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jmillspaysbills/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mikemai2awesome/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jervo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mekal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sta1ex/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/robergd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/felipecsl/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andrea211087/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/garand/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dhooyenga/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/abovefunction/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pcridesagain/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/randomlies/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/BryanHorsey/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/heykenneth/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dahparra/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/allthingssmitty/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danvernon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/beweinreich/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/increase/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/falvarad/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alxndrustinov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/souuf/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/orkuncaylar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/AM_Kn2/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gearpixels/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bassamology/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vimarethomas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kosmar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/SULiik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mrjamesnoble/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/silvanmuhlemann/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shaneIxD/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nacho/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yigitpinarbasi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/buzzusborne/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aaronkwhite/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rmlewisuk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/giancarlon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nbirckel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/d_nny_m_cher/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sdidonato/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/atariboy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/abotap/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/karalek/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/psdesignuk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ludwiczakpawel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nemanjaivanovic/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/baluli/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ahmadajmi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vovkasolovev/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/samgrover/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/derienzo777/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jonathansimmons/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nelsonjoyce/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/S0ufi4n3/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xtopherpaul/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/oaktreemedia/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nateschulte/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/findingjenny/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/namankreative/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/antonyzotov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/we_social/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/leehambley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/solid_color/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/abelcabans/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mbilderbach/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kkusaa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jordyvdboom/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carlosgavina/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pechkinator/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vc27/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rdbannon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/croakx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/suribbles/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kerihenare/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/catadeleon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gcmorley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/duivvv/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/saschadroste/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/victorDubugras/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wintopia/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mattbilotti/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/taylorling/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/megdraws/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/meln1ks/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mahmoudmetwally/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Silveredge9/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/derekebradley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/happypeter1983/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/travis_arnold/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/artem_kostenko/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adobi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/daykiine/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alek_djuric/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scips/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/miguelmendes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/justinrhee/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alsobrooks/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fronx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mcflydesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/santi_urso/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/allfordesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stayuber/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bertboerland/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marosholly/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adamnac/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cynthiasavard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/muringa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danro/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hiemil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jackiesaik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/zacsnider/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iduuck/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/antjanus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aroon_sharma/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dshster/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thehacker/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michaelbrooksjr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ryanmclaughlin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/clubb3rry/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/taybenlor/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xripunov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/myastro/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adityasutomo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/digitalmaverick/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hjartstrorn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/itolmach/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vaughanmoffitt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/abdots/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/isnifer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sergeysafonov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/maz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scrapdnb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chrismj83/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vitorleal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sokaniwaal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/zaki3d/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/illyzoren/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mocabyte/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/osmanince/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/djsherman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/davidhemphill/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/waghner/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/necodymiconer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/praveen_vijaya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fabbrucci/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cliffseal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/travishines/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kuldarkalvik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Elt_n/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/phillapier/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/okseanjay/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/id835559/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kudretkeskin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/anjhero/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/duck4fuck/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scott_riley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/noufalibrahim/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/h1brd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/borges_marcos/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/devinhalladay/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ciaranr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stefooo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mikebeecham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tonymillion/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joshuaraichur/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/irae/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/petrangr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dmitriychuta/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/charliegann/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/arashmanteghi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ainsleywagon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/svenlen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/faisalabid/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/beshur/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carlyson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dutchnadia/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/teddyzetterlund/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/samuelkraft/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aoimedia/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/toddrew/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/codepoet_ru/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/artvavs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/benoitboucart/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jomarmen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kolmarlopez/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/creartinc/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/homka/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gaborenton/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/robinclediere/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/maximsorokin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/plasticine/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/j2deme/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/peachananr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kapaluccio/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/de_ascanio/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rikas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dawidwu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/angelcreative/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rpatey/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/popey/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rehatkathuria/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/the_purplebunny/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/1markiz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ajaxy_ru/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brenmurrell/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dudestein/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/oskarlevinson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/victorstuber/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nehfy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vicivadeline/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/leandrovaranda/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scottgallant/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/victor_haydin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sawrb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ryhanhassan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/amayvs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/a_brixen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/karolkrakowiak_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/herkulano/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/geran7/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cggaurav/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chris_witko/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lososina/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/polarity/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mattlat/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brandonburke/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/constantx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/teylorfeliz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/craigelimeliah/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rachelreveley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/reabo101/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rahmeen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ky/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rickyyean/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/j04ntoh/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/spbroma/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sebashton/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jpenico/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/francis_vega/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/oktayelipek/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kikillo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fabbianz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/larrygerard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/BroumiYoussef/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/0therplanet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mbilalsiddique1/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ionuss/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/grrr_nl/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/liminha/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rawdiggie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ryandownie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sethlouey/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pixage/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/arpitnj/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/switmer777/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/josevnclch/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kanickairaj/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/puzik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tbakdesigns/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/besbujupi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/supjoey/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lowie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/linkibol/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/balintorosz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/imcoding/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/agustincruiz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gusoto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thomasschrijer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/superoutman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kalmerrautam/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gabrielizalo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gojeanyn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/davidbaldie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_vojto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/laurengray/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jydesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mymyboy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nellleo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marciotoledo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ninjad3m0/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/to_soham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hasslunsford/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/muridrahhal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/levisan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/grahamkennery/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lepetitogre/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/antongenkin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nessoila/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/amandabuzard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/safrankov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cocolero/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dss49/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/matt3224/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bluesix/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/quailandquasar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/AlbertoCococi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lepinski/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sementiy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mhudobivnik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thibaut_re/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/olgary/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shojberg/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mtolokonnikov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bereto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/naupintos/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wegotvices/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xadhix/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/macxim/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rodnylobos/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/madcampos/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/madebyvadim/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bartoszdawydzik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/supervova/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/markretzloff/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vonachoo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/darylws/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stevedesigner/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mylesb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/herbigt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/depaulawagner/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/geshan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gizmeedevil1991/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_scottburgess/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lisovsky/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/davidsasda/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/artd_sign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/YoungCutlass/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mgonto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/itstotallyamy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/victorquinn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/osmond/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/oksanafrewer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/zauerkraut/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iamkeithmason/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nitinhayaran/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lmjabreu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mandalareopens/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thinkleft/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ponchomendivil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/juamperro/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brunodesign1206/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/caseycavanagh/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/luxe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dotgridline/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/spedwig/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/madewulf/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mattsapii/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/helderleal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chrisstumph/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jayphen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nsamoylov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chrisvanderkooi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/justme_timothyg/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/otozk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/prinzadi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gu5taf/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cyril_gaillard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/d_kobelyatsky/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/daniloc/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nwdsha/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/romanbulah/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/skkirilov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dvdwinden/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dannol/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thekevinjones/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jwalter14/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/timgthomas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/buddhasource/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/uxpiper/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thatonetommy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/diansigitp/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adrienths/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/klimmka/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gkaam/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/derekcramer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jennyyo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nerrsoft/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xalionmalik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/edhenderson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/keyuri85/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/roxanejammet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kimcool/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/edkf/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/matkins/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alessandroribe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jacksonlatka/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lebronjennan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kostaspt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/karlkanall/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/moynihan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danpliego/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/saulihirvi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wesleytrankin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fjaguero/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bowbrick/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mashaaaaal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yassiryahya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dparrelli/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fotomagin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aka_james/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/denisepires/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iqbalperkasa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/martinansty/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jarsen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/r_oy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/justinrob/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gabrielrosser/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/malgordon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carlfairclough/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michaelabehsera/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pierrestoffe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/enjoythetau/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/loganjlambert/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rpeezy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/coreyginnivan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michalhron/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/msveet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lingeswaran/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kolsvein/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/peter576/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/reideiredale/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joeymurdah/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/raphaelnikson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mvdheuvel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/maxlinderman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jimmuirhead/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/begreative/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/frankiefreesbie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/robturlinckx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Talbi_ConSept/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/longlivemyword/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vanchesz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/maiklam/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hermanobrother/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rez___a/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gregsqueeb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/greenbes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_ragzor/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/anthonysukow/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fluidbrush/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dactrtr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jehnglynn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bergmartin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hugocornejo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_kkga/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dzantievm/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sawalazar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sovesove/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jonsgotwood/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/byryan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vytautas_a/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mizhgan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cicerobr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nilshelmersson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/d33pthought/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/davecraige/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nckjrvs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alexandermayes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jcubic/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/craigrcoles/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bagawarman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rob_thomas10/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cofla/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/maikelk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rtgibbons/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/russell_baylis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mhesslow/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/codysanfilippo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/webtanya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/madebybrenton/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dcalonaci/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/perfectflow/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jjsiii/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/saarabpreet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kumarrajan12123/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iamsteffen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/themikenagle/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ceekaytweet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/larrybolt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/conspirator/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dallasbpeters/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/n3dmax/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/terpimost/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kirillz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/byrnecore/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/j_drake_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/calebjoyce/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/russoedu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hoangloi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tobysaxon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gofrasdesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dimaposnyy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tjisousa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/okandungel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/billyroshan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/oskamaya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/motionthinks/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/knilob/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ashocka18/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marrimo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bartjo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/omnizya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ernestsemerda/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andreas_pr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/edgarchris99/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thomasgeisen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gseguin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joannefournier/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/demersdesigns/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adammarsbar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nasirwd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/n_tassone/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/javorszky/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/themrdave/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yecidsm/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nicollerich/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/canapud/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nicoleglynn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/judzhin_miles/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/designervzm/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kianoshp/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/evandrix/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alterchuca/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dhrubo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ma_tiax/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ssbb_me/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dorphern/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mauriolg/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bruno_mart/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mactopus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/the_winslet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joemdesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/Shriiiiimp/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jacobbennett/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nfedoroff/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iamglimy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/allagringaus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aiiaiiaii/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/olaolusoga/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/buryaknick/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wim1k/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nicklacke/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/a1chapone/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/steynviljoen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/strikewan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ryankirkman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andrewabogado/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/doooon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jagan123/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ariffsetiawan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/elenadissi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mwarkentin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thierrymeier_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/r_garcia/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dmackerman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/borantula/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/konus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/spacewood_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ryuchi311/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/evanshajed/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tristanlegros/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shoaib253/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aislinnkelly/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/okcoker/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/timpetricola/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sunshinedgirl/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chadami/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aleclarsoniv/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nomidesigns/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/petebernardo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scottiedude/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/millinet/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/imsoper/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/imammuht/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/benjamin_knight/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nepdud/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joki4/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lanceguyatt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bboy1895/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/amywebbb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rweve/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/haruintesettden/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ricburton/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nelshd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/batsirai/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/primozcigler/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jffgrdnr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/8d3k/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/geneseleznev/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/al_li/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/souperphly/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mslarkina/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/2fockus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cdavis565/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xiel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/turkutuuli/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/uxward/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lebinoclard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gauravjassal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/davidmerrique/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mdsisto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andrewofficer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kojourin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dnirmal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kevka/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mr_shiznit/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aluisio_azevedo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cloudstudio/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danvierich/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alexivanichkin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fran_mchamy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/perretmagali/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/betraydan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cadikkara/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/matbeedotcom/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeremyworboys/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bpartridge/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michaelkoper/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/silv3rgvn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alevizio/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/johnsmithagency/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lawlbwoy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vitor376/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/desastrozo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thimo_cz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jasonmarkjones/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lhausermann/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xravil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/guischmitt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vigobronx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/panghal0/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/miguelkooreman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/surgeonist/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/christianoliff/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/caspergrl/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iamkarna/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ipavelek/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pierre_nel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/y2graphic/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sterlingrules/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/elbuscainfo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bennyjien/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stushona/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/estebanuribe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/embrcecreations/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danillos/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/elliotlewis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/charlesrpratt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vladyn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/emmeffess/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carlosblanco_eu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/leonfedotov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rangafangs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chris_frees/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tgormtx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bryan_topham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jpscribbles/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mighty55/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carbontwelve/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/isaacfifth/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/iamjdeleon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/snowwrite/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/barputro/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/drewbyreese/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sachacorazzi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bistrianiosip/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/magoo04/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pehamondello/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yayteejay/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/a_harris88/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/algunsanabria/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/zforrester/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ovall/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carlosjgsousa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/geobikas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ah_lice/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/looneydoodle/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nerdgr8/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ddggccaa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/zackeeler/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/normanbox/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/el_fuertisimo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ismail_biltagi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/juangomezw/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jnmnrd/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/patrickcoombe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ryanjohnson_me/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/markolschesky/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeffgolenski/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kvasnic/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lindseyzilla/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gauchomatt/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/afusinatto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kevinoh/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/okansurreel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adamawesomeface/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/emileboudeling/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/arishi_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/juanmamartinez/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wikiziner/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danthms/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mkginfo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/terrorpixel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/curiousonaut/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/prheemo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michaelcolenso/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/foczzi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/martip07/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thaodang17/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/johncafazza/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/robinlayfield/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/franciscoamk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/abdulhyeuk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marklamb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/edobene/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andresenfredrik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mikaeljorhult/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chrisslowik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vinciarts/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/meelford/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/elliotnolten/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yehudab/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vijaykarthik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bfrohs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/josep_martins/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/attacks/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sur4dye/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tumski/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/instalox/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mangosango/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/paulfarino/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kazaky999/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kiwiupover/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nvkznemo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tom_even/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ratbus/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/woodsman001/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joshmedeski/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thewillbeard/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/psaikali/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joe_black/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aleinadsays/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marcusgorillius/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hota_v/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jghyllebert/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shinze/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/janpalounek/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeremiespoken/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/her_ruu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dansowter/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/felipeapiress/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/magugzbrand2d/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/posterjob/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nathalie_fs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bobbytwoshoes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dreizle/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeremymouton/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/elisabethkjaer/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/notbadart/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mohanrohith/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jlsolerdeltoro/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/itskawsar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/slowspock/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/zvchkelly/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wiljanslofstra/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/craighenneberry/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/trubeatto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/juaumlol/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/samscouto/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/BenouarradeM/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gipsy_raf/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/netonet_il/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/arkokoley/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/itsajimithing/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/smalonso/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/victordeanda/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_dwite_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/richardgarretts/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gregrwilkinson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/anatolinicolae/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lu4sh1i/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stefanotirloni/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ostirbu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/darcystonge/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/naitanamoreno/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/michaelcomiskey/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/adhiardana/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marcomano_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/davidcazalis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/falconerie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gregkilian/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bcrad/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bolzanmarco/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/low_res/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vlajki/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/petar_prog/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jonkspr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/akmalfikri/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mfacchinello/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/atanism/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/harry_sistalam/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/murrayswift/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bobwassermann/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gavr1l0/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/madshensel/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mr_subtle/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/deviljho_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/salimianoff/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joetruesdell/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/twittypork/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/airskylar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dnezkumar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dgajjar/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cherif_b/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/salvafc/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/louis_currie/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/deeenright/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cybind/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/eyronn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vickyshits/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sweetdelisa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/cboller1/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andresdjasso/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/melvindidit/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andysolomon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thaisselenator_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lvovenok/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/giuliusa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/belyaev_rs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/overcloacked/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kamal_chaneman/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/incubo82/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hellofeverrrr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mhaligowski/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sunlandictwin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bu7921/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/andytlaw/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeremery/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/finchjke/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/manigm/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/umurgdk/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/scottfeltham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ganserene/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mutu_krish/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jodytaggart/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ntfblog/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tanveerrao/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hfalucas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alxleroydeval/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kucingbelang4/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bargaorobalo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/colgruv/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stalewine/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kylefrost/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/baumannzone/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/angelcolberg/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sachingawas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jjshaw14/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ramanathan_pdy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/johndezember/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nilshoenson/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brandonmorreale/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nutzumi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/brandonflatsoda/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sergeyalmone/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/klefue/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kirangopal/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/baumann_alex/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/matthewkay_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jay_wilburn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shesgared/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/apriendeau/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/johnriordan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wake_gs/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aleksitappura/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/emsgulam/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xilantra/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/imomenui/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sircalebgrove/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/newbrushes/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hsinyo23/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/m4rio/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/katiemdaly/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/s4f1/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ecommerceil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marlinjayakody/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/swooshycueb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sangdth/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/coderdiaz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bluefx_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vivekprvr/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sasha_shestakov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/eugeneeweb/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dgclegg/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/n1ght_coder/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dixchen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/blakehawksworth/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/trueblood_33/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hai_ninh_nguyen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marclgonzales/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/yesmeck/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stephcoue/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/doronmalki/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ruehldesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/anasnakawa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kijanmaharjan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/wearesavas/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stefvdham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tweetubhai/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alecarpentier/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/fiterik/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/antonyryndya/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/d00maz/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/theonlyzeke/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/missaaamy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/carlosm/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/manekenthe/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/reetajayendra/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jeremyshimko/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/justinrgraham/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/stefanozoffoli/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/overra/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mrebay007/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/shvelo96/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/pyronite/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/thedjpetersen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/rtyukmaev/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_williamguerra/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/albertaugustin/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vikashpathak18/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kevinjohndayy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vj_demien/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/colirpixoil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/goddardlewis/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/laasli/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jqiuss/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/heycamtaylor/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nastya_mane/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mastermindesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ccinojasso1/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/nyancecom/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sandywoodruff/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/bighanddesign/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sbtransparent/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aviddayentonbay/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/richwild/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kaysix_dizzy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/tur8le/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/seyedhossein1/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/privetwagner/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/emmandenn/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dev_essentials/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jmfsocial/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_yardenoon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mateaodviteza/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/weavermedia/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mufaddal_mw/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hafeeskhan/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ashernatali/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sulaqo/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/eddiechen/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/josecarlospsh/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vm_f/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/enricocicconi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/danmartin70/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/gmourier/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/donjain/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mrxloka/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/_pedropinho/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/eitarafa/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/oscarowusu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ralph_lam/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/panchajanyag/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/woodydotmx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/jerrybai1907/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/marshallchen_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/xamorep/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aio___/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/chaabane_wail/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/txcx/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/akashsharma39/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/falling_soul/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sainraja/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mugukamil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/johannesneu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/markwienands/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/karthipanraj/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/balakayuriy/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/alan_zhang_/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/layerssss/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/kaspernordkvist/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/mirfanqureshi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/hanna_smi/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/VMilescu/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/aeon56/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/m_kalibry/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/sreejithexp/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dicesales/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/dhoot_amit/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/smenov/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/lonesomelemon/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vladimirdevic/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/joelcipriano/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/haligaliharun/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/buleswapnil/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/serefka/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/ifarafonow/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/vikasvinfotech/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/urrutimeoli/128.jpg",
  "https://s3.amazonaws.com/uifaces/faces/twitter/areandacom/128.jpg"
];

},{}],196:[function(require,module,exports){
module["exports"] = [
  "com",
  "biz",
  "info",
  "name",
  "net",
  "org"
];

},{}],197:[function(require,module,exports){
arguments[4][74][0].apply(exports,arguments)
},{"dup":74}],198:[function(require,module,exports){
var internet = {};
module['exports'] = internet;
internet.free_email = require("./free_email");
internet.domain_suffix = require("./domain_suffix");
internet.avatar_uri = require("./avatar_uri");

},{"./avatar_uri":195,"./domain_suffix":196,"./free_email":197}],199:[function(require,module,exports){
var lorem = {};
module['exports'] = lorem;
lorem.words = require("./words");
lorem.supplemental = require("./supplemental");

},{"./supplemental":200,"./words":201}],200:[function(require,module,exports){
module["exports"] = [
  "abbas",
  "abduco",
  "abeo",
  "abscido",
  "absconditus",
  "absens",
  "absorbeo",
  "absque",
  "abstergo",
  "absum",
  "abundans",
  "abutor",
  "accedo",
  "accendo",
  "acceptus",
  "accipio",
  "accommodo",
  "accusator",
  "acer",
  "acerbitas",
  "acervus",
  "acidus",
  "acies",
  "acquiro",
  "acsi",
  "adamo",
  "adaugeo",
  "addo",
  "adduco",
  "ademptio",
  "adeo",
  "adeptio",
  "adfectus",
  "adfero",
  "adficio",
  "adflicto",
  "adhaero",
  "adhuc",
  "adicio",
  "adimpleo",
  "adinventitias",
  "adipiscor",
  "adiuvo",
  "administratio",
  "admiratio",
  "admitto",
  "admoneo",
  "admoveo",
  "adnuo",
  "adopto",
  "adsidue",
  "adstringo",
  "adsuesco",
  "adsum",
  "adulatio",
  "adulescens",
  "adultus",
  "aduro",
  "advenio",
  "adversus",
  "advoco",
  "aedificium",
  "aeger",
  "aegre",
  "aegrotatio",
  "aegrus",
  "aeneus",
  "aequitas",
  "aequus",
  "aer",
  "aestas",
  "aestivus",
  "aestus",
  "aetas",
  "aeternus",
  "ager",
  "aggero",
  "aggredior",
  "agnitio",
  "agnosco",
  "ago",
  "ait",
  "aiunt",
  "alienus",
  "alii",
  "alioqui",
  "aliqua",
  "alius",
  "allatus",
  "alo",
  "alter",
  "altus",
  "alveus",
  "amaritudo",
  "ambitus",
  "ambulo",
  "amicitia",
  "amiculum",
  "amissio",
  "amita",
  "amitto",
  "amo",
  "amor",
  "amoveo",
  "amplexus",
  "amplitudo",
  "amplus",
  "ancilla",
  "angelus",
  "angulus",
  "angustus",
  "animadverto",
  "animi",
  "animus",
  "annus",
  "anser",
  "ante",
  "antea",
  "antepono",
  "antiquus",
  "aperio",
  "aperte",
  "apostolus",
  "apparatus",
  "appello",
  "appono",
  "appositus",
  "approbo",
  "apto",
  "aptus",
  "apud",
  "aqua",
  "ara",
  "aranea",
  "arbitro",
  "arbor",
  "arbustum",
  "arca",
  "arceo",
  "arcesso",
  "arcus",
  "argentum",
  "argumentum",
  "arguo",
  "arma",
  "armarium",
  "armo",
  "aro",
  "ars",
  "articulus",
  "artificiose",
  "arto",
  "arx",
  "ascisco",
  "ascit",
  "asper",
  "aspicio",
  "asporto",
  "assentator",
  "astrum",
  "atavus",
  "ater",
  "atqui",
  "atrocitas",
  "atrox",
  "attero",
  "attollo",
  "attonbitus",
  "auctor",
  "auctus",
  "audacia",
  "audax",
  "audentia",
  "audeo",
  "audio",
  "auditor",
  "aufero",
  "aureus",
  "auris",
  "aurum",
  "aut",
  "autem",
  "autus",
  "auxilium",
  "avaritia",
  "avarus",
  "aveho",
  "averto",
  "avoco",
  "baiulus",
  "balbus",
  "barba",
  "bardus",
  "basium",
  "beatus",
  "bellicus",
  "bellum",
  "bene",
  "beneficium",
  "benevolentia",
  "benigne",
  "bestia",
  "bibo",
  "bis",
  "blandior",
  "bonus",
  "bos",
  "brevis",
  "cado",
  "caecus",
  "caelestis",
  "caelum",
  "calamitas",
  "calcar",
  "calco",
  "calculus",
  "callide",
  "campana",
  "candidus",
  "canis",
  "canonicus",
  "canto",
  "capillus",
  "capio",
  "capitulus",
  "capto",
  "caput",
  "carbo",
  "carcer",
  "careo",
  "caries",
  "cariosus",
  "caritas",
  "carmen",
  "carpo",
  "carus",
  "casso",
  "caste",
  "casus",
  "catena",
  "caterva",
  "cattus",
  "cauda",
  "causa",
  "caute",
  "caveo",
  "cavus",
  "cedo",
  "celebrer",
  "celer",
  "celo",
  "cena",
  "cenaculum",
  "ceno",
  "censura",
  "centum",
  "cerno",
  "cernuus",
  "certe",
  "certo",
  "certus",
  "cervus",
  "cetera",
  "charisma",
  "chirographum",
  "cibo",
  "cibus",
  "cicuta",
  "cilicium",
  "cimentarius",
  "ciminatio",
  "cinis",
  "circumvenio",
  "cito",
  "civis",
  "civitas",
  "clam",
  "clamo",
  "claro",
  "clarus",
  "claudeo",
  "claustrum",
  "clementia",
  "clibanus",
  "coadunatio",
  "coaegresco",
  "coepi",
  "coerceo",
  "cogito",
  "cognatus",
  "cognomen",
  "cogo",
  "cohaero",
  "cohibeo",
  "cohors",
  "colligo",
  "colloco",
  "collum",
  "colo",
  "color",
  "coma",
  "combibo",
  "comburo",
  "comedo",
  "comes",
  "cometes",
  "comis",
  "comitatus",
  "commemoro",
  "comminor",
  "commodo",
  "communis",
  "comparo",
  "compello",
  "complectus",
  "compono",
  "comprehendo",
  "comptus",
  "conatus",
  "concedo",
  "concido",
  "conculco",
  "condico",
  "conduco",
  "confero",
  "confido",
  "conforto",
  "confugo",
  "congregatio",
  "conicio",
  "coniecto",
  "conitor",
  "coniuratio",
  "conor",
  "conqueror",
  "conscendo",
  "conservo",
  "considero",
  "conspergo",
  "constans",
  "consuasor",
  "contabesco",
  "contego",
  "contigo",
  "contra",
  "conturbo",
  "conventus",
  "convoco",
  "copia",
  "copiose",
  "cornu",
  "corona",
  "corpus",
  "correptius",
  "corrigo",
  "corroboro",
  "corrumpo",
  "coruscus",
  "cotidie",
  "crapula",
  "cras",
  "crastinus",
  "creator",
  "creber",
  "crebro",
  "credo",
  "creo",
  "creptio",
  "crepusculum",
  "cresco",
  "creta",
  "cribro",
  "crinis",
  "cruciamentum",
  "crudelis",
  "cruentus",
  "crur",
  "crustulum",
  "crux",
  "cubicularis",
  "cubitum",
  "cubo",
  "cui",
  "cuius",
  "culpa",
  "culpo",
  "cultellus",
  "cultura",
  "cum",
  "cunabula",
  "cunae",
  "cunctatio",
  "cupiditas",
  "cupio",
  "cuppedia",
  "cupressus",
  "cur",
  "cura",
  "curatio",
  "curia",
  "curiositas",
  "curis",
  "curo",
  "curriculum",
  "currus",
  "cursim",
  "curso",
  "cursus",
  "curto",
  "curtus",
  "curvo",
  "curvus",
  "custodia",
  "damnatio",
  "damno",
  "dapifer",
  "debeo",
  "debilito",
  "decens",
  "decerno",
  "decet",
  "decimus",
  "decipio",
  "decor",
  "decretum",
  "decumbo",
  "dedecor",
  "dedico",
  "deduco",
  "defaeco",
  "defendo",
  "defero",
  "defessus",
  "defetiscor",
  "deficio",
  "defigo",
  "defleo",
  "defluo",
  "defungo",
  "degenero",
  "degero",
  "degusto",
  "deinde",
  "delectatio",
  "delego",
  "deleo",
  "delibero",
  "delicate",
  "delinquo",
  "deludo",
  "demens",
  "demergo",
  "demitto",
  "demo",
  "demonstro",
  "demoror",
  "demulceo",
  "demum",
  "denego",
  "denique",
  "dens",
  "denuncio",
  "denuo",
  "deorsum",
  "depereo",
  "depono",
  "depopulo",
  "deporto",
  "depraedor",
  "deprecator",
  "deprimo",
  "depromo",
  "depulso",
  "deputo",
  "derelinquo",
  "derideo",
  "deripio",
  "desidero",
  "desino",
  "desipio",
  "desolo",
  "desparatus",
  "despecto",
  "despirmatio",
  "infit",
  "inflammatio",
  "paens",
  "patior",
  "patria",
  "patrocinor",
  "patruus",
  "pauci",
  "paulatim",
  "pauper",
  "pax",
  "peccatus",
  "pecco",
  "pecto",
  "pectus",
  "pecunia",
  "pecus",
  "peior",
  "pel",
  "ocer",
  "socius",
  "sodalitas",
  "sol",
  "soleo",
  "solio",
  "solitudo",
  "solium",
  "sollers",
  "sollicito",
  "solum",
  "solus",
  "solutio",
  "solvo",
  "somniculosus",
  "somnus",
  "sonitus",
  "sono",
  "sophismata",
  "sopor",
  "sordeo",
  "sortitus",
  "spargo",
  "speciosus",
  "spectaculum",
  "speculum",
  "sperno",
  "spero",
  "spes",
  "spiculum",
  "spiritus",
  "spoliatio",
  "sponte",
  "stabilis",
  "statim",
  "statua",
  "stella",
  "stillicidium",
  "stipes",
  "stips",
  "sto",
  "strenuus",
  "strues",
  "studio",
  "stultus",
  "suadeo",
  "suasoria",
  "sub",
  "subito",
  "subiungo",
  "sublime",
  "subnecto",
  "subseco",
  "substantia",
  "subvenio",
  "succedo",
  "succurro",
  "sufficio",
  "suffoco",
  "suffragium",
  "suggero",
  "sui",
  "sulum",
  "sum",
  "summa",
  "summisse",
  "summopere",
  "sumo",
  "sumptus",
  "supellex",
  "super",
  "suppellex",
  "supplanto",
  "suppono",
  "supra",
  "surculus",
  "surgo",
  "sursum",
  "suscipio",
  "suspendo",
  "sustineo",
  "suus",
  "synagoga",
  "tabella",
  "tabernus",
  "tabesco",
  "tabgo",
  "tabula",
  "taceo",
  "tactus",
  "taedium",
  "talio",
  "talis",
  "talus",
  "tam",
  "tamdiu",
  "tamen",
  "tametsi",
  "tamisium",
  "tamquam",
  "tandem",
  "tantillus",
  "tantum",
  "tardus",
  "tego",
  "temeritas",
  "temperantia",
  "templum",
  "temptatio",
  "tempus",
  "tenax",
  "tendo",
  "teneo",
  "tener",
  "tenuis",
  "tenus",
  "tepesco",
  "tepidus",
  "ter",
  "terebro",
  "teres",
  "terga",
  "tergeo",
  "tergiversatio",
  "tergo",
  "tergum",
  "termes",
  "terminatio",
  "tero",
  "terra",
  "terreo",
  "territo",
  "terror",
  "tersus",
  "tertius",
  "testimonium",
  "texo",
  "textilis",
  "textor",
  "textus",
  "thalassinus",
  "theatrum",
  "theca",
  "thema",
  "theologus",
  "thermae",
  "thesaurus",
  "thesis",
  "thorax",
  "thymbra",
  "thymum",
  "tibi",
  "timidus",
  "timor",
  "titulus",
  "tolero",
  "tollo",
  "tondeo",
  "tonsor",
  "torqueo",
  "torrens",
  "tot",
  "totidem",
  "toties",
  "totus",
  "tracto",
  "trado",
  "traho",
  "trans",
  "tredecim",
  "tremo",
  "trepide",
  "tres",
  "tribuo",
  "tricesimus",
  "triduana",
  "triginta",
  "tripudio",
  "tristis",
  "triumphus",
  "trucido",
  "truculenter",
  "tubineus",
  "tui",
  "tum",
  "tumultus",
  "tunc",
  "turba",
  "turbo",
  "turpe",
  "turpis",
  "tutamen",
  "tutis",
  "tyrannus",
  "uberrime",
  "ubi",
  "ulciscor",
  "ullus",
  "ulterius",
  "ultio",
  "ultra",
  "umbra",
  "umerus",
  "umquam",
  "una",
  "unde",
  "undique",
  "universe",
  "unus",
  "urbanus",
  "urbs",
  "uredo",
  "usitas",
  "usque",
  "ustilo",
  "ustulo",
  "usus",
  "uter",
  "uterque",
  "utilis",
  "utique",
  "utor",
  "utpote",
  "utrimque",
  "utroque",
  "utrum",
  "uxor",
  "vaco",
  "vacuus",
  "vado",
  "vae",
  "valde",
  "valens",
  "valeo",
  "valetudo",
  "validus",
  "vallum",
  "vapulus",
  "varietas",
  "varius",
  "vehemens",
  "vel",
  "velociter",
  "velum",
  "velut",
  "venia",
  "venio",
  "ventito",
  "ventosus",
  "ventus",
  "venustas",
  "ver",
  "verbera",
  "verbum",
  "vere",
  "verecundia",
  "vereor",
  "vergo",
  "veritas",
  "vero",
  "versus",
  "verto",
  "verumtamen",
  "verus",
  "vesco",
  "vesica",
  "vesper",
  "vespillo",
  "vester",
  "vestigium",
  "vestrum",
  "vetus",
  "via",
  "vicinus",
  "vicissitudo",
  "victoria",
  "victus",
  "videlicet",
  "video",
  "viduata",
  "viduo",
  "vigilo",
  "vigor",
  "vilicus",
  "vilis",
  "vilitas",
  "villa",
  "vinco",
  "vinculum",
  "vindico",
  "vinitor",
  "vinum",
  "vir",
  "virga",
  "virgo",
  "viridis",
  "viriliter",
  "virtus",
  "vis",
  "viscus",
  "vita",
  "vitiosus",
  "vitium",
  "vito",
  "vivo",
  "vix",
  "vobis",
  "vociferor",
  "voco",
  "volaticus",
  "volo",
  "volubilis",
  "voluntarius",
  "volup",
  "volutabrum",
  "volva",
  "vomer",
  "vomica",
  "vomito",
  "vorago",
  "vorax",
  "voro",
  "vos",
  "votum",
  "voveo",
  "vox",
  "vulariter",
  "vulgaris",
  "vulgivagus",
  "vulgo",
  "vulgus",
  "vulnero",
  "vulnus",
  "vulpes",
  "vulticulus",
  "vultuosus",
  "xiphias"
];

},{}],201:[function(require,module,exports){
arguments[4][77][0].apply(exports,arguments)
},{"dup":77}],202:[function(require,module,exports){
module["exports"] = [
  "Aaliyah",
  "Aaron",
  "Abagail",
  "Abbey",
  "Abbie",
  "Abbigail",
  "Abby",
  "Abdiel",
  "Abdul",
  "Abdullah",
  "Abe",
  "Abel",
  "Abelardo",
  "Abigail",
  "Abigale",
  "Abigayle",
  "Abner",
  "Abraham",
  "Ada",
  "Adah",
  "Adalberto",
  "Adaline",
  "Adam",
  "Adan",
  "Addie",
  "Addison",
  "Adela",
  "Adelbert",
  "Adele",
  "Adelia",
  "Adeline",
  "Adell",
  "Adella",
  "Adelle",
  "Aditya",
  "Adolf",
  "Adolfo",
  "Adolph",
  "Adolphus",
  "Adonis",
  "Adrain",
  "Adrian",
  "Adriana",
  "Adrianna",
  "Adriel",
  "Adrien",
  "Adrienne",
  "Afton",
  "Aglae",
  "Agnes",
  "Agustin",
  "Agustina",
  "Ahmad",
  "Ahmed",
  "Aida",
  "Aidan",
  "Aiden",
  "Aileen",
  "Aimee",
  "Aisha",
  "Aiyana",
  "Akeem",
  "Al",
  "Alaina",
  "Alan",
  "Alana",
  "Alanis",
  "Alanna",
  "Alayna",
  "Alba",
  "Albert",
  "Alberta",
  "Albertha",
  "Alberto",
  "Albin",
  "Albina",
  "Alda",
  "Alden",
  "Alec",
  "Aleen",
  "Alejandra",
  "Alejandrin",
  "Alek",
  "Alena",
  "Alene",
  "Alessandra",
  "Alessandro",
  "Alessia",
  "Aletha",
  "Alex",
  "Alexa",
  "Alexander",
  "Alexandra",
  "Alexandre",
  "Alexandrea",
  "Alexandria",
  "Alexandrine",
  "Alexandro",
  "Alexane",
  "Alexanne",
  "Alexie",
  "Alexis",
  "Alexys",
  "Alexzander",
  "Alf",
  "Alfonso",
  "Alfonzo",
  "Alford",
  "Alfred",
  "Alfreda",
  "Alfredo",
  "Ali",
  "Alia",
  "Alice",
  "Alicia",
  "Alisa",
  "Alisha",
  "Alison",
  "Alivia",
  "Aliya",
  "Aliyah",
  "Aliza",
  "Alize",
  "Allan",
  "Allen",
  "Allene",
  "Allie",
  "Allison",
  "Ally",
  "Alphonso",
  "Alta",
  "Althea",
  "Alva",
  "Alvah",
  "Alvena",
  "Alvera",
  "Alverta",
  "Alvina",
  "Alvis",
  "Alyce",
  "Alycia",
  "Alysa",
  "Alysha",
  "Alyson",
  "Alysson",
  "Amalia",
  "Amanda",
  "Amani",
  "Amara",
  "Amari",
  "Amaya",
  "Amber",
  "Ambrose",
  "Amelia",
  "Amelie",
  "Amely",
  "America",
  "Americo",
  "Amie",
  "Amina",
  "Amir",
  "Amira",
  "Amiya",
  "Amos",
  "Amparo",
  "Amy",
  "Amya",
  "Ana",
  "Anabel",
  "Anabelle",
  "Anahi",
  "Anais",
  "Anastacio",
  "Anastasia",
  "Anderson",
  "Andre",
  "Andreane",
  "Andreanne",
  "Andres",
  "Andrew",
  "Andy",
  "Angel",
  "Angela",
  "Angelica",
  "Angelina",
  "Angeline",
  "Angelita",
  "Angelo",
  "Angie",
  "Angus",
  "Anibal",
  "Anika",
  "Anissa",
  "Anita",
  "Aniya",
  "Aniyah",
  "Anjali",
  "Anna",
  "Annabel",
  "Annabell",
  "Annabelle",
  "Annalise",
  "Annamae",
  "Annamarie",
  "Anne",
  "Annetta",
  "Annette",
  "Annie",
  "Ansel",
  "Ansley",
  "Anthony",
  "Antoinette",
  "Antone",
  "Antonetta",
  "Antonette",
  "Antonia",
  "Antonietta",
  "Antonina",
  "Antonio",
  "Antwan",
  "Antwon",
  "Anya",
  "April",
  "Ara",
  "Araceli",
  "Aracely",
  "Arch",
  "Archibald",
  "Ardella",
  "Arden",
  "Ardith",
  "Arely",
  "Ari",
  "Ariane",
  "Arianna",
  "Aric",
  "Ariel",
  "Arielle",
  "Arjun",
  "Arlene",
  "Arlie",
  "Arlo",
  "Armand",
  "Armando",
  "Armani",
  "Arnaldo",
  "Arne",
  "Arno",
  "Arnold",
  "Arnoldo",
  "Arnulfo",
  "Aron",
  "Art",
  "Arthur",
  "Arturo",
  "Arvel",
  "Arvid",
  "Arvilla",
  "Aryanna",
  "Asa",
  "Asha",
  "Ashlee",
  "Ashleigh",
  "Ashley",
  "Ashly",
  "Ashlynn",
  "Ashton",
  "Ashtyn",
  "Asia",
  "Assunta",
  "Astrid",
  "Athena",
  "Aubree",
  "Aubrey",
  "Audie",
  "Audra",
  "Audreanne",
  "Audrey",
  "August",
  "Augusta",
  "Augustine",
  "Augustus",
  "Aurelia",
  "Aurelie",
  "Aurelio",
  "Aurore",
  "Austen",
  "Austin",
  "Austyn",
  "Autumn",
  "Ava",
  "Avery",
  "Avis",
  "Axel",
  "Ayana",
  "Ayden",
  "Ayla",
  "Aylin",
  "Baby",
  "Bailee",
  "Bailey",
  "Barbara",
  "Barney",
  "Baron",
  "Barrett",
  "Barry",
  "Bart",
  "Bartholome",
  "Barton",
  "Baylee",
  "Beatrice",
  "Beau",
  "Beaulah",
  "Bell",
  "Bella",
  "Belle",
  "Ben",
  "Benedict",
  "Benjamin",
  "Bennett",
  "Bennie",
  "Benny",
  "Benton",
  "Berenice",
  "Bernadette",
  "Bernadine",
  "Bernard",
  "Bernardo",
  "Berneice",
  "Bernhard",
  "Bernice",
  "Bernie",
  "Berniece",
  "Bernita",
  "Berry",
  "Bert",
  "Berta",
  "Bertha",
  "Bertram",
  "Bertrand",
  "Beryl",
  "Bessie",
  "Beth",
  "Bethany",
  "Bethel",
  "Betsy",
  "Bette",
  "Bettie",
  "Betty",
  "Bettye",
  "Beulah",
  "Beverly",
  "Bianka",
  "Bill",
  "Billie",
  "Billy",
  "Birdie",
  "Blair",
  "Blaise",
  "Blake",
  "Blanca",
  "Blanche",
  "Blaze",
  "Bo",
  "Bobbie",
  "Bobby",
  "Bonita",
  "Bonnie",
  "Boris",
  "Boyd",
  "Brad",
  "Braden",
  "Bradford",
  "Bradley",
  "Bradly",
  "Brady",
  "Braeden",
  "Brain",
  "Brandi",
  "Brando",
  "Brandon",
  "Brandt",
  "Brandy",
  "Brandyn",
  "Brannon",
  "Branson",
  "Brant",
  "Braulio",
  "Braxton",
  "Brayan",
  "Breana",
  "Breanna",
  "Breanne",
  "Brenda",
  "Brendan",
  "Brenden",
  "Brendon",
  "Brenna",
  "Brennan",
  "Brennon",
  "Brent",
  "Bret",
  "Brett",
  "Bria",
  "Brian",
  "Briana",
  "Brianne",
  "Brice",
  "Bridget",
  "Bridgette",
  "Bridie",
  "Brielle",
  "Brigitte",
  "Brionna",
  "Brisa",
  "Britney",
  "Brittany",
  "Brock",
  "Broderick",
  "Brody",
  "Brook",
  "Brooke",
  "Brooklyn",
  "Brooks",
  "Brown",
  "Bruce",
  "Bryana",
  "Bryce",
  "Brycen",
  "Bryon",
  "Buck",
  "Bud",
  "Buddy",
  "Buford",
  "Bulah",
  "Burdette",
  "Burley",
  "Burnice",
  "Buster",
  "Cade",
  "Caden",
  "Caesar",
  "Caitlyn",
  "Cale",
  "Caleb",
  "Caleigh",
  "Cali",
  "Calista",
  "Callie",
  "Camden",
  "Cameron",
  "Camila",
  "Camilla",
  "Camille",
  "Camren",
  "Camron",
  "Camryn",
  "Camylle",
  "Candace",
  "Candelario",
  "Candice",
  "Candida",
  "Candido",
  "Cara",
  "Carey",
  "Carissa",
  "Carlee",
  "Carleton",
  "Carley",
  "Carli",
  "Carlie",
  "Carlo",
  "Carlos",
  "Carlotta",
  "Carmel",
  "Carmela",
  "Carmella",
  "Carmelo",
  "Carmen",
  "Carmine",
  "Carol",
  "Carolanne",
  "Carole",
  "Carolina",
  "Caroline",
  "Carolyn",
  "Carolyne",
  "Carrie",
  "Carroll",
  "Carson",
  "Carter",
  "Cary",
  "Casandra",
  "Casey",
  "Casimer",
  "Casimir",
  "Casper",
  "Cassandra",
  "Cassandre",
  "Cassidy",
  "Cassie",
  "Catalina",
  "Caterina",
  "Catharine",
  "Catherine",
  "Cathrine",
  "Cathryn",
  "Cathy",
  "Cayla",
  "Ceasar",
  "Cecelia",
  "Cecil",
  "Cecile",
  "Cecilia",
  "Cedrick",
  "Celestine",
  "Celestino",
  "Celia",
  "Celine",
  "Cesar",
  "Chad",
  "Chadd",
  "Chadrick",
  "Chaim",
  "Chance",
  "Chandler",
  "Chanel",
  "Chanelle",
  "Charity",
  "Charlene",
  "Charles",
  "Charley",
  "Charlie",
  "Charlotte",
  "Chase",
  "Chasity",
  "Chauncey",
  "Chaya",
  "Chaz",
  "Chelsea",
  "Chelsey",
  "Chelsie",
  "Chesley",
  "Chester",
  "Chet",
  "Cheyanne",
  "Cheyenne",
  "Chloe",
  "Chris",
  "Christ",
  "Christa",
  "Christelle",
  "Christian",
  "Christiana",
  "Christina",
  "Christine",
  "Christop",
  "Christophe",
  "Christopher",
  "Christy",
  "Chyna",
  "Ciara",
  "Cicero",
  "Cielo",
  "Cierra",
  "Cindy",
  "Citlalli",
  "Clair",
  "Claire",
  "Clara",
  "Clarabelle",
  "Clare",
  "Clarissa",
  "Clark",
  "Claud",
  "Claude",
  "Claudia",
  "Claudie",
  "Claudine",
  "Clay",
  "Clemens",
  "Clement",
  "Clementina",
  "Clementine",
  "Clemmie",
  "Cleo",
  "Cleora",
  "Cleta",
  "Cletus",
  "Cleve",
  "Cleveland",
  "Clifford",
  "Clifton",
  "Clint",
  "Clinton",
  "Clotilde",
  "Clovis",
  "Cloyd",
  "Clyde",
  "Coby",
  "Cody",
  "Colby",
  "Cole",
  "Coleman",
  "Colin",
  "Colleen",
  "Collin",
  "Colt",
  "Colten",
  "Colton",
  "Columbus",
  "Concepcion",
  "Conner",
  "Connie",
  "Connor",
  "Conor",
  "Conrad",
  "Constance",
  "Constantin",
  "Consuelo",
  "Cooper",
  "Cora",
  "Coralie",
  "Corbin",
  "Cordelia",
  "Cordell",
  "Cordia",
  "Cordie",
  "Corene",
  "Corine",
  "Cornelius",
  "Cornell",
  "Corrine",
  "Cortez",
  "Cortney",
  "Cory",
  "Coty",
  "Courtney",
  "Coy",
  "Craig",
  "Crawford",
  "Creola",
  "Cristal",
  "Cristian",
  "Cristina",
  "Cristobal",
  "Cristopher",
  "Cruz",
  "Crystal",
  "Crystel",
  "Cullen",
  "Curt",
  "Curtis",
  "Cydney",
  "Cynthia",
  "Cyril",
  "Cyrus",
  "Dagmar",
  "Dahlia",
  "Daija",
  "Daisha",
  "Daisy",
  "Dakota",
  "Dale",
  "Dallas",
  "Dallin",
  "Dalton",
  "Damaris",
  "Dameon",
  "Damian",
  "Damien",
  "Damion",
  "Damon",
  "Dan",
  "Dana",
  "Dandre",
  "Dane",
  "D'angelo",
  "Dangelo",
  "Danial",
  "Daniela",
  "Daniella",
  "Danielle",
  "Danika",
  "Dannie",
  "Danny",
  "Dante",
  "Danyka",
  "Daphne",
  "Daphnee",
  "Daphney",
  "Darby",
  "Daren",
  "Darian",
  "Dariana",
  "Darien",
  "Dario",
  "Darion",
  "Darius",
  "Darlene",
  "Daron",
  "Darrel",
  "Darrell",
  "Darren",
  "Darrick",
  "Darrin",
  "Darrion",
  "Darron",
  "Darryl",
  "Darwin",
  "Daryl",
  "Dashawn",
  "Dasia",
  "Dave",
  "David",
  "Davin",
  "Davion",
  "Davon",
  "Davonte",
  "Dawn",
  "Dawson",
  "Dax",
  "Dayana",
  "Dayna",
  "Dayne",
  "Dayton",
  "Dean",
  "Deangelo",
  "Deanna",
  "Deborah",
  "Declan",
  "Dedric",
  "Dedrick",
  "Dee",
  "Deion",
  "Deja",
  "Dejah",
  "Dejon",
  "Dejuan",
  "Delaney",
  "Delbert",
  "Delfina",
  "Delia",
  "Delilah",
  "Dell",
  "Della",
  "Delmer",
  "Delores",
  "Delpha",
  "Delphia",
  "Delphine",
  "Delta",
  "Demarco",
  "Demarcus",
  "Demario",
  "Demetris",
  "Demetrius",
  "Demond",
  "Dena",
  "Denis",
  "Dennis",
  "Deon",
  "Deondre",
  "Deontae",
  "Deonte",
  "Dereck",
  "Derek",
  "Derick",
  "Deron",
  "Derrick",
  "Deshaun",
  "Deshawn",
  "Desiree",
  "Desmond",
  "Dessie",
  "Destany",
  "Destin",
  "Destinee",
  "Destiney",
  "Destini",
  "Destiny",
  "Devan",
  "Devante",
  "Deven",
  "Devin",
  "Devon",
  "Devonte",
  "Devyn",
  "Dewayne",
  "Dewitt",
  "Dexter",
  "Diamond",
  "Diana",
  "Dianna",
  "Diego",
  "Dillan",
  "Dillon",
  "Dimitri",
  "Dina",
  "Dino",
  "Dion",
  "Dixie",
  "Dock",
  "Dolly",
  "Dolores",
  "Domenic",
  "Domenica",
  "Domenick",
  "Domenico",
  "Domingo",
  "Dominic",
  "Dominique",
  "Don",
  "Donald",
  "Donato",
  "Donavon",
  "Donna",
  "Donnell",
  "Donnie",
  "Donny",
  "Dora",
  "Dorcas",
  "Dorian",
  "Doris",
  "Dorothea",
  "Dorothy",
  "Dorris",
  "Dortha",
  "Dorthy",
  "Doug",
  "Douglas",
  "Dovie",
  "Doyle",
  "Drake",
  "Drew",
  "Duane",
  "Dudley",
  "Dulce",
  "Duncan",
  "Durward",
  "Dustin",
  "Dusty",
  "Dwight",
  "Dylan",
  "Earl",
  "Earlene",
  "Earline",
  "Earnest",
  "Earnestine",
  "Easter",
  "Easton",
  "Ebba",
  "Ebony",
  "Ed",
  "Eda",
  "Edd",
  "Eddie",
  "Eden",
  "Edgar",
  "Edgardo",
  "Edison",
  "Edmond",
  "Edmund",
  "Edna",
  "Eduardo",
  "Edward",
  "Edwardo",
  "Edwin",
  "Edwina",
  "Edyth",
  "Edythe",
  "Effie",
  "Efrain",
  "Efren",
  "Eileen",
  "Einar",
  "Eino",
  "Eladio",
  "Elaina",
  "Elbert",
  "Elda",
  "Eldon",
  "Eldora",
  "Eldred",
  "Eldridge",
  "Eleanora",
  "Eleanore",
  "Eleazar",
  "Electa",
  "Elena",
  "Elenor",
  "Elenora",
  "Eleonore",
  "Elfrieda",
  "Eli",
  "Elian",
  "Eliane",
  "Elias",
  "Eliezer",
  "Elijah",
  "Elinor",
  "Elinore",
  "Elisa",
  "Elisabeth",
  "Elise",
  "Eliseo",
  "Elisha",
  "Elissa",
  "Eliza",
  "Elizabeth",
  "Ella",
  "Ellen",
  "Ellie",
  "Elliot",
  "Elliott",
  "Ellis",
  "Ellsworth",
  "Elmer",
  "Elmira",
  "Elmo",
  "Elmore",
  "Elna",
  "Elnora",
  "Elody",
  "Eloisa",
  "Eloise",
  "Elouise",
  "Eloy",
  "Elroy",
  "Elsa",
  "Else",
  "Elsie",
  "Elta",
  "Elton",
  "Elva",
  "Elvera",
  "Elvie",
  "Elvis",
  "Elwin",
  "Elwyn",
  "Elyse",
  "Elyssa",
  "Elza",
  "Emanuel",
  "Emelia",
  "Emelie",
  "Emely",
  "Emerald",
  "Emerson",
  "Emery",
  "Emie",
  "Emil",
  "Emile",
  "Emilia",
  "Emiliano",
  "Emilie",
  "Emilio",
  "Emily",
  "Emma",
  "Emmalee",
  "Emmanuel",
  "Emmanuelle",
  "Emmet",
  "Emmett",
  "Emmie",
  "Emmitt",
  "Emmy",
  "Emory",
  "Ena",
  "Enid",
  "Enoch",
  "Enola",
  "Enos",
  "Enrico",
  "Enrique",
  "Ephraim",
  "Era",
  "Eriberto",
  "Eric",
  "Erica",
  "Erich",
  "Erick",
  "Ericka",
  "Erik",
  "Erika",
  "Erin",
  "Erling",
  "Erna",
  "Ernest",
  "Ernestina",
  "Ernestine",
  "Ernesto",
  "Ernie",
  "Ervin",
  "Erwin",
  "Eryn",
  "Esmeralda",
  "Esperanza",
  "Esta",
  "Esteban",
  "Estefania",
  "Estel",
  "Estell",
  "Estella",
  "Estelle",
  "Estevan",
  "Esther",
  "Estrella",
  "Etha",
  "Ethan",
  "Ethel",
  "Ethelyn",
  "Ethyl",
  "Ettie",
  "Eudora",
  "Eugene",
  "Eugenia",
  "Eula",
  "Eulah",
  "Eulalia",
  "Euna",
  "Eunice",
  "Eusebio",
  "Eva",
  "Evalyn",
  "Evan",
  "Evangeline",
  "Evans",
  "Eve",
  "Eveline",
  "Evelyn",
  "Everardo",
  "Everett",
  "Everette",
  "Evert",
  "Evie",
  "Ewald",
  "Ewell",
  "Ezekiel",
  "Ezequiel",
  "Ezra",
  "Fabian",
  "Fabiola",
  "Fae",
  "Fannie",
  "Fanny",
  "Fatima",
  "Faustino",
  "Fausto",
  "Favian",
  "Fay",
  "Faye",
  "Federico",
  "Felicia",
  "Felicita",
  "Felicity",
  "Felipa",
  "Felipe",
  "Felix",
  "Felton",
  "Fermin",
  "Fern",
  "Fernando",
  "Ferne",
  "Fidel",
  "Filiberto",
  "Filomena",
  "Finn",
  "Fiona",
  "Flavie",
  "Flavio",
  "Fleta",
  "Fletcher",
  "Flo",
  "Florence",
  "Florencio",
  "Florian",
  "Florida",
  "Florine",
  "Flossie",
  "Floy",
  "Floyd",
  "Ford",
  "Forest",
  "Forrest",
  "Foster",
  "Frances",
  "Francesca",
  "Francesco",
  "Francis",
  "Francisca",
  "Francisco",
  "Franco",
  "Frank",
  "Frankie",
  "Franz",
  "Fred",
  "Freda",
  "Freddie",
  "Freddy",
  "Frederic",
  "Frederick",
  "Frederik",
  "Frederique",
  "Fredrick",
  "Fredy",
  "Freeda",
  "Freeman",
  "Freida",
  "Frida",
  "Frieda",
  "Friedrich",
  "Fritz",
  "Furman",
  "Gabe",
  "Gabriel",
  "Gabriella",
  "Gabrielle",
  "Gaetano",
  "Gage",
  "Gail",
  "Gardner",
  "Garett",
  "Garfield",
  "Garland",
  "Garnet",
  "Garnett",
  "Garret",
  "Garrett",
  "Garrick",
  "Garrison",
  "Garry",
  "Garth",
  "Gaston",
  "Gavin",
  "Gay",
  "Gayle",
  "Gaylord",
  "Gene",
  "General",
  "Genesis",
  "Genevieve",
  "Gennaro",
  "Genoveva",
  "Geo",
  "Geoffrey",
  "George",
  "Georgette",
  "Georgiana",
  "Georgianna",
  "Geovanni",
  "Geovanny",
  "Geovany",
  "Gerald",
  "Geraldine",
  "Gerard",
  "Gerardo",
  "Gerda",
  "Gerhard",
  "Germaine",
  "German",
  "Gerry",
  "Gerson",
  "Gertrude",
  "Gia",
  "Gianni",
  "Gideon",
  "Gilbert",
  "Gilberto",
  "Gilda",
  "Giles",
  "Gillian",
  "Gina",
  "Gino",
  "Giovani",
  "Giovanna",
  "Giovanni",
  "Giovanny",
  "Gisselle",
  "Giuseppe",
  "Gladyce",
  "Gladys",
  "Glen",
  "Glenda",
  "Glenna",
  "Glennie",
  "Gloria",
  "Godfrey",
  "Golda",
  "Golden",
  "Gonzalo",
  "Gordon",
  "Grace",
  "Gracie",
  "Graciela",
  "Grady",
  "Graham",
  "Grant",
  "Granville",
  "Grayce",
  "Grayson",
  "Green",
  "Greg",
  "Gregg",
  "Gregoria",
  "Gregorio",
  "Gregory",
  "Greta",
  "Gretchen",
  "Greyson",
  "Griffin",
  "Grover",
  "Guadalupe",
  "Gudrun",
  "Guido",
  "Guillermo",
  "Guiseppe",
  "Gunnar",
  "Gunner",
  "Gus",
  "Gussie",
  "Gust",
  "Gustave",
  "Guy",
  "Gwen",
  "Gwendolyn",
  "Hadley",
  "Hailee",
  "Hailey",
  "Hailie",
  "Hal",
  "Haleigh",
  "Haley",
  "Halie",
  "Halle",
  "Hallie",
  "Hank",
  "Hanna",
  "Hannah",
  "Hans",
  "Hardy",
  "Harley",
  "Harmon",
  "Harmony",
  "Harold",
  "Harrison",
  "Harry",
  "Harvey",
  "Haskell",
  "Hassan",
  "Hassie",
  "Hattie",
  "Haven",
  "Hayden",
  "Haylee",
  "Hayley",
  "Haylie",
  "Hazel",
  "Hazle",
  "Heath",
  "Heather",
  "Heaven",
  "Heber",
  "Hector",
  "Heidi",
  "Helen",
  "Helena",
  "Helene",
  "Helga",
  "Hellen",
  "Helmer",
  "Heloise",
  "Henderson",
  "Henri",
  "Henriette",
  "Henry",
  "Herbert",
  "Herman",
  "Hermann",
  "Hermina",
  "Herminia",
  "Herminio",
  "Hershel",
  "Herta",
  "Hertha",
  "Hester",
  "Hettie",
  "Hilario",
  "Hilbert",
  "Hilda",
  "Hildegard",
  "Hillard",
  "Hillary",
  "Hilma",
  "Hilton",
  "Hipolito",
  "Hiram",
  "Hobart",
  "Holden",
  "Hollie",
  "Hollis",
  "Holly",
  "Hope",
  "Horace",
  "Horacio",
  "Hortense",
  "Hosea",
  "Houston",
  "Howard",
  "Howell",
  "Hoyt",
  "Hubert",
  "Hudson",
  "Hugh",
  "Hulda",
  "Humberto",
  "Hunter",
  "Hyman",
  "Ian",
  "Ibrahim",
  "Icie",
  "Ida",
  "Idell",
  "Idella",
  "Ignacio",
  "Ignatius",
  "Ike",
  "Ila",
  "Ilene",
  "Iliana",
  "Ima",
  "Imani",
  "Imelda",
  "Immanuel",
  "Imogene",
  "Ines",
  "Irma",
  "Irving",
  "Irwin",
  "Isaac",
  "Isabel",
  "Isabell",
  "Isabella",
  "Isabelle",
  "Isac",
  "Isadore",
  "Isai",
  "Isaiah",
  "Isaias",
  "Isidro",
  "Ismael",
  "Isobel",
  "Isom",
  "Israel",
  "Issac",
  "Itzel",
  "Iva",
  "Ivah",
  "Ivory",
  "Ivy",
  "Izabella",
  "Izaiah",
  "Jabari",
  "Jace",
  "Jacey",
  "Jacinthe",
  "Jacinto",
  "Jack",
  "Jackeline",
  "Jackie",
  "Jacklyn",
  "Jackson",
  "Jacky",
  "Jaclyn",
  "Jacquelyn",
  "Jacques",
  "Jacynthe",
  "Jada",
  "Jade",
  "Jaden",
  "Jadon",
  "Jadyn",
  "Jaeden",
  "Jaida",
  "Jaiden",
  "Jailyn",
  "Jaime",
  "Jairo",
  "Jakayla",
  "Jake",
  "Jakob",
  "Jaleel",
  "Jalen",
  "Jalon",
  "Jalyn",
  "Jamaal",
  "Jamal",
  "Jamar",
  "Jamarcus",
  "Jamel",
  "Jameson",
  "Jamey",
  "Jamie",
  "Jamil",
  "Jamir",
  "Jamison",
  "Jammie",
  "Jan",
  "Jana",
  "Janae",
  "Jane",
  "Janelle",
  "Janessa",
  "Janet",
  "Janice",
  "Janick",
  "Janie",
  "Janis",
  "Janiya",
  "Jannie",
  "Jany",
  "Jaquan",
  "Jaquelin",
  "Jaqueline",
  "Jared",
  "Jaren",
  "Jarod",
  "Jaron",
  "Jarred",
  "Jarrell",
  "Jarret",
  "Jarrett",
  "Jarrod",
  "Jarvis",
  "Jasen",
  "Jasmin",
  "Jason",
  "Jasper",
  "Jaunita",
  "Javier",
  "Javon",
  "Javonte",
  "Jay",
  "Jayce",
  "Jaycee",
  "Jayda",
  "Jayde",
  "Jayden",
  "Jaydon",
  "Jaylan",
  "Jaylen",
  "Jaylin",
  "Jaylon",
  "Jayme",
  "Jayne",
  "Jayson",
  "Jazlyn",
  "Jazmin",
  "Jazmyn",
  "Jazmyne",
  "Jean",
  "Jeanette",
  "Jeanie",
  "Jeanne",
  "Jed",
  "Jedediah",
  "Jedidiah",
  "Jeff",
  "Jefferey",
  "Jeffery",
  "Jeffrey",
  "Jeffry",
  "Jena",
  "Jenifer",
  "Jennie",
  "Jennifer",
  "Jennings",
  "Jennyfer",
  "Jensen",
  "Jerad",
  "Jerald",
  "Jeramie",
  "Jeramy",
  "Jerel",
  "Jeremie",
  "Jeremy",
  "Jermain",
  "Jermaine",
  "Jermey",
  "Jerod",
  "Jerome",
  "Jeromy",
  "Jerrell",
  "Jerrod",
  "Jerrold",
  "Jerry",
  "Jess",
  "Jesse",
  "Jessica",
  "Jessie",
  "Jessika",
  "Jessy",
  "Jessyca",
  "Jesus",
  "Jett",
  "Jettie",
  "Jevon",
  "Jewel",
  "Jewell",
  "Jillian",
  "Jimmie",
  "Jimmy",
  "Jo",
  "Joan",
  "Joana",
  "Joanie",
  "Joanne",
  "Joannie",
  "Joanny",
  "Joany",
  "Joaquin",
  "Jocelyn",
  "Jodie",
  "Jody",
  "Joe",
  "Joel",
  "Joelle",
  "Joesph",
  "Joey",
  "Johan",
  "Johann",
  "Johanna",
  "Johathan",
  "John",
  "Johnathan",
  "Johnathon",
  "Johnnie",
  "Johnny",
  "Johnpaul",
  "Johnson",
  "Jolie",
  "Jon",
  "Jonas",
  "Jonatan",
  "Jonathan",
  "Jonathon",
  "Jordan",
  "Jordane",
  "Jordi",
  "Jordon",
  "Jordy",
  "Jordyn",
  "Jorge",
  "Jose",
  "Josefa",
  "Josefina",
  "Joseph",
  "Josephine",
  "Josh",
  "Joshua",
  "Joshuah",
  "Josiah",
  "Josiane",
  "Josianne",
  "Josie",
  "Josue",
  "Jovan",
  "Jovani",
  "Jovanny",
  "Jovany",
  "Joy",
  "Joyce",
  "Juana",
  "Juanita",
  "Judah",
  "Judd",
  "Jude",
  "Judge",
  "Judson",
  "Judy",
  "Jules",
  "Julia",
  "Julian",
  "Juliana",
  "Julianne",
  "Julie",
  "Julien",
  "Juliet",
  "Julio",
  "Julius",
  "June",
  "Junior",
  "Junius",
  "Justen",
  "Justice",
  "Justina",
  "Justine",
  "Juston",
  "Justus",
  "Justyn",
  "Juvenal",
  "Juwan",
  "Kacey",
  "Kaci",
  "Kacie",
  "Kade",
  "Kaden",
  "Kadin",
  "Kaela",
  "Kaelyn",
  "Kaia",
  "Kailee",
  "Kailey",
  "Kailyn",
  "Kaitlin",
  "Kaitlyn",
  "Kale",
  "Kaleb",
  "Kaleigh",
  "Kaley",
  "Kali",
  "Kallie",
  "Kameron",
  "Kamille",
  "Kamren",
  "Kamron",
  "Kamryn",
  "Kane",
  "Kara",
  "Kareem",
  "Karelle",
  "Karen",
  "Kari",
  "Kariane",
  "Karianne",
  "Karina",
  "Karine",
  "Karl",
  "Karlee",
  "Karley",
  "Karli",
  "Karlie",
  "Karolann",
  "Karson",
  "Kasandra",
  "Kasey",
  "Kassandra",
  "Katarina",
  "Katelin",
  "Katelyn",
  "Katelynn",
  "Katharina",
  "Katherine",
  "Katheryn",
  "Kathleen",
  "Kathlyn",
  "Kathryn",
  "Kathryne",
  "Katlyn",
  "Katlynn",
  "Katrina",
  "Katrine",
  "Kattie",
  "Kavon",
  "Kay",
  "Kaya",
  "Kaycee",
  "Kayden",
  "Kayla",
  "Kaylah",
  "Kaylee",
  "Kayleigh",
  "Kayley",
  "Kayli",
  "Kaylie",
  "Kaylin",
  "Keagan",
  "Keanu",
  "Keara",
  "Keaton",
  "Keegan",
  "Keeley",
  "Keely",
  "Keenan",
  "Keira",
  "Keith",
  "Kellen",
  "Kelley",
  "Kelli",
  "Kellie",
  "Kelly",
  "Kelsi",
  "Kelsie",
  "Kelton",
  "Kelvin",
  "Ken",
  "Kendall",
  "Kendra",
  "Kendrick",
  "Kenna",
  "Kennedi",
  "Kennedy",
  "Kenneth",
  "Kennith",
  "Kenny",
  "Kenton",
  "Kenya",
  "Kenyatta",
  "Kenyon",
  "Keon",
  "Keshaun",
  "Keshawn",
  "Keven",
  "Kevin",
  "Kevon",
  "Keyon",
  "Keyshawn",
  "Khalid",
  "Khalil",
  "Kian",
  "Kiana",
  "Kianna",
  "Kiara",
  "Kiarra",
  "Kiel",
  "Kiera",
  "Kieran",
  "Kiley",
  "Kim",
  "Kimberly",
  "King",
  "Kip",
  "Kira",
  "Kirk",
  "Kirsten",
  "Kirstin",
  "Kitty",
  "Kobe",
  "Koby",
  "Kody",
  "Kolby",
  "Kole",
  "Korbin",
  "Korey",
  "Kory",
  "Kraig",
  "Kris",
  "Krista",
  "Kristian",
  "Kristin",
  "Kristina",
  "Kristofer",
  "Kristoffer",
  "Kristopher",
  "Kristy",
  "Krystal",
  "Krystel",
  "Krystina",
  "Kurt",
  "Kurtis",
  "Kyla",
  "Kyle",
  "Kylee",
  "Kyleigh",
  "Kyler",
  "Kylie",
  "Kyra",
  "Lacey",
  "Lacy",
  "Ladarius",
  "Lafayette",
  "Laila",
  "Laisha",
  "Lamar",
  "Lambert",
  "Lamont",
  "Lance",
  "Landen",
  "Lane",
  "Laney",
  "Larissa",
  "Laron",
  "Larry",
  "Larue",
  "Laura",
  "Laurel",
  "Lauren",
  "Laurence",
  "Lauretta",
  "Lauriane",
  "Laurianne",
  "Laurie",
  "Laurine",
  "Laury",
  "Lauryn",
  "Lavada",
  "Lavern",
  "Laverna",
  "Laverne",
  "Lavina",
  "Lavinia",
  "Lavon",
  "Lavonne",
  "Lawrence",
  "Lawson",
  "Layla",
  "Layne",
  "Lazaro",
  "Lea",
  "Leann",
  "Leanna",
  "Leanne",
  "Leatha",
  "Leda",
  "Lee",
  "Leif",
  "Leila",
  "Leilani",
  "Lela",
  "Lelah",
  "Leland",
  "Lelia",
  "Lempi",
  "Lemuel",
  "Lenna",
  "Lennie",
  "Lenny",
  "Lenora",
  "Lenore",
  "Leo",
  "Leola",
  "Leon",
  "Leonard",
  "Leonardo",
  "Leone",
  "Leonel",
  "Leonie",
  "Leonor",
  "Leonora",
  "Leopold",
  "Leopoldo",
  "Leora",
  "Lera",
  "Lesley",
  "Leslie",
  "Lesly",
  "Lessie",
  "Lester",
  "Leta",
  "Letha",
  "Letitia",
  "Levi",
  "Lew",
  "Lewis",
  "Lexi",
  "Lexie",
  "Lexus",
  "Lia",
  "Liam",
  "Liana",
  "Libbie",
  "Libby",
  "Lila",
  "Lilian",
  "Liliana",
  "Liliane",
  "Lilla",
  "Lillian",
  "Lilliana",
  "Lillie",
  "Lilly",
  "Lily",
  "Lilyan",
  "Lina",
  "Lincoln",
  "Linda",
  "Lindsay",
  "Lindsey",
  "Linnea",
  "Linnie",
  "Linwood",
  "Lionel",
  "Lisa",
  "Lisandro",
  "Lisette",
  "Litzy",
  "Liza",
  "Lizeth",
  "Lizzie",
  "Llewellyn",
  "Lloyd",
  "Logan",
  "Lois",
  "Lola",
  "Lolita",
  "Loma",
  "Lon",
  "London",
  "Lonie",
  "Lonnie",
  "Lonny",
  "Lonzo",
  "Lora",
  "Loraine",
  "Loren",
  "Lorena",
  "Lorenz",
  "Lorenza",
  "Lorenzo",
  "Lori",
  "Lorine",
  "Lorna",
  "Lottie",
  "Lou",
  "Louie",
  "Louisa",
  "Lourdes",
  "Louvenia",
  "Lowell",
  "Loy",
  "Loyal",
  "Loyce",
  "Lucas",
  "Luciano",
  "Lucie",
  "Lucienne",
  "Lucile",
  "Lucinda",
  "Lucio",
  "Lucious",
  "Lucius",
  "Lucy",
  "Ludie",
  "Ludwig",
  "Lue",
  "Luella",
  "Luigi",
  "Luis",
  "Luisa",
  "Lukas",
  "Lula",
  "Lulu",
  "Luna",
  "Lupe",
  "Lura",
  "Lurline",
  "Luther",
  "Luz",
  "Lyda",
  "Lydia",
  "Lyla",
  "Lynn",
  "Lyric",
  "Lysanne",
  "Mabel",
  "Mabelle",
  "Mable",
  "Mac",
  "Macey",
  "Maci",
  "Macie",
  "Mack",
  "Mackenzie",
  "Macy",
  "Madaline",
  "Madalyn",
  "Maddison",
  "Madeline",
  "Madelyn",
  "Madelynn",
  "Madge",
  "Madie",
  "Madilyn",
  "Madisen",
  "Madison",
  "Madisyn",
  "Madonna",
  "Madyson",
  "Mae",
  "Maegan",
  "Maeve",
  "Mafalda",
  "Magali",
  "Magdalen",
  "Magdalena",
  "Maggie",
  "Magnolia",
  "Magnus",
  "Maia",
  "Maida",
  "Maiya",
  "Major",
  "Makayla",
  "Makenna",
  "Makenzie",
  "Malachi",
  "Malcolm",
  "Malika",
  "Malinda",
  "Mallie",
  "Mallory",
  "Malvina",
  "Mandy",
  "Manley",
  "Manuel",
  "Manuela",
  "Mara",
  "Marc",
  "Marcel",
  "Marcelina",
  "Marcelino",
  "Marcella",
  "Marcelle",
  "Marcellus",
  "Marcelo",
  "Marcia",
  "Marco",
  "Marcos",
  "Marcus",
  "Margaret",
  "Margarete",
  "Margarett",
  "Margaretta",
  "Margarette",
  "Margarita",
  "Marge",
  "Margie",
  "Margot",
  "Margret",
  "Marguerite",
  "Maria",
  "Mariah",
  "Mariam",
  "Marian",
  "Mariana",
  "Mariane",
  "Marianna",
  "Marianne",
  "Mariano",
  "Maribel",
  "Marie",
  "Mariela",
  "Marielle",
  "Marietta",
  "Marilie",
  "Marilou",
  "Marilyne",
  "Marina",
  "Mario",
  "Marion",
  "Marisa",
  "Marisol",
  "Maritza",
  "Marjolaine",
  "Marjorie",
  "Marjory",
  "Mark",
  "Markus",
  "Marlee",
  "Marlen",
  "Marlene",
  "Marley",
  "Marlin",
  "Marlon",
  "Marques",
  "Marquis",
  "Marquise",
  "Marshall",
  "Marta",
  "Martin",
  "Martina",
  "Martine",
  "Marty",
  "Marvin",
  "Mary",
  "Maryam",
  "Maryjane",
  "Maryse",
  "Mason",
  "Mateo",
  "Mathew",
  "Mathias",
  "Mathilde",
  "Matilda",
  "Matilde",
  "Matt",
  "Matteo",
  "Mattie",
  "Maud",
  "Maude",
  "Maudie",
  "Maureen",
  "Maurice",
  "Mauricio",
  "Maurine",
  "Maverick",
  "Mavis",
  "Max",
  "Maxie",
  "Maxime",
  "Maximilian",
  "Maximillia",
  "Maximillian",
  "Maximo",
  "Maximus",
  "Maxine",
  "Maxwell",
  "May",
  "Maya",
  "Maybell",
  "Maybelle",
  "Maye",
  "Maymie",
  "Maynard",
  "Mayra",
  "Mazie",
  "Mckayla",
  "Mckenna",
  "Mckenzie",
  "Meagan",
  "Meaghan",
  "Meda",
  "Megane",
  "Meggie",
  "Meghan",
  "Mekhi",
  "Melany",
  "Melba",
  "Melisa",
  "Melissa",
  "Mellie",
  "Melody",
  "Melvin",
  "Melvina",
  "Melyna",
  "Melyssa",
  "Mercedes",
  "Meredith",
  "Merl",
  "Merle",
  "Merlin",
  "Merritt",
  "Mertie",
  "Mervin",
  "Meta",
  "Mia",
  "Micaela",
  "Micah",
  "Michael",
  "Michaela",
  "Michale",
  "Micheal",
  "Michel",
  "Michele",
  "Michelle",
  "Miguel",
  "Mikayla",
  "Mike",
  "Mikel",
  "Milan",
  "Miles",
  "Milford",
  "Miller",
  "Millie",
  "Milo",
  "Milton",
  "Mina",
  "Minerva",
  "Minnie",
  "Miracle",
  "Mireille",
  "Mireya",
  "Misael",
  "Missouri",
  "Misty",
  "Mitchel",
  "Mitchell",
  "Mittie",
  "Modesta",
  "Modesto",
  "Mohamed",
  "Mohammad",
  "Mohammed",
  "Moises",
  "Mollie",
  "Molly",
  "Mona",
  "Monica",
  "Monique",
  "Monroe",
  "Monserrat",
  "Monserrate",
  "Montana",
  "Monte",
  "Monty",
  "Morgan",
  "Moriah",
  "Morris",
  "Mortimer",
  "Morton",
  "Mose",
  "Moses",
  "Moshe",
  "Mossie",
  "Mozell",
  "Mozelle",
  "Muhammad",
  "Muriel",
  "Murl",
  "Murphy",
  "Murray",
  "Mustafa",
  "Mya",
  "Myah",
  "Mylene",
  "Myles",
  "Myra",
  "Myriam",
  "Myrl",
  "Myrna",
  "Myron",
  "Myrtice",
  "Myrtie",
  "Myrtis",
  "Myrtle",
  "Nadia",
  "Nakia",
  "Name",
  "Nannie",
  "Naomi",
  "Naomie",
  "Napoleon",
  "Narciso",
  "Nash",
  "Nasir",
  "Nat",
  "Natalia",
  "Natalie",
  "Natasha",
  "Nathan",
  "Nathanael",
  "Nathanial",
  "Nathaniel",
  "Nathen",
  "Nayeli",
  "Neal",
  "Ned",
  "Nedra",
  "Neha",
  "Neil",
  "Nelda",
  "Nella",
  "Nelle",
  "Nellie",
  "Nels",
  "Nelson",
  "Neoma",
  "Nestor",
  "Nettie",
  "Neva",
  "Newell",
  "Newton",
  "Nia",
  "Nicholas",
  "Nicholaus",
  "Nichole",
  "Nick",
  "Nicklaus",
  "Nickolas",
  "Nico",
  "Nicola",
  "Nicolas",
  "Nicole",
  "Nicolette",
  "Nigel",
  "Nikita",
  "Nikki",
  "Nikko",
  "Niko",
  "Nikolas",
  "Nils",
  "Nina",
  "Noah",
  "Noble",
  "Noe",
  "Noel",
  "Noelia",
  "Noemi",
  "Noemie",
  "Noemy",
  "Nola",
  "Nolan",
  "Nona",
  "Nora",
  "Norbert",
  "Norberto",
  "Norene",
  "Norma",
  "Norris",
  "Norval",
  "Norwood",
  "Nova",
  "Novella",
  "Nya",
  "Nyah",
  "Nyasia",
  "Obie",
  "Oceane",
  "Ocie",
  "Octavia",
  "Oda",
  "Odell",
  "Odessa",
  "Odie",
  "Ofelia",
  "Okey",
  "Ola",
  "Olaf",
  "Ole",
  "Olen",
  "Oleta",
  "Olga",
  "Olin",
  "Oliver",
  "Ollie",
  "Oma",
  "Omari",
  "Omer",
  "Ona",
  "Onie",
  "Opal",
  "Ophelia",
  "Ora",
  "Oral",
  "Oran",
  "Oren",
  "Orie",
  "Orin",
  "Orion",
  "Orland",
  "Orlando",
  "Orlo",
  "Orpha",
  "Orrin",
  "Orval",
  "Orville",
  "Osbaldo",
  "Osborne",
  "Oscar",
  "Osvaldo",
  "Oswald",
  "Oswaldo",
  "Otha",
  "Otho",
  "Otilia",
  "Otis",
  "Ottilie",
  "Ottis",
  "Otto",
  "Ova",
  "Owen",
  "Ozella",
  "Pablo",
  "Paige",
  "Palma",
  "Pamela",
  "Pansy",
  "Paolo",
  "Paris",
  "Parker",
  "Pascale",
  "Pasquale",
  "Pat",
  "Patience",
  "Patricia",
  "Patrick",
  "Patsy",
  "Pattie",
  "Paul",
  "Paula",
  "Pauline",
  "Paxton",
  "Payton",
  "Pearl",
  "Pearlie",
  "Pearline",
  "Pedro",
  "Peggie",
  "Penelope",
  "Percival",
  "Percy",
  "Perry",
  "Pete",
  "Peter",
  "Petra",
  "Peyton",
  "Philip",
  "Phoebe",
  "Phyllis",
  "Pierce",
  "Pierre",
  "Pietro",
  "Pink",
  "Pinkie",
  "Piper",
  "Polly",
  "Porter",
  "Precious",
  "Presley",
  "Preston",
  "Price",
  "Prince",
  "Princess",
  "Priscilla",
  "Providenci",
  "Prudence",
  "Queen",
  "Queenie",
  "Quentin",
  "Quincy",
  "Quinn",
  "Quinten",
  "Quinton",
  "Rachael",
  "Rachel",
  "Rachelle",
  "Rae",
  "Raegan",
  "Rafael",
  "Rafaela",
  "Raheem",
  "Rahsaan",
  "Rahul",
  "Raina",
  "Raleigh",
  "Ralph",
  "Ramiro",
  "Ramon",
  "Ramona",
  "Randal",
  "Randall",
  "Randi",
  "Randy",
  "Ransom",
  "Raoul",
  "Raphael",
  "Raphaelle",
  "Raquel",
  "Rashad",
  "Rashawn",
  "Rasheed",
  "Raul",
  "Raven",
  "Ray",
  "Raymond",
  "Raymundo",
  "Reagan",
  "Reanna",
  "Reba",
  "Rebeca",
  "Rebecca",
  "Rebeka",
  "Rebekah",
  "Reece",
  "Reed",
  "Reese",
  "Regan",
  "Reggie",
  "Reginald",
  "Reid",
  "Reilly",
  "Reina",
  "Reinhold",
  "Remington",
  "Rene",
  "Renee",
  "Ressie",
  "Reta",
  "Retha",
  "Retta",
  "Reuben",
  "Reva",
  "Rex",
  "Rey",
  "Reyes",
  "Reymundo",
  "Reyna",
  "Reynold",
  "Rhea",
  "Rhett",
  "Rhianna",
  "Rhiannon",
  "Rhoda",
  "Ricardo",
  "Richard",
  "Richie",
  "Richmond",
  "Rick",
  "Rickey",
  "Rickie",
  "Ricky",
  "Rico",
  "Rigoberto",
  "Riley",
  "Rita",
  "River",
  "Robb",
  "Robbie",
  "Robert",
  "Roberta",
  "Roberto",
  "Robin",
  "Robyn",
  "Rocio",
  "Rocky",
  "Rod",
  "Roderick",
  "Rodger",
  "Rodolfo",
  "Rodrick",
  "Rodrigo",
  "Roel",
  "Rogelio",
  "Roger",
  "Rogers",
  "Rolando",
  "Rollin",
  "Roma",
  "Romaine",
  "Roman",
  "Ron",
  "Ronaldo",
  "Ronny",
  "Roosevelt",
  "Rory",
  "Rosa",
  "Rosalee",
  "Rosalia",
  "Rosalind",
  "Rosalinda",
  "Rosalyn",
  "Rosamond",
  "Rosanna",
  "Rosario",
  "Roscoe",
  "Rose",
  "Rosella",
  "Roselyn",
  "Rosemarie",
  "Rosemary",
  "Rosendo",
  "Rosetta",
  "Rosie",
  "Rosina",
  "Roslyn",
  "Ross",
  "Rossie",
  "Rowan",
  "Rowena",
  "Rowland",
  "Roxane",
  "Roxanne",
  "Roy",
  "Royal",
  "Royce",
  "Rozella",
  "Ruben",
  "Rubie",
  "Ruby",
  "Rubye",
  "Rudolph",
  "Rudy",
  "Rupert",
  "Russ",
  "Russel",
  "Russell",
  "Rusty",
  "Ruth",
  "Ruthe",
  "Ruthie",
  "Ryan",
  "Ryann",
  "Ryder",
  "Rylan",
  "Rylee",
  "Ryleigh",
  "Ryley",
  "Sabina",
  "Sabrina",
  "Sabryna",
  "Sadie",
  "Sadye",
  "Sage",
  "Saige",
  "Sallie",
  "Sally",
  "Salma",
  "Salvador",
  "Salvatore",
  "Sam",
  "Samanta",
  "Samantha",
  "Samara",
  "Samir",
  "Sammie",
  "Sammy",
  "Samson",
  "Sandra",
  "Sandrine",
  "Sandy",
  "Sanford",
  "Santa",
  "Santiago",
  "Santina",
  "Santino",
  "Santos",
  "Sarah",
  "Sarai",
  "Sarina",
  "Sasha",
  "Saul",
  "Savanah",
  "Savanna",
  "Savannah",
  "Savion",
  "Scarlett",
  "Schuyler",
  "Scot",
  "Scottie",
  "Scotty",
  "Seamus",
  "Sean",
  "Sebastian",
  "Sedrick",
  "Selena",
  "Selina",
  "Selmer",
  "Serena",
  "Serenity",
  "Seth",
  "Shad",
  "Shaina",
  "Shakira",
  "Shana",
  "Shane",
  "Shanel",
  "Shanelle",
  "Shania",
  "Shanie",
  "Shaniya",
  "Shanna",
  "Shannon",
  "Shanny",
  "Shanon",
  "Shany",
  "Sharon",
  "Shaun",
  "Shawn",
  "Shawna",
  "Shaylee",
  "Shayna",
  "Shayne",
  "Shea",
  "Sheila",
  "Sheldon",
  "Shemar",
  "Sheridan",
  "Sherman",
  "Sherwood",
  "Shirley",
  "Shyann",
  "Shyanne",
  "Sibyl",
  "Sid",
  "Sidney",
  "Sienna",
  "Sierra",
  "Sigmund",
  "Sigrid",
  "Sigurd",
  "Silas",
  "Sim",
  "Simeon",
  "Simone",
  "Sincere",
  "Sister",
  "Skye",
  "Skyla",
  "Skylar",
  "Sofia",
  "Soledad",
  "Solon",
  "Sonia",
  "Sonny",
  "Sonya",
  "Sophia",
  "Sophie",
  "Spencer",
  "Stacey",
  "Stacy",
  "Stan",
  "Stanford",
  "Stanley",
  "Stanton",
  "Stefan",
  "Stefanie",
  "Stella",
  "Stephan",
  "Stephania",
  "Stephanie",
  "Stephany",
  "Stephen",
  "Stephon",
  "Sterling",
  "Steve",
  "Stevie",
  "Stewart",
  "Stone",
  "Stuart",
  "Summer",
  "Sunny",
  "Susan",
  "Susana",
  "Susanna",
  "Susie",
  "Suzanne",
  "Sven",
  "Syble",
  "Sydnee",
  "Sydney",
  "Sydni",
  "Sydnie",
  "Sylvan",
  "Sylvester",
  "Sylvia",
  "Tabitha",
  "Tad",
  "Talia",
  "Talon",
  "Tamara",
  "Tamia",
  "Tania",
  "Tanner",
  "Tanya",
  "Tara",
  "Taryn",
  "Tate",
  "Tatum",
  "Tatyana",
  "Taurean",
  "Tavares",
  "Taya",
  "Taylor",
  "Teagan",
  "Ted",
  "Telly",
  "Terence",
  "Teresa",
  "Terrance",
  "Terrell",
  "Terrence",
  "Terrill",
  "Terry",
  "Tess",
  "Tessie",
  "Tevin",
  "Thad",
  "Thaddeus",
  "Thalia",
  "Thea",
  "Thelma",
  "Theo",
  "Theodora",
  "Theodore",
  "Theresa",
  "Therese",
  "Theresia",
  "Theron",
  "Thomas",
  "Thora",
  "Thurman",
  "Tia",
  "Tiana",
  "Tianna",
  "Tiara",
  "Tierra",
  "Tiffany",
  "Tillman",
  "Timmothy",
  "Timmy",
  "Timothy",
  "Tina",
  "Tito",
  "Titus",
  "Tobin",
  "Toby",
  "Tod",
  "Tom",
  "Tomas",
  "Tomasa",
  "Tommie",
  "Toney",
  "Toni",
  "Tony",
  "Torey",
  "Torrance",
  "Torrey",
  "Toy",
  "Trace",
  "Tracey",
  "Tracy",
  "Travis",
  "Travon",
  "Tre",
  "Tremaine",
  "Tremayne",
  "Trent",
  "Trenton",
  "Tressa",
  "Tressie",
  "Treva",
  "Trever",
  "Trevion",
  "Trevor",
  "Trey",
  "Trinity",
  "Trisha",
  "Tristian",
  "Tristin",
  "Triston",
  "Troy",
  "Trudie",
  "Trycia",
  "Trystan",
  "Turner",
  "Twila",
  "Tyler",
  "Tyra",
  "Tyree",
  "Tyreek",
  "Tyrel",
  "Tyrell",
  "Tyrese",
  "Tyrique",
  "Tyshawn",
  "Tyson",
  "Ubaldo",
  "Ulices",
  "Ulises",
  "Una",
  "Unique",
  "Urban",
  "Uriah",
  "Uriel",
  "Ursula",
  "Vada",
  "Valentin",
  "Valentina",
  "Valentine",
  "Valerie",
  "Vallie",
  "Van",
  "Vance",
  "Vanessa",
  "Vaughn",
  "Veda",
  "Velda",
  "Vella",
  "Velma",
  "Velva",
  "Vena",
  "Verda",
  "Verdie",
  "Vergie",
  "Verla",
  "Verlie",
  "Vern",
  "Verna",
  "Verner",
  "Vernice",
  "Vernie",
  "Vernon",
  "Verona",
  "Veronica",
  "Vesta",
  "Vicenta",
  "Vicente",
  "Vickie",
  "Vicky",
  "Victor",
  "Victoria",
  "Vida",
  "Vidal",
  "Vilma",
  "Vince",
  "Vincent",
  "Vincenza",
  "Vincenzo",
  "Vinnie",
  "Viola",
  "Violet",
  "Violette",
  "Virgie",
  "Virgil",
  "Virginia",
  "Virginie",
  "Vita",
  "Vito",
  "Viva",
  "Vivian",
  "Viviane",
  "Vivianne",
  "Vivien",
  "Vivienne",
  "Vladimir",
  "Wade",
  "Waino",
  "Waldo",
  "Walker",
  "Wallace",
  "Walter",
  "Walton",
  "Wanda",
  "Ward",
  "Warren",
  "Watson",
  "Wava",
  "Waylon",
  "Wayne",
  "Webster",
  "Weldon",
  "Wellington",
  "Wendell",
  "Wendy",
  "Werner",
  "Westley",
  "Weston",
  "Whitney",
  "Wilber",
  "Wilbert",
  "Wilburn",
  "Wiley",
  "Wilford",
  "Wilfred",
  "Wilfredo",
  "Wilfrid",
  "Wilhelm",
  "Wilhelmine",
  "Will",
  "Willa",
  "Willard",
  "William",
  "Willie",
  "Willis",
  "Willow",
  "Willy",
  "Wilma",
  "Wilmer",
  "Wilson",
  "Wilton",
  "Winfield",
  "Winifred",
  "Winnifred",
  "Winona",
  "Winston",
  "Woodrow",
  "Wyatt",
  "Wyman",
  "Xander",
  "Xavier",
  "Xzavier",
  "Yadira",
  "Yasmeen",
  "Yasmin",
  "Yasmine",
  "Yazmin",
  "Yesenia",
  "Yessenia",
  "Yolanda",
  "Yoshiko",
  "Yvette",
  "Yvonne",
  "Zachariah",
  "Zachary",
  "Zachery",
  "Zack",
  "Zackary",
  "Zackery",
  "Zakary",
  "Zander",
  "Zane",
  "Zaria",
  "Zechariah",
  "Zelda",
  "Zella",
  "Zelma",
  "Zena",
  "Zetta",
  "Zion",
  "Zita",
  "Zoe",
  "Zoey",
  "Zoie",
  "Zoila",
  "Zola",
  "Zora",
  "Zula"
];

},{}],203:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.title = require("./title");
name.name = require("./name");

},{"./first_name":202,"./last_name":204,"./name":205,"./prefix":206,"./suffix":207,"./title":208}],204:[function(require,module,exports){
module["exports"] = [
  "Abbott",
  "Abernathy",
  "Abshire",
  "Adams",
  "Altenwerth",
  "Anderson",
  "Ankunding",
  "Armstrong",
  "Auer",
  "Aufderhar",
  "Bahringer",
  "Bailey",
  "Balistreri",
  "Barrows",
  "Bartell",
  "Bartoletti",
  "Barton",
  "Bashirian",
  "Batz",
  "Bauch",
  "Baumbach",
  "Bayer",
  "Beahan",
  "Beatty",
  "Bechtelar",
  "Becker",
  "Bednar",
  "Beer",
  "Beier",
  "Berge",
  "Bergnaum",
  "Bergstrom",
  "Bernhard",
  "Bernier",
  "Bins",
  "Blanda",
  "Blick",
  "Block",
  "Bode",
  "Boehm",
  "Bogan",
  "Bogisich",
  "Borer",
  "Bosco",
  "Botsford",
  "Boyer",
  "Boyle",
  "Bradtke",
  "Brakus",
  "Braun",
  "Breitenberg",
  "Brekke",
  "Brown",
  "Bruen",
  "Buckridge",
  "Carroll",
  "Carter",
  "Cartwright",
  "Casper",
  "Cassin",
  "Champlin",
  "Christiansen",
  "Cole",
  "Collier",
  "Collins",
  "Conn",
  "Connelly",
  "Conroy",
  "Considine",
  "Corkery",
  "Cormier",
  "Corwin",
  "Cremin",
  "Crist",
  "Crona",
  "Cronin",
  "Crooks",
  "Cruickshank",
  "Cummerata",
  "Cummings",
  "Dach",
  "D'Amore",
  "Daniel",
  "Dare",
  "Daugherty",
  "Davis",
  "Deckow",
  "Denesik",
  "Dibbert",
  "Dickens",
  "Dicki",
  "Dickinson",
  "Dietrich",
  "Donnelly",
  "Dooley",
  "Douglas",
  "Doyle",
  "DuBuque",
  "Durgan",
  "Ebert",
  "Effertz",
  "Eichmann",
  "Emard",
  "Emmerich",
  "Erdman",
  "Ernser",
  "Fadel",
  "Fahey",
  "Farrell",
  "Fay",
  "Feeney",
  "Feest",
  "Feil",
  "Ferry",
  "Fisher",
  "Flatley",
  "Frami",
  "Franecki",
  "Friesen",
  "Fritsch",
  "Funk",
  "Gaylord",
  "Gerhold",
  "Gerlach",
  "Gibson",
  "Gislason",
  "Gleason",
  "Gleichner",
  "Glover",
  "Goldner",
  "Goodwin",
  "Gorczany",
  "Gottlieb",
  "Goyette",
  "Grady",
  "Graham",
  "Grant",
  "Green",
  "Greenfelder",
  "Greenholt",
  "Grimes",
  "Gulgowski",
  "Gusikowski",
  "Gutkowski",
  "Gutmann",
  "Haag",
  "Hackett",
  "Hagenes",
  "Hahn",
  "Haley",
  "Halvorson",
  "Hamill",
  "Hammes",
  "Hand",
  "Hane",
  "Hansen",
  "Harber",
  "Harris",
  "Hartmann",
  "Harvey",
  "Hauck",
  "Hayes",
  "Heaney",
  "Heathcote",
  "Hegmann",
  "Heidenreich",
  "Heller",
  "Herman",
  "Hermann",
  "Hermiston",
  "Herzog",
  "Hessel",
  "Hettinger",
  "Hickle",
  "Hilll",
  "Hills",
  "Hilpert",
  "Hintz",
  "Hirthe",
  "Hodkiewicz",
  "Hoeger",
  "Homenick",
  "Hoppe",
  "Howe",
  "Howell",
  "Hudson",
  "Huel",
  "Huels",
  "Hyatt",
  "Jacobi",
  "Jacobs",
  "Jacobson",
  "Jakubowski",
  "Jaskolski",
  "Jast",
  "Jenkins",
  "Jerde",
  "Johns",
  "Johnson",
  "Johnston",
  "Jones",
  "Kassulke",
  "Kautzer",
  "Keebler",
  "Keeling",
  "Kemmer",
  "Kerluke",
  "Kertzmann",
  "Kessler",
  "Kiehn",
  "Kihn",
  "Kilback",
  "King",
  "Kirlin",
  "Klein",
  "Kling",
  "Klocko",
  "Koch",
  "Koelpin",
  "Koepp",
  "Kohler",
  "Konopelski",
  "Koss",
  "Kovacek",
  "Kozey",
  "Krajcik",
  "Kreiger",
  "Kris",
  "Kshlerin",
  "Kub",
  "Kuhic",
  "Kuhlman",
  "Kuhn",
  "Kulas",
  "Kunde",
  "Kunze",
  "Kuphal",
  "Kutch",
  "Kuvalis",
  "Labadie",
  "Lakin",
  "Lang",
  "Langosh",
  "Langworth",
  "Larkin",
  "Larson",
  "Leannon",
  "Lebsack",
  "Ledner",
  "Leffler",
  "Legros",
  "Lehner",
  "Lemke",
  "Lesch",
  "Leuschke",
  "Lind",
  "Lindgren",
  "Littel",
  "Little",
  "Lockman",
  "Lowe",
  "Lubowitz",
  "Lueilwitz",
  "Luettgen",
  "Lynch",
  "Macejkovic",
  "MacGyver",
  "Maggio",
  "Mann",
  "Mante",
  "Marks",
  "Marquardt",
  "Marvin",
  "Mayer",
  "Mayert",
  "McClure",
  "McCullough",
  "McDermott",
  "McGlynn",
  "McKenzie",
  "McLaughlin",
  "Medhurst",
  "Mertz",
  "Metz",
  "Miller",
  "Mills",
  "Mitchell",
  "Moen",
  "Mohr",
  "Monahan",
  "Moore",
  "Morar",
  "Morissette",
  "Mosciski",
  "Mraz",
  "Mueller",
  "Muller",
  "Murazik",
  "Murphy",
  "Murray",
  "Nader",
  "Nicolas",
  "Nienow",
  "Nikolaus",
  "Nitzsche",
  "Nolan",
  "Oberbrunner",
  "O'Connell",
  "O'Conner",
  "O'Hara",
  "O'Keefe",
  "O'Kon",
  "Okuneva",
  "Olson",
  "Ondricka",
  "O'Reilly",
  "Orn",
  "Ortiz",
  "Osinski",
  "Pacocha",
  "Padberg",
  "Pagac",
  "Parisian",
  "Parker",
  "Paucek",
  "Pfannerstill",
  "Pfeffer",
  "Pollich",
  "Pouros",
  "Powlowski",
  "Predovic",
  "Price",
  "Prohaska",
  "Prosacco",
  "Purdy",
  "Quigley",
  "Quitzon",
  "Rath",
  "Ratke",
  "Rau",
  "Raynor",
  "Reichel",
  "Reichert",
  "Reilly",
  "Reinger",
  "Rempel",
  "Renner",
  "Reynolds",
  "Rice",
  "Rippin",
  "Ritchie",
  "Robel",
  "Roberts",
  "Rodriguez",
  "Rogahn",
  "Rohan",
  "Rolfson",
  "Romaguera",
  "Roob",
  "Rosenbaum",
  "Rowe",
  "Ruecker",
  "Runolfsdottir",
  "Runolfsson",
  "Runte",
  "Russel",
  "Rutherford",
  "Ryan",
  "Sanford",
  "Satterfield",
  "Sauer",
  "Sawayn",
  "Schaden",
  "Schaefer",
  "Schamberger",
  "Schiller",
  "Schimmel",
  "Schinner",
  "Schmeler",
  "Schmidt",
  "Schmitt",
  "Schneider",
  "Schoen",
  "Schowalter",
  "Schroeder",
  "Schulist",
  "Schultz",
  "Schumm",
  "Schuppe",
  "Schuster",
  "Senger",
  "Shanahan",
  "Shields",
  "Simonis",
  "Sipes",
  "Skiles",
  "Smith",
  "Smitham",
  "Spencer",
  "Spinka",
  "Sporer",
  "Stamm",
  "Stanton",
  "Stark",
  "Stehr",
  "Steuber",
  "Stiedemann",
  "Stokes",
  "Stoltenberg",
  "Stracke",
  "Streich",
  "Stroman",
  "Strosin",
  "Swaniawski",
  "Swift",
  "Terry",
  "Thiel",
  "Thompson",
  "Tillman",
  "Torp",
  "Torphy",
  "Towne",
  "Toy",
  "Trantow",
  "Tremblay",
  "Treutel",
  "Tromp",
  "Turcotte",
  "Turner",
  "Ullrich",
  "Upton",
  "Vandervort",
  "Veum",
  "Volkman",
  "Von",
  "VonRueden",
  "Waelchi",
  "Walker",
  "Walsh",
  "Walter",
  "Ward",
  "Waters",
  "Watsica",
  "Weber",
  "Wehner",
  "Weimann",
  "Weissnat",
  "Welch",
  "West",
  "White",
  "Wiegand",
  "Wilderman",
  "Wilkinson",
  "Will",
  "Williamson",
  "Willms",
  "Windler",
  "Wintheiser",
  "Wisoky",
  "Wisozk",
  "Witting",
  "Wiza",
  "Wolf",
  "Wolff",
  "Wuckert",
  "Wunsch",
  "Wyman",
  "Yost",
  "Yundt",
  "Zboncak",
  "Zemlak",
  "Ziemann",
  "Zieme",
  "Zulauf"
];

},{}],205:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name}",
  "#{first_name} #{last_name} #{suffix}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}"
];

},{}],206:[function(require,module,exports){
module["exports"] = [
  "Mr.",
  "Mrs.",
  "Ms.",
  "Miss",
  "Dr."
];

},{}],207:[function(require,module,exports){
module["exports"] = [
  "Jr.",
  "Sr.",
  "I",
  "II",
  "III",
  "IV",
  "V",
  "MD",
  "DDS",
  "PhD",
  "DVM"
];

},{}],208:[function(require,module,exports){
module["exports"] = {
  "descriptor": [
    "Lead",
    "Senior",
    "Direct",
    "Corporate",
    "Dynamic",
    "Future",
    "Product",
    "National",
    "Regional",
    "District",
    "Central",
    "Global",
    "Customer",
    "Investor",
    "Dynamic",
    "International",
    "Legacy",
    "Forward",
    "Internal",
    "Human",
    "Chief",
    "Principal"
  ],
  "level": [
    "Solutions",
    "Program",
    "Brand",
    "Security",
    "Research",
    "Marketing",
    "Directives",
    "Implementation",
    "Integration",
    "Functionality",
    "Response",
    "Paradigm",
    "Tactics",
    "Identity",
    "Markets",
    "Group",
    "Division",
    "Applications",
    "Optimization",
    "Operations",
    "Infrastructure",
    "Intranet",
    "Communications",
    "Web",
    "Branding",
    "Quality",
    "Assurance",
    "Mobility",
    "Accounts",
    "Data",
    "Creative",
    "Configuration",
    "Accountability",
    "Interactions",
    "Factors",
    "Usability",
    "Metrics"
  ],
  "job": [
    "Supervisor",
    "Associate",
    "Executive",
    "Liason",
    "Officer",
    "Manager",
    "Engineer",
    "Specialist",
    "Director",
    "Coordinator",
    "Administrator",
    "Architect",
    "Analyst",
    "Designer",
    "Planner",
    "Orchestrator",
    "Technician",
    "Developer",
    "Producer",
    "Consultant",
    "Assistant",
    "Facilitator",
    "Agent",
    "Representative",
    "Strategist"
  ]
};

},{}],209:[function(require,module,exports){
module["exports"] = [
  "###-###-####",
  "(###) ###-####",
  "1-###-###-####",
  "###.###.####",
  "###-###-####",
  "(###) ###-####",
  "1-###-###-####",
  "###.###.####",
  "###-###-#### x###",
  "(###) ###-#### x###",
  "1-###-###-#### x###",
  "###.###.#### x###",
  "###-###-#### x####",
  "(###) ###-#### x####",
  "1-###-###-#### x####",
  "###.###.#### x####",
  "###-###-#### x#####",
  "(###) ###-#### x#####",
  "1-###-###-#### x#####",
  "###.###.#### x#####"
];

},{}],210:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":209,"dup":85}],211:[function(require,module,exports){
module["exports"] = [
  "ants",
  "bats",
  "bears",
  "bees",
  "birds",
  "buffalo",
  "cats",
  "chickens",
  "cattle",
  "dogs",
  "dolphins",
  "ducks",
  "elephants",
  "fishes",
  "foxes",
  "frogs",
  "geese",
  "goats",
  "horses",
  "kangaroos",
  "lions",
  "monkeys",
  "owls",
  "oxen",
  "penguins",
  "people",
  "pigs",
  "rabbits",
  "sheep",
  "tigers",
  "whales",
  "wolves",
  "zebras",
  "banshees",
  "crows",
  "black cats",
  "chimeras",
  "ghosts",
  "conspirators",
  "dragons",
  "dwarves",
  "elves",
  "enchanters",
  "exorcists",
  "sons",
  "foes",
  "giants",
  "gnomes",
  "goblins",
  "gooses",
  "griffins",
  "lycanthropes",
  "nemesis",
  "ogres",
  "oracles",
  "prophets",
  "sorcerors",
  "spiders",
  "spirits",
  "vampires",
  "warlocks",
  "vixens",
  "werewolves",
  "witches",
  "worshipers",
  "zombies",
  "druids"
];

},{}],212:[function(require,module,exports){
var team = {};
module['exports'] = team;
team.creature = require("./creature");
team.name = require("./name");

},{"./creature":211,"./name":213}],213:[function(require,module,exports){
module["exports"] = [
  "#{Address.state} #{creature}"
];

},{}],214:[function(require,module,exports){
module["exports"] = [
  "####",
  "###",
  "##"
];

},{}],215:[function(require,module,exports){
module["exports"] = [
  "Australia"
];

},{}],216:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.state_abbr = require("./state_abbr");
address.state = require("./state");
address.postcode = require("./postcode");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.default_country = require("./default_country");

},{"./building_number":214,"./default_country":215,"./postcode":217,"./state":218,"./state_abbr":219,"./street_suffix":220}],217:[function(require,module,exports){
module["exports"] = [
  "0###",
  "2###",
  "3###",
  "4###",
  "5###",
  "6###",
  "7###"
];

},{}],218:[function(require,module,exports){
module["exports"] = [
  "New South Wales",
  "Queensland",
  "Northern Territory",
  "South Australia",
  "Western Australia",
  "Tasmania",
  "Australian Capital Territory",
  "Victoria"
];

},{}],219:[function(require,module,exports){
module["exports"] = [
  "NSW",
  "QLD",
  "NT",
  "SA",
  "WA",
  "TAS",
  "ACT",
  "VIC"
];

},{}],220:[function(require,module,exports){
module["exports"] = [
  "Avenue",
  "Boulevard",
  "Circle",
  "Circuit",
  "Court",
  "Crescent",
  "Crest",
  "Drive",
  "Estate Dr",
  "Grove",
  "Hill",
  "Island",
  "Junction",
  "Knoll",
  "Lane",
  "Loop",
  "Mall",
  "Manor",
  "Meadow",
  "Mews",
  "Parade",
  "Parkway",
  "Pass",
  "Place",
  "Plaza",
  "Ridge",
  "Road",
  "Run",
  "Square",
  "Station St",
  "Street",
  "Summit",
  "Terrace",
  "Track",
  "Trail",
  "View Rd",
  "Way"
];

},{}],221:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");

},{"./suffix":222}],222:[function(require,module,exports){
module["exports"] = [
  "Pty Ltd",
  "and Sons",
  "Corp",
  "Group",
  "Brothers",
  "Partners"
];

},{}],223:[function(require,module,exports){
var en_AU = {};
module['exports'] = en_AU;
en_AU.title = "Australia (English)";
en_AU.name = require("./name");
en_AU.company = require("./company");
en_AU.internet = require("./internet");
en_AU.address = require("./address");
en_AU.phone_number = require("./phone_number");

},{"./address":216,"./company":221,"./internet":225,"./name":227,"./phone_number":230}],224:[function(require,module,exports){
module["exports"] = [
  "com.au",
  "com",
  "net.au",
  "net",
  "org.au",
  "org"
];

},{}],225:[function(require,module,exports){
arguments[4][126][0].apply(exports,arguments)
},{"./domain_suffix":224,"dup":126}],226:[function(require,module,exports){
module["exports"] = [
  "William",
  "Jack",
  "Oliver",
  "Joshua",
  "Thomas",
  "Lachlan",
  "Cooper",
  "Noah",
  "Ethan",
  "Lucas",
  "James",
  "Samuel",
  "Jacob",
  "Liam",
  "Alexander",
  "Benjamin",
  "Max",
  "Isaac",
  "Daniel",
  "Riley",
  "Ryan",
  "Charlie",
  "Tyler",
  "Jake",
  "Matthew",
  "Xavier",
  "Harry",
  "Jayden",
  "Nicholas",
  "Harrison",
  "Levi",
  "Luke",
  "Adam",
  "Henry",
  "Aiden",
  "Dylan",
  "Oscar",
  "Michael",
  "Jackson",
  "Logan",
  "Joseph",
  "Blake",
  "Nathan",
  "Connor",
  "Elijah",
  "Nate",
  "Archie",
  "Bailey",
  "Marcus",
  "Cameron",
  "Jordan",
  "Zachary",
  "Caleb",
  "Hunter",
  "Ashton",
  "Toby",
  "Aidan",
  "Hayden",
  "Mason",
  "Hamish",
  "Edward",
  "Angus",
  "Eli",
  "Sebastian",
  "Christian",
  "Patrick",
  "Andrew",
  "Anthony",
  "Luca",
  "Kai",
  "Beau",
  "Alex",
  "George",
  "Callum",
  "Finn",
  "Zac",
  "Mitchell",
  "Jett",
  "Jesse",
  "Gabriel",
  "Leo",
  "Declan",
  "Charles",
  "Jasper",
  "Jonathan",
  "Aaron",
  "Hugo",
  "David",
  "Christopher",
  "Chase",
  "Owen",
  "Justin",
  "Ali",
  "Darcy",
  "Lincoln",
  "Cody",
  "Phoenix",
  "Sam",
  "John",
  "Joel",
  "Isabella",
  "Ruby",
  "Chloe",
  "Olivia",
  "Charlotte",
  "Mia",
  "Lily",
  "Emily",
  "Ella",
  "Sienna",
  "Sophie",
  "Amelia",
  "Grace",
  "Ava",
  "Zoe",
  "Emma",
  "Sophia",
  "Matilda",
  "Hannah",
  "Jessica",
  "Lucy",
  "Georgia",
  "Sarah",
  "Abigail",
  "Zara",
  "Eva",
  "Scarlett",
  "Jasmine",
  "Chelsea",
  "Lilly",
  "Ivy",
  "Isla",
  "Evie",
  "Isabelle",
  "Maddison",
  "Layla",
  "Summer",
  "Annabelle",
  "Alexis",
  "Elizabeth",
  "Bella",
  "Holly",
  "Lara",
  "Madison",
  "Alyssa",
  "Maya",
  "Tahlia",
  "Claire",
  "Hayley",
  "Imogen",
  "Jade",
  "Ellie",
  "Sofia",
  "Addison",
  "Molly",
  "Phoebe",
  "Alice",
  "Savannah",
  "Gabriella",
  "Kayla",
  "Mikayla",
  "Abbey",
  "Eliza",
  "Willow",
  "Alexandra",
  "Poppy",
  "Samantha",
  "Stella",
  "Amy",
  "Amelie",
  "Anna",
  "Piper",
  "Gemma",
  "Isabel",
  "Victoria",
  "Stephanie",
  "Caitlin",
  "Heidi",
  "Paige",
  "Rose",
  "Amber",
  "Audrey",
  "Claudia",
  "Taylor",
  "Madeline",
  "Angelina",
  "Natalie",
  "Charli",
  "Lauren",
  "Ashley",
  "Violet",
  "Mackenzie",
  "Abby",
  "Skye",
  "Lillian",
  "Alana",
  "Lola",
  "Leah",
  "Eve",
  "Kiara"
];

},{}],227:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");

},{"./first_name":226,"./last_name":228}],228:[function(require,module,exports){
module["exports"] = [
  "Smith",
  "Jones",
  "Williams",
  "Brown",
  "Wilson",
  "Taylor",
  "Johnson",
  "White",
  "Martin",
  "Anderson",
  "Thompson",
  "Nguyen",
  "Thomas",
  "Walker",
  "Harris",
  "Lee",
  "Ryan",
  "Robinson",
  "Kelly",
  "King",
  "Davis",
  "Wright",
  "Evans",
  "Roberts",
  "Green",
  "Hall",
  "Wood",
  "Jackson",
  "Clarke",
  "Patel",
  "Khan",
  "Lewis",
  "James",
  "Phillips",
  "Mason",
  "Mitchell",
  "Rose",
  "Davies",
  "Rodriguez",
  "Cox",
  "Alexander",
  "Garden",
  "Campbell",
  "Johnston",
  "Moore",
  "Smyth",
  "O'neill",
  "Doherty",
  "Stewart",
  "Quinn",
  "Murphy",
  "Graham",
  "Mclaughlin",
  "Hamilton",
  "Murray",
  "Hughes",
  "Robertson",
  "Thomson",
  "Scott",
  "Macdonald",
  "Reid",
  "Clark",
  "Ross",
  "Young",
  "Watson",
  "Paterson",
  "Morrison",
  "Morgan",
  "Griffiths",
  "Edwards",
  "Rees",
  "Jenkins",
  "Owen",
  "Price",
  "Moss",
  "Richards",
  "Abbott",
  "Adams",
  "Armstrong",
  "Bahringer",
  "Bailey",
  "Barrows",
  "Bartell",
  "Bartoletti",
  "Barton",
  "Bauch",
  "Baumbach",
  "Bayer",
  "Beahan",
  "Beatty",
  "Becker",
  "Beier",
  "Berge",
  "Bergstrom",
  "Bode",
  "Bogan",
  "Borer",
  "Bosco",
  "Botsford",
  "Boyer",
  "Boyle",
  "Braun",
  "Bruen",
  "Carroll",
  "Carter",
  "Cartwright",
  "Casper",
  "Cassin",
  "Champlin",
  "Christiansen",
  "Cole",
  "Collier",
  "Collins",
  "Connelly",
  "Conroy",
  "Corkery",
  "Cormier",
  "Corwin",
  "Cronin",
  "Crooks",
  "Cruickshank",
  "Cummings",
  "D'amore",
  "Daniel",
  "Dare",
  "Daugherty",
  "Dickens",
  "Dickinson",
  "Dietrich",
  "Donnelly",
  "Dooley",
  "Douglas",
  "Doyle",
  "Durgan",
  "Ebert",
  "Emard",
  "Emmerich",
  "Erdman",
  "Ernser",
  "Fadel",
  "Fahey",
  "Farrell",
  "Fay",
  "Feeney",
  "Feil",
  "Ferry",
  "Fisher",
  "Flatley",
  "Gibson",
  "Gleason",
  "Glover",
  "Goldner",
  "Goodwin",
  "Grady",
  "Grant",
  "Greenfelder",
  "Greenholt",
  "Grimes",
  "Gutmann",
  "Hackett",
  "Hahn",
  "Haley",
  "Hammes",
  "Hand",
  "Hane",
  "Hansen",
  "Harber",
  "Hartmann",
  "Harvey",
  "Hayes",
  "Heaney",
  "Heathcote",
  "Heller",
  "Hermann",
  "Hermiston",
  "Hessel",
  "Hettinger",
  "Hickle",
  "Hill",
  "Hills",
  "Hoppe",
  "Howe",
  "Howell",
  "Hudson",
  "Huel",
  "Hyatt",
  "Jacobi",
  "Jacobs",
  "Jacobson",
  "Jerde",
  "Johns",
  "Keeling",
  "Kemmer",
  "Kessler",
  "Kiehn",
  "Kirlin",
  "Klein",
  "Koch",
  "Koelpin",
  "Kohler",
  "Koss",
  "Kovacek",
  "Kreiger",
  "Kris",
  "Kuhlman",
  "Kuhn",
  "Kulas",
  "Kunde",
  "Kutch",
  "Lakin",
  "Lang",
  "Langworth",
  "Larkin",
  "Larson",
  "Leannon",
  "Leffler",
  "Little",
  "Lockman",
  "Lowe",
  "Lynch",
  "Mann",
  "Marks",
  "Marvin",
  "Mayer",
  "Mccullough",
  "Mcdermott",
  "Mckenzie",
  "Miller",
  "Mills",
  "Monahan",
  "Morissette",
  "Mueller",
  "Muller",
  "Nader",
  "Nicolas",
  "Nolan",
  "O'connell",
  "O'conner",
  "O'hara",
  "O'keefe",
  "Olson",
  "O'reilly",
  "Parisian",
  "Parker",
  "Quigley",
  "Reilly",
  "Reynolds",
  "Rice",
  "Ritchie",
  "Rohan",
  "Rolfson",
  "Rowe",
  "Russel",
  "Rutherford",
  "Sanford",
  "Sauer",
  "Schmidt",
  "Schmitt",
  "Schneider",
  "Schroeder",
  "Schultz",
  "Shields",
  "Smitham",
  "Spencer",
  "Stanton",
  "Stark",
  "Stokes",
  "Swift",
  "Tillman",
  "Towne",
  "Tremblay",
  "Tromp",
  "Turcotte",
  "Turner",
  "Walsh",
  "Walter",
  "Ward",
  "Waters",
  "Weber",
  "Welch",
  "West",
  "Wilderman",
  "Wilkinson",
  "Williamson",
  "Windler",
  "Wolf"
];

},{}],229:[function(require,module,exports){
module["exports"] = [
  "0# #### ####",
  "+61 # #### ####",
  "04## ### ###",
  "+61 4## ### ###"
];

},{}],230:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":229,"dup":85}],231:[function(require,module,exports){
var en_BORK = {};
module['exports'] = en_BORK;
en_BORK.title = "Bork (English)";
en_BORK.lorem = require("./lorem");

},{"./lorem":232}],232:[function(require,module,exports){
arguments[4][76][0].apply(exports,arguments)
},{"./words":233,"dup":76}],233:[function(require,module,exports){
module["exports"] = [
  "Boot",
  "I",
  "Nu",
  "Nur",
  "Tu",
  "Um",
  "a",
  "becoose-a",
  "boot",
  "bork",
  "burn",
  "chuuses",
  "cumplete-a",
  "cun",
  "cunseqooences",
  "curcoomstunces",
  "dee",
  "deeslikes",
  "denuoonceeng",
  "desures",
  "du",
  "eccuoont",
  "ectooel",
  "edfuntege-a",
  "efueeds",
  "egeeen",
  "ell",
  "ere-a",
  "feend",
  "foolt",
  "frum",
  "geefe-a",
  "gesh",
  "greet",
  "heem",
  "heppeeness",
  "hes",
  "hoo",
  "hoomun",
  "idea",
  "ifer",
  "in",
  "incuoonter",
  "injuy",
  "itselff",
  "ixcept",
  "ixemple-a",
  "ixerceese-a",
  "ixpleeen",
  "ixplurer",
  "ixpuoond",
  "ixtremely",
  "knoo",
  "lebureeuoos",
  "lufes",
  "meestekee",
  "mester-booeelder",
  "moost",
  "mun",
  "nu",
  "nut",
  "oobteeen",
  "oocceseeunelly",
  "ooccoor",
  "ooff",
  "oone-a",
  "oor",
  "peeen",
  "peeenffool",
  "physeecel",
  "pleesoore-a",
  "poorsooe-a",
  "poorsooes",
  "preeesing",
  "prucoore-a",
  "prudooces",
  "reeght",
  "reshunelly",
  "resooltunt",
  "sume-a",
  "teecheengs",
  "teke-a",
  "thees",
  "thet",
  "thuse-a",
  "treefiel",
  "troot",
  "tu",
  "tueel",
  "und",
  "undertekes",
  "unnuyeeng",
  "uny",
  "unyune-a",
  "us",
  "veell",
  "veet",
  "ves",
  "vheech",
  "vhu",
  "yuoo",
  "zee",
  "zeere-a"
];

},{}],234:[function(require,module,exports){
module["exports"] = [
  "Canada"
];

},{}],235:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.default_country = require("./default_country");
address.postcode = require('./postcode.js');

},{"./default_country":234,"./postcode.js":236,"./state":237,"./state_abbr":238}],236:[function(require,module,exports){
module["exports"] = [
  "?#? #?#"
];

},{}],237:[function(require,module,exports){
module["exports"] = [
  "Alberta",
  "British Columbia",
  "Manitoba",
  "New Brunswick",
  "Newfoundland and Labrador",
  "Nova Scotia",
  "Northwest Territories",
  "Nunavut",
  "Ontario",
  "Prince Edward Island",
  "Quebec",
  "Saskatchewan",
  "Yukon"
];

},{}],238:[function(require,module,exports){
module["exports"] = [
  "AB",
  "BC",
  "MB",
  "NB",
  "NL",
  "NS",
  "NU",
  "NT",
  "ON",
  "PE",
  "QC",
  "SK",
  "YT"
];

},{}],239:[function(require,module,exports){
var en_CA = {};
module['exports'] = en_CA;
en_CA.title = "Canada (English)";
en_CA.address = require("./address");
en_CA.internet = require("./internet");
en_CA.phone_number = require("./phone_number");

},{"./address":235,"./internet":242,"./phone_number":244}],240:[function(require,module,exports){
module["exports"] = [
  "ca",
  "com",
  "biz",
  "info",
  "name",
  "net",
  "org"
];

},{}],241:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.ca",
  "hotmail.com"
];

},{}],242:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"./domain_suffix":240,"./free_email":241,"dup":75}],243:[function(require,module,exports){
module["exports"] = [
  "###-###-####",
  "(###)###-####",
  "###.###.####",
  "1-###-###-####",
  "###-###-#### x###",
  "(###)###-#### x###",
  "1-###-###-#### x###",
  "###.###.#### x###",
  "###-###-#### x####",
  "(###)###-#### x####",
  "1-###-###-#### x####",
  "###.###.#### x####",
  "###-###-#### x#####",
  "(###)###-#### x#####",
  "1-###-###-#### x#####",
  "###.###.#### x#####"
];

},{}],244:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":243,"dup":85}],245:[function(require,module,exports){
module["exports"] = [
  "Avon",
  "Bedfordshire",
  "Berkshire",
  "Borders",
  "Buckinghamshire",
  "Cambridgeshire",
  "Central",
  "Cheshire",
  "Cleveland",
  "Clwyd",
  "Cornwall",
  "County Antrim",
  "County Armagh",
  "County Down",
  "County Fermanagh",
  "County Londonderry",
  "County Tyrone",
  "Cumbria",
  "Derbyshire",
  "Devon",
  "Dorset",
  "Dumfries and Galloway",
  "Durham",
  "Dyfed",
  "East Sussex",
  "Essex",
  "Fife",
  "Gloucestershire",
  "Grampian",
  "Greater Manchester",
  "Gwent",
  "Gwynedd County",
  "Hampshire",
  "Herefordshire",
  "Hertfordshire",
  "Highlands and Islands",
  "Humberside",
  "Isle of Wight",
  "Kent",
  "Lancashire",
  "Leicestershire",
  "Lincolnshire",
  "Lothian",
  "Merseyside",
  "Mid Glamorgan",
  "Norfolk",
  "North Yorkshire",
  "Northamptonshire",
  "Northumberland",
  "Nottinghamshire",
  "Oxfordshire",
  "Powys",
  "Rutland",
  "Shropshire",
  "Somerset",
  "South Glamorgan",
  "South Yorkshire",
  "Staffordshire",
  "Strathclyde",
  "Suffolk",
  "Surrey",
  "Tayside",
  "Tyne and Wear",
  "Warwickshire",
  "West Glamorgan",
  "West Midlands",
  "West Sussex",
  "West Yorkshire",
  "Wiltshire",
  "Worcestershire"
];

},{}],246:[function(require,module,exports){
module["exports"] = [
  "England",
  "Scotland",
  "Wales",
  "Northern Ireland"
];

},{}],247:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.county = require("./county");
address.uk_country = require("./uk_country");
address.default_country = require("./default_country");

},{"./county":245,"./default_country":246,"./uk_country":248}],248:[function(require,module,exports){
arguments[4][246][0].apply(exports,arguments)
},{"dup":246}],249:[function(require,module,exports){
module["exports"] = [
  "074## ######",
  "075## ######",
  "076## ######",
  "077## ######",
  "078## ######",
  "079## ######"
];

},{}],250:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"./formats":249,"dup":67}],251:[function(require,module,exports){
var en_GB = {};
module['exports'] = en_GB;
en_GB.title = "Great Britain (English)";
en_GB.address = require("./address");
en_GB.internet = require("./internet");
en_GB.phone_number = require("./phone_number");
en_GB.cell_phone = require("./cell_phone");

},{"./address":247,"./cell_phone":250,"./internet":253,"./phone_number":255}],252:[function(require,module,exports){
module["exports"] = [
  "co.uk",
  "com",
  "biz",
  "info",
  "name"
];

},{}],253:[function(require,module,exports){
arguments[4][126][0].apply(exports,arguments)
},{"./domain_suffix":252,"dup":126}],254:[function(require,module,exports){
module["exports"] = [
  "01#### #####",
  "01### ######",
  "01#1 ### ####",
  "011# ### ####",
  "02# #### ####",
  "03## ### ####",
  "055 #### ####",
  "056 #### ####",
  "0800 ### ####",
  "08## ### ####",
  "09## ### ####",
  "016977 ####",
  "01### #####",
  "0500 ######",
  "0800 ######"
];

},{}],255:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":254,"dup":85}],256:[function(require,module,exports){
module["exports"] = [
  "Carlow",
  "Cavan",
  "Clare",
  "Cork",
  "Donegal",
  "Dublin",
  "Galway",
  "Kerry",
  "Kildare",
  "Kilkenny",
  "Laois",
  "Leitrim",
  "Limerick",
  "Longford",
  "Louth",
  "Mayo",
  "Meath",
  "Monaghan",
  "Offaly",
  "Roscommon",
  "Sligo",
  "Tipperary",
  "Waterford",
  "Westmeath",
  "Wexford",
  "Wicklow"
];

},{}],257:[function(require,module,exports){
module["exports"] = [
  "Ireland"
];

},{}],258:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.county = require("./county");
address.default_country = require("./default_country");

},{"./county":256,"./default_country":257}],259:[function(require,module,exports){
module["exports"] = [
  "082 ### ####",
  "083 ### ####",
  "085 ### ####",
  "086 ### ####",
  "087 ### ####",
  "089 ### ####"
];

},{}],260:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"./formats":259,"dup":67}],261:[function(require,module,exports){
var en_IE = {};
module['exports'] = en_IE;
en_IE.title = "Ireland (English)";
en_IE.address = require("./address");
en_IE.internet = require("./internet");
en_IE.phone_number = require("./phone_number");
en_IE.cell_phone = require("./cell_phone");

},{"./address":258,"./cell_phone":260,"./internet":263,"./phone_number":265}],262:[function(require,module,exports){
module["exports"] = [
  "ie",
  "com",
  "net",
  "info",
  "eu"
];

},{}],263:[function(require,module,exports){
arguments[4][126][0].apply(exports,arguments)
},{"./domain_suffix":262,"dup":126}],264:[function(require,module,exports){
module["exports"] = [
  "01 #######",
  "021 #######",
  "022 #######",
  "023 #######",
  "024 #######",
  "025 #######",
  "026 #######",
  "027 #######",
  "028 #######",
  "029 #######",
  "0402 #######",
  "0404 #######",
  "041 #######",
  "042 #######",
  "043 #######",
  "044 #######",
  "045 #######",
  "046 #######",
  "047 #######",
  "049 #######",
  "0504 #######",
  "0505 #######",
  "051 #######",
  "052 #######",
  "053 #######",
  "056 #######",
  "057 #######",
  "058 #######",
  "059 #######",
  "061 #######",
  "062 #######",
  "063 #######",
  "064 #######",
  "065 #######",
  "066 #######",
  "067 #######",
  "068 #######",
  "069 #######",
  "071 #######",
  "074 #######",
  "090 #######",
  "091 #######",
  "093 #######",
  "094 #######",
  "095 #######",
  "096 #######",
  "097 #######",
  "098 #######",
  "099 #######"
];

},{}],265:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":264,"dup":85}],266:[function(require,module,exports){
module["exports"] = [
  "India",
  "Indian Republic",
  "Bharat",
  "Hindustan"
];

},{}],267:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.default_country = require("./default_country");

},{"./default_country":266,"./postcode":268,"./state":269,"./state_abbr":270}],268:[function(require,module,exports){
arguments[4][236][0].apply(exports,arguments)
},{"dup":236}],269:[function(require,module,exports){
module["exports"] = [
  "Andra Pradesh",
  "Arunachal Pradesh",
  "Assam",
  "Bihar",
  "Chhattisgarh",
  "Goa",
  "Gujarat",
  "Haryana",
  "Himachal Pradesh",
  "Jammu and Kashmir",
  "Jharkhand",
  "Karnataka",
  "Kerala",
  "Madya Pradesh",
  "Maharashtra",
  "Manipur",
  "Meghalaya",
  "Mizoram",
  "Nagaland",
  "Orissa",
  "Punjab",
  "Rajasthan",
  "Sikkim",
  "Tamil Nadu",
  "Tripura",
  "Uttaranchal",
  "Uttar Pradesh",
  "West Bengal",
  "Andaman and Nicobar Islands",
  "Chandigarh",
  "Dadar and Nagar Haveli",
  "Daman and Diu",
  "Delhi",
  "Lakshadweep",
  "Pondicherry"
];

},{}],270:[function(require,module,exports){
module["exports"] = [
  "AP",
  "AR",
  "AS",
  "BR",
  "CG",
  "DL",
  "GA",
  "GJ",
  "HR",
  "HP",
  "JK",
  "JS",
  "KA",
  "KL",
  "MP",
  "MH",
  "MN",
  "ML",
  "MZ",
  "NL",
  "OR",
  "PB",
  "RJ",
  "SK",
  "TN",
  "TR",
  "UK",
  "UP",
  "WB",
  "AN",
  "CH",
  "DN",
  "DD",
  "LD",
  "PY"
];

},{}],271:[function(require,module,exports){
arguments[4][221][0].apply(exports,arguments)
},{"./suffix":272,"dup":221}],272:[function(require,module,exports){
module["exports"] = [
  "Pvt Ltd",
  "Limited",
  "Ltd",
  "and Sons",
  "Corp",
  "Group",
  "Brothers"
];

},{}],273:[function(require,module,exports){
var en_IND = {};
module['exports'] = en_IND;
en_IND.title = "India (English)";
en_IND.name = require("./name");
en_IND.address = require("./address");
en_IND.internet = require("./internet");
en_IND.company = require("./company");
en_IND.phone_number = require("./phone_number");

},{"./address":267,"./company":271,"./internet":276,"./name":278,"./phone_number":281}],274:[function(require,module,exports){
module["exports"] = [
  "in",
  "com",
  "biz",
  "info",
  "name",
  "net",
  "org",
  "co.in"
];

},{}],275:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.co.in",
  "hotmail.com"
];

},{}],276:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"./domain_suffix":274,"./free_email":275,"dup":75}],277:[function(require,module,exports){
module["exports"] = [
  "Aadrika",
  "Aanandinii",
  "Aaratrika",
  "Aarya",
  "Arya",
  "Aashritha",
  "Aatmaja",
  "Atmaja",
  "Abhaya",
  "Adwitiya",
  "Agrata",
  "Ahilya",
  "Ahalya",
  "Aishani",
  "Akshainie",
  "Akshata",
  "Akshita",
  "Akula",
  "Ambar",
  "Amodini",
  "Amrita",
  "Amritambu",
  "Anala",
  "Anamika",
  "Ananda",
  "Anandamayi",
  "Ananta",
  "Anila",
  "Anjali",
  "Anjushri",
  "Anjushree",
  "Annapurna",
  "Anshula",
  "Anuja",
  "Anusuya",
  "Anasuya",
  "Anasooya",
  "Anwesha",
  "Apsara",
  "Aruna",
  "Asha",
  "Aasa",
  "Aasha",
  "Aslesha",
  "Atreyi",
  "Atreyee",
  "Avani",
  "Abani",
  "Avantika",
  "Ayushmati",
  "Baidehi",
  "Vaidehi",
  "Bala",
  "Baala",
  "Balamani",
  "Basanti",
  "Vasanti",
  "Bela",
  "Bhadra",
  "Bhagirathi",
  "Bhagwanti",
  "Bhagwati",
  "Bhamini",
  "Bhanumati",
  "Bhaanumati",
  "Bhargavi",
  "Bhavani",
  "Bhilangana",
  "Bilwa",
  "Bilva",
  "Buddhana",
  "Chakrika",
  "Chanda",
  "Chandi",
  "Chandni",
  "Chandini",
  "Chandani",
  "Chandra",
  "Chandira",
  "Chandrabhaga",
  "Chandrakala",
  "Chandrakin",
  "Chandramani",
  "Chandrani",
  "Chandraprabha",
  "Chandraswaroopa",
  "Chandravati",
  "Chapala",
  "Charumati",
  "Charvi",
  "Chatura",
  "Chitrali",
  "Chitramala",
  "Chitrangada",
  "Daksha",
  "Dakshayani",
  "Damayanti",
  "Darshwana",
  "Deepali",
  "Dipali",
  "Deeptimoyee",
  "Deeptimayee",
  "Devangana",
  "Devani",
  "Devasree",
  "Devi",
  "Daevi",
  "Devika",
  "Daevika",
  "Dhaanyalakshmi",
  "Dhanalakshmi",
  "Dhana",
  "Dhanadeepa",
  "Dhara",
  "Dharani",
  "Dharitri",
  "Dhatri",
  "Diksha",
  "Deeksha",
  "Divya",
  "Draupadi",
  "Dulari",
  "Durga",
  "Durgeshwari",
  "Ekaparnika",
  "Elakshi",
  "Enakshi",
  "Esha",
  "Eshana",
  "Eshita",
  "Gautami",
  "Gayatri",
  "Geeta",
  "Geetanjali",
  "Gitanjali",
  "Gemine",
  "Gemini",
  "Girja",
  "Girija",
  "Gita",
  "Hamsini",
  "Harinakshi",
  "Harita",
  "Heema",
  "Himadri",
  "Himani",
  "Hiranya",
  "Indira",
  "Jaimini",
  "Jaya",
  "Jyoti",
  "Jyotsana",
  "Kali",
  "Kalinda",
  "Kalpana",
  "Kalyani",
  "Kama",
  "Kamala",
  "Kamla",
  "Kanchan",
  "Kanishka",
  "Kanti",
  "Kashyapi",
  "Kumari",
  "Kumuda",
  "Lakshmi",
  "Laxmi",
  "Lalita",
  "Lavanya",
  "Leela",
  "Lila",
  "Leela",
  "Madhuri",
  "Malti",
  "Malati",
  "Mandakini",
  "Mandaakin",
  "Mangala",
  "Mangalya",
  "Mani",
  "Manisha",
  "Manjusha",
  "Meena",
  "Mina",
  "Meenakshi",
  "Minakshi",
  "Menka",
  "Menaka",
  "Mohana",
  "Mohini",
  "Nalini",
  "Nikita",
  "Ojaswini",
  "Omana",
  "Oormila",
  "Urmila",
  "Opalina",
  "Opaline",
  "Padma",
  "Parvati",
  "Poornima",
  "Purnima",
  "Pramila",
  "Prasanna",
  "Preity",
  "Prema",
  "Priya",
  "Priyala",
  "Pushti",
  "Radha",
  "Rageswari",
  "Rageshwari",
  "Rajinder",
  "Ramaa",
  "Rati",
  "Rita",
  "Rohana",
  "Rukhmani",
  "Rukmin",
  "Rupinder",
  "Sanya",
  "Sarada",
  "Sharda",
  "Sarala",
  "Sarla",
  "Saraswati",
  "Sarisha",
  "Saroja",
  "Shakti",
  "Shakuntala",
  "Shanti",
  "Sharmila",
  "Shashi",
  "Shashikala",
  "Sheela",
  "Shivakari",
  "Shobhana",
  "Shresth",
  "Shresthi",
  "Shreya",
  "Shreyashi",
  "Shridevi",
  "Shrishti",
  "Shubha",
  "Shubhaprada",
  "Siddhi",
  "Sitara",
  "Sloka",
  "Smita",
  "Smriti",
  "Soma",
  "Subhashini",
  "Subhasini",
  "Sucheta",
  "Sudeva",
  "Sujata",
  "Sukanya",
  "Suma",
  "Suma",
  "Sumitra",
  "Sunita",
  "Suryakantam",
  "Sushma",
  "Swara",
  "Swarnalata",
  "Sweta",
  "Shwet",
  "Tanirika",
  "Tanushree",
  "Tanushri",
  "Tanushri",
  "Tanya",
  "Tara",
  "Trisha",
  "Uma",
  "Usha",
  "Vaijayanti",
  "Vaijayanthi",
  "Baijayanti",
  "Vaishvi",
  "Vaishnavi",
  "Vaishno",
  "Varalakshmi",
  "Vasudha",
  "Vasundhara",
  "Veda",
  "Vedanshi",
  "Vidya",
  "Vimala",
  "Vrinda",
  "Vrund",
  "Aadi",
  "Aadidev",
  "Aadinath",
  "Aaditya",
  "Aagam",
  "Aagney",
  "Aamod",
  "Aanandaswarup",
  "Anand Swarup",
  "Aanjaneya",
  "Anjaneya",
  "Aaryan",
  "Aryan",
  "Aatmaj",
  "Aatreya",
  "Aayushmaan",
  "Aayushman",
  "Abhaidev",
  "Abhaya",
  "Abhirath",
  "Abhisyanta",
  "Acaryatanaya",
  "Achalesvara",
  "Acharyanandana",
  "Acharyasuta",
  "Achintya",
  "Achyut",
  "Adheesh",
  "Adhiraj",
  "Adhrit",
  "Adikavi",
  "Adinath",
  "Aditeya",
  "Aditya",
  "Adityanandan",
  "Adityanandana",
  "Adripathi",
  "Advaya",
  "Agasti",
  "Agastya",
  "Agneya",
  "Aagneya",
  "Agnimitra",
  "Agniprava",
  "Agnivesh",
  "Agrata",
  "Ajit",
  "Ajeet",
  "Akroor",
  "Akshaj",
  "Akshat",
  "Akshayakeerti",
  "Alok",
  "Aalok",
  "Amaranaath",
  "Amarnath",
  "Amaresh",
  "Ambar",
  "Ameyatma",
  "Amish",
  "Amogh",
  "Amrit",
  "Anaadi",
  "Anagh",
  "Anal",
  "Anand",
  "Aanand",
  "Anang",
  "Anil",
  "Anilaabh",
  "Anilabh",
  "Anish",
  "Ankal",
  "Anunay",
  "Anurag",
  "Anuraag",
  "Archan",
  "Arindam",
  "Arjun",
  "Arnesh",
  "Arun",
  "Ashlesh",
  "Ashok",
  "Atmanand",
  "Atmananda",
  "Avadhesh",
  "Baalaaditya",
  "Baladitya",
  "Baalagopaal",
  "Balgopal",
  "Balagopal",
  "Bahula",
  "Bakula",
  "Bala",
  "Balaaditya",
  "Balachandra",
  "Balagovind",
  "Bandhu",
  "Bandhul",
  "Bankim",
  "Bankimchandra",
  "Bhadrak",
  "Bhadraksh",
  "Bhadran",
  "Bhagavaan",
  "Bhagvan",
  "Bharadwaj",
  "Bhardwaj",
  "Bharat",
  "Bhargava",
  "Bhasvan",
  "Bhaasvan",
  "Bhaswar",
  "Bhaaswar",
  "Bhaumik",
  "Bhaves",
  "Bheeshma",
  "Bhisham",
  "Bhishma",
  "Bhima",
  "Bhoj",
  "Bhramar",
  "Bhudev",
  "Bhudeva",
  "Bhupati",
  "Bhoopati",
  "Bhoopat",
  "Bhupen",
  "Bhushan",
  "Bhooshan",
  "Bhushit",
  "Bhooshit",
  "Bhuvanesh",
  "Bhuvaneshwar",
  "Bilva",
  "Bodhan",
  "Brahma",
  "Brahmabrata",
  "Brahmanandam",
  "Brahmaanand",
  "Brahmdev",
  "Brajendra",
  "Brajesh",
  "Brijesh",
  "Birjesh",
  "Budhil",
  "Chakor",
  "Chakradhar",
  "Chakravartee",
  "Chakravarti",
  "Chanakya",
  "Chaanakya",
  "Chandak",
  "Chandan",
  "Chandra",
  "Chandraayan",
  "Chandrabhan",
  "Chandradev",
  "Chandraketu",
  "Chandramauli",
  "Chandramohan",
  "Chandran",
  "Chandranath",
  "Chapal",
  "Charak",
  "Charuchandra",
  "Chaaruchandra",
  "Charuvrat",
  "Chatur",
  "Chaturaanan",
  "Chaturbhuj",
  "Chetan",
  "Chaten",
  "Chaitan",
  "Chetanaanand",
  "Chidaakaash",
  "Chidaatma",
  "Chidambar",
  "Chidambaram",
  "Chidananda",
  "Chinmayanand",
  "Chinmayananda",
  "Chiranjeev",
  "Chiranjeeve",
  "Chitraksh",
  "Daiwik",
  "Daksha",
  "Damodara",
  "Dandak",
  "Dandapaani",
  "Darshan",
  "Datta",
  "Dayaamay",
  "Dayamayee",
  "Dayaananda",
  "Dayaanidhi",
  "Kin",
  "Deenabandhu",
  "Deepan",
  "Deepankar",
  "Dipankar",
  "Deependra",
  "Dipendra",
  "Deepesh",
  "Dipesh",
  "Deeptanshu",
  "Deeptendu",
  "Diptendu",
  "Deeptiman",
  "Deeptimoy",
  "Deeptimay",
  "Dev",
  "Deb",
  "Devadatt",
  "Devagya",
  "Devajyoti",
  "Devak",
  "Devdan",
  "Deven",
  "Devesh",
  "Deveshwar",
  "Devi",
  "Devvrat",
  "Dhananjay",
  "Dhanapati",
  "Dhanpati",
  "Dhanesh",
  "Dhanu",
  "Dhanvin",
  "Dharmaketu",
  "Dhruv",
  "Dhyanesh",
  "Dhyaneshwar",
  "Digambar",
  "Digambara",
  "Dinakar",
  "Dinkar",
  "Dinesh",
  "Divaakar",
  "Divakar",
  "Deevakar",
  "Divjot",
  "Dron",
  "Drona",
  "Dwaipayan",
  "Dwaipayana",
  "Eekalabya",
  "Ekalavya",
  "Ekaksh",
  "Ekaaksh",
  "Ekaling",
  "Ekdant",
  "Ekadant",
  "Gajaadhar",
  "Gajadhar",
  "Gajbaahu",
  "Gajabahu",
  "Ganak",
  "Ganaka",
  "Ganapati",
  "Gandharv",
  "Gandharva",
  "Ganesh",
  "Gangesh",
  "Garud",
  "Garuda",
  "Gati",
  "Gatik",
  "Gaurang",
  "Gauraang",
  "Gauranga",
  "Gouranga",
  "Gautam",
  "Gautama",
  "Goutam",
  "Ghanaanand",
  "Ghanshyam",
  "Ghanashyam",
  "Giri",
  "Girik",
  "Girika",
  "Girindra",
  "Giriraaj",
  "Giriraj",
  "Girish",
  "Gopal",
  "Gopaal",
  "Gopi",
  "Gopee",
  "Gorakhnath",
  "Gorakhanatha",
  "Goswamee",
  "Goswami",
  "Gotum",
  "Gautam",
  "Govinda",
  "Gobinda",
  "Gudakesha",
  "Gudakesa",
  "Gurdev",
  "Guru",
  "Hari",
  "Harinarayan",
  "Harit",
  "Himadri",
  "Hiranmay",
  "Hiranmaya",
  "Hiranya",
  "Inder",
  "Indra",
  "Indra",
  "Jagadish",
  "Jagadisha",
  "Jagathi",
  "Jagdeep",
  "Jagdish",
  "Jagmeet",
  "Jahnu",
  "Jai",
  "Javas",
  "Jay",
  "Jitendra",
  "Jitender",
  "Jyotis",
  "Kailash",
  "Kama",
  "Kamalesh",
  "Kamlesh",
  "Kanak",
  "Kanaka",
  "Kannan",
  "Kannen",
  "Karan",
  "Karthik",
  "Kartik",
  "Karunanidhi",
  "Kashyap",
  "Kiran",
  "Kirti",
  "Keerti",
  "Krishna",
  "Krishnadas",
  "Krishnadasa",
  "Kumar",
  "Lai",
  "Lakshman",
  "Laxman",
  "Lakshmidhar",
  "Lakshminath",
  "Lal",
  "Laal",
  "Mahendra",
  "Mohinder",
  "Mahesh",
  "Maheswar",
  "Mani",
  "Manik",
  "Manikya",
  "Manoj",
  "Marut",
  "Mayoor",
  "Meghnad",
  "Meghnath",
  "Mohan",
  "Mukesh",
  "Mukul",
  "Nagabhushanam",
  "Nanda",
  "Narayan",
  "Narendra",
  "Narinder",
  "Naveen",
  "Navin",
  "Nawal",
  "Naval",
  "Nimit",
  "Niranjan",
  "Nirbhay",
  "Niro",
  "Param",
  "Paramartha",
  "Pran",
  "Pranay",
  "Prasad",
  "Prathamesh",
  "Prayag",
  "Prem",
  "Puneet",
  "Purushottam",
  "Rahul",
  "Raj",
  "Rajan",
  "Rajendra",
  "Rajinder",
  "Rajiv",
  "Rakesh",
  "Ramesh",
  "Rameshwar",
  "Ranjit",
  "Ranjeet",
  "Ravi",
  "Ritesh",
  "Rohan",
  "Rohit",
  "Rudra",
  "Sachin",
  "Sameer",
  "Samir",
  "Sanjay",
  "Sanka",
  "Sarvin",
  "Satish",
  "Satyen",
  "Shankar",
  "Shantanu",
  "Shashi",
  "Sher",
  "Shiv",
  "Siddarth",
  "Siddhran",
  "Som",
  "Somu",
  "Somnath",
  "Subhash",
  "Subodh",
  "Suman",
  "Suresh",
  "Surya",
  "Suryakant",
  "Suryakanta",
  "Sushil",
  "Susheel",
  "Swami",
  "Swapnil",
  "Tapan",
  "Tara",
  "Tarun",
  "Tej",
  "Tejas",
  "Trilochan",
  "Trilochana",
  "Trilok",
  "Trilokesh",
  "Triloki",
  "Triloki Nath",
  "Trilokanath",
  "Tushar",
  "Udai",
  "Udit",
  "Ujjawal",
  "Ujjwal",
  "Umang",
  "Upendra",
  "Uttam",
  "Vasudev",
  "Vasudeva",
  "Vedang",
  "Vedanga",
  "Vidhya",
  "Vidur",
  "Vidhur",
  "Vijay",
  "Vimal",
  "Vinay",
  "Vishnu",
  "Bishnu",
  "Vishwamitra",
  "Vyas",
  "Yogendra",
  "Yoginder",
  "Yogesh"
];

},{}],278:[function(require,module,exports){
arguments[4][227][0].apply(exports,arguments)
},{"./first_name":277,"./last_name":279,"dup":227}],279:[function(require,module,exports){
module["exports"] = [
  "Abbott",
  "Achari",
  "Acharya",
  "Adiga",
  "Agarwal",
  "Ahluwalia",
  "Ahuja",
  "Arora",
  "Asan",
  "Bandopadhyay",
  "Banerjee",
  "Bharadwaj",
  "Bhat",
  "Butt",
  "Bhattacharya",
  "Bhattathiri",
  "Chaturvedi",
  "Chattopadhyay",
  "Chopra",
  "Desai",
  "Deshpande",
  "Devar",
  "Dhawan",
  "Dubashi",
  "Dutta",
  "Dwivedi",
  "Embranthiri",
  "Ganaka",
  "Gandhi",
  "Gill",
  "Gowda",
  "Guha",
  "Guneta",
  "Gupta",
  "Iyer",
  "Iyengar",
  "Jain",
  "Jha",
  "Johar",
  "Joshi",
  "Kakkar",
  "Kaniyar",
  "Kapoor",
  "Kaul",
  "Kaur",
  "Khan",
  "Khanna",
  "Khatri",
  "Kocchar",
  "Mahajan",
  "Malik",
  "Marar",
  "Menon",
  "Mehra",
  "Mehrotra",
  "Mishra",
  "Mukhopadhyay",
  "Nayar",
  "Naik",
  "Nair",
  "Nambeesan",
  "Namboothiri",
  "Nehru",
  "Pandey",
  "Panicker",
  "Patel",
  "Patil",
  "Pilla",
  "Pillai",
  "Pothuvaal",
  "Prajapat",
  "Rana",
  "Reddy",
  "Saini",
  "Sethi",
  "Shah",
  "Sharma",
  "Shukla",
  "Singh",
  "Sinha",
  "Somayaji",
  "Tagore",
  "Talwar",
  "Tandon",
  "Trivedi",
  "Varrier",
  "Varma",
  "Varman",
  "Verma"
];

},{}],280:[function(require,module,exports){
module["exports"] = [
  "+91###-###-####",
  "+91##########",
  "+91-###-#######"
];

},{}],281:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":280,"dup":85}],282:[function(require,module,exports){
module["exports"] = [
  "United States",
  "United States of America",
  "USA"
];

},{}],283:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.default_country = require("./default_country");
address.postcode_by_state = require("./postcode_by_state");

},{"./default_country":282,"./postcode_by_state":284}],284:[function(require,module,exports){
module["exports"] = {
  "AL": "350##",
  "AK": "995##",
  "AS": "967##",
  "AZ": "850##",
  "AR": "717##",
  "CA": "900##",
  "CO": "800##",
  "CT": "061##",
  "DC": "204##",
  "DE": "198##",
  "FL": "322##",
  "GA": "301##",
  "HI": "967##",
  "ID": "832##",
  "IL": "600##",
  "IN": "463##",
  "IA": "510##",
  "KS": "666##",
  "KY": "404##",
  "LA": "701##",
  "ME": "042##",
  "MD": "210##",
  "MA": "026##",
  "MI": "480##",
  "MN": "555##",
  "MS": "387##",
  "MO": "650##",
  "MT": "590##",
  "NE": "688##",
  "NV": "898##",
  "NH": "036##",
  "NJ": "076##",
  "NM": "880##",
  "NY": "122##",
  "NC": "288##",
  "ND": "586##",
  "OH": "444##",
  "OK": "730##",
  "OR": "979##",
  "PA": "186##",
  "RI": "029##",
  "SC": "299##",
  "SD": "577##",
  "TN": "383##",
  "TX": "798##",
  "UT": "847##",
  "VT": "050##",
  "VA": "222##",
  "WA": "990##",
  "WV": "247##",
  "WI": "549##",
  "WY": "831##"
};

},{}],285:[function(require,module,exports){
var en_US = {};
module['exports'] = en_US;
en_US.title = "United States (English)";
en_US.internet = require("./internet");
en_US.address = require("./address");
en_US.phone_number = require("./phone_number");

},{"./address":283,"./internet":287,"./phone_number":290}],286:[function(require,module,exports){
module["exports"] = [
  "com",
  "us",
  "biz",
  "info",
  "name",
  "net",
  "org"
];

},{}],287:[function(require,module,exports){
arguments[4][126][0].apply(exports,arguments)
},{"./domain_suffix":286,"dup":126}],288:[function(require,module,exports){
module["exports"] = [
  "201",
  "202",
  "203",
  "205",
  "206",
  "207",
  "208",
  "209",
  "210",
  "212",
  "213",
  "214",
  "215",
  "216",
  "217",
  "218",
  "219",
  "224",
  "225",
  "227",
  "228",
  "229",
  "231",
  "234",
  "239",
  "240",
  "248",
  "251",
  "252",
  "253",
  "254",
  "256",
  "260",
  "262",
  "267",
  "269",
  "270",
  "276",
  "281",
  "283",
  "301",
  "302",
  "303",
  "304",
  "305",
  "307",
  "308",
  "309",
  "310",
  "312",
  "313",
  "314",
  "315",
  "316",
  "317",
  "318",
  "319",
  "320",
  "321",
  "323",
  "330",
  "331",
  "334",
  "336",
  "337",
  "339",
  "347",
  "351",
  "352",
  "360",
  "361",
  "386",
  "401",
  "402",
  "404",
  "405",
  "406",
  "407",
  "408",
  "409",
  "410",
  "412",
  "413",
  "414",
  "415",
  "417",
  "419",
  "423",
  "424",
  "425",
  "434",
  "435",
  "440",
  "443",
  "445",
  "464",
  "469",
  "470",
  "475",
  "478",
  "479",
  "480",
  "484",
  "501",
  "502",
  "503",
  "504",
  "505",
  "507",
  "508",
  "509",
  "510",
  "512",
  "513",
  "515",
  "516",
  "517",
  "518",
  "520",
  "530",
  "540",
  "541",
  "551",
  "557",
  "559",
  "561",
  "562",
  "563",
  "564",
  "567",
  "570",
  "571",
  "573",
  "574",
  "580",
  "585",
  "586",
  "601",
  "602",
  "603",
  "605",
  "606",
  "607",
  "608",
  "609",
  "610",
  "612",
  "614",
  "615",
  "616",
  "617",
  "618",
  "619",
  "620",
  "623",
  "626",
  "630",
  "631",
  "636",
  "641",
  "646",
  "650",
  "651",
  "660",
  "661",
  "662",
  "667",
  "678",
  "682",
  "701",
  "702",
  "703",
  "704",
  "706",
  "707",
  "708",
  "712",
  "713",
  "714",
  "715",
  "716",
  "717",
  "718",
  "719",
  "720",
  "724",
  "727",
  "731",
  "732",
  "734",
  "737",
  "740",
  "754",
  "757",
  "760",
  "763",
  "765",
  "770",
  "772",
  "773",
  "774",
  "775",
  "781",
  "785",
  "786",
  "801",
  "802",
  "803",
  "804",
  "805",
  "806",
  "808",
  "810",
  "812",
  "813",
  "814",
  "815",
  "816",
  "817",
  "818",
  "828",
  "830",
  "831",
  "832",
  "835",
  "843",
  "845",
  "847",
  "848",
  "850",
  "856",
  "857",
  "858",
  "859",
  "860",
  "862",
  "863",
  "864",
  "865",
  "870",
  "872",
  "878",
  "901",
  "903",
  "904",
  "906",
  "907",
  "908",
  "909",
  "910",
  "912",
  "913",
  "914",
  "915",
  "916",
  "917",
  "918",
  "919",
  "920",
  "925",
  "928",
  "931",
  "936",
  "937",
  "940",
  "941",
  "947",
  "949",
  "952",
  "954",
  "956",
  "959",
  "970",
  "971",
  "972",
  "973",
  "975",
  "978",
  "979",
  "980",
  "984",
  "985",
  "989"
];

},{}],289:[function(require,module,exports){
arguments[4][288][0].apply(exports,arguments)
},{"dup":288}],290:[function(require,module,exports){
var phone_number = {};
module['exports'] = phone_number;
phone_number.area_code = require("./area_code");
phone_number.exchange_code = require("./exchange_code");

},{"./area_code":288,"./exchange_code":289}],291:[function(require,module,exports){
arguments[4][214][0].apply(exports,arguments)
},{"dup":214}],292:[function(require,module,exports){
module["exports"] = [
  "#{city_prefix}"
];

},{}],293:[function(require,module,exports){
module["exports"] = [
  "Bondi",
  "Burleigh Heads",
  "Carlton",
  "Fitzroy",
  "Fremantle",
  "Glenelg",
  "Manly",
  "Noosa",
  "Stones Corner",
  "St Kilda",
  "Surry Hills",
  "Yarra Valley"
];

},{}],294:[function(require,module,exports){
arguments[4][215][0].apply(exports,arguments)
},{"dup":215}],295:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.street_root = require("./street_root");
address.street_name = require("./street_name");
address.city_prefix = require("./city_prefix");
address.city = require("./city");
address.state_abbr = require("./state_abbr");
address.region = require("./region");
address.state = require("./state");
address.postcode = require("./postcode");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.default_country = require("./default_country");

},{"./building_number":291,"./city":292,"./city_prefix":293,"./default_country":294,"./postcode":296,"./region":297,"./state":298,"./state_abbr":299,"./street_name":300,"./street_root":301,"./street_suffix":302}],296:[function(require,module,exports){
arguments[4][217][0].apply(exports,arguments)
},{"dup":217}],297:[function(require,module,exports){
module["exports"] = [
  "South East Queensland",
  "Wide Bay Burnett",
  "Margaret River",
  "Port Pirie",
  "Gippsland",
  "Elizabeth",
  "Barossa"
];

},{}],298:[function(require,module,exports){
arguments[4][218][0].apply(exports,arguments)
},{"dup":218}],299:[function(require,module,exports){
arguments[4][219][0].apply(exports,arguments)
},{"dup":219}],300:[function(require,module,exports){
arguments[4][64][0].apply(exports,arguments)
},{"dup":64}],301:[function(require,module,exports){
module["exports"] = [
  "Ramsay Street",
  "Bonnie Doon",
  "Cavill Avenue",
  "Queen Street"
];

},{}],302:[function(require,module,exports){
arguments[4][220][0].apply(exports,arguments)
},{"dup":220}],303:[function(require,module,exports){
arguments[4][221][0].apply(exports,arguments)
},{"./suffix":304,"dup":221}],304:[function(require,module,exports){
arguments[4][222][0].apply(exports,arguments)
},{"dup":222}],305:[function(require,module,exports){
var en_au_ocker = {};
module['exports'] = en_au_ocker;
en_au_ocker.title = "Australia Ocker (English)";
en_au_ocker.name = require("./name");
en_au_ocker.company = require("./company");
en_au_ocker.internet = require("./internet");
en_au_ocker.address = require("./address");
en_au_ocker.phone_number = require("./phone_number");

},{"./address":295,"./company":303,"./internet":307,"./name":309,"./phone_number":313}],306:[function(require,module,exports){
arguments[4][224][0].apply(exports,arguments)
},{"dup":224}],307:[function(require,module,exports){
arguments[4][126][0].apply(exports,arguments)
},{"./domain_suffix":306,"dup":126}],308:[function(require,module,exports){
module["exports"] = [
  "Charlotte",
  "Ava",
  "Chloe",
  "Emily",
  "Olivia",
  "Zoe",
  "Lily",
  "Sophie",
  "Amelia",
  "Sofia",
  "Ella",
  "Isabella",
  "Ruby",
  "Sienna",
  "Mia+3",
  "Grace",
  "Emma",
  "Ivy",
  "Layla",
  "Abigail",
  "Isla",
  "Hannah",
  "Zara",
  "Lucy",
  "Evie",
  "Annabelle",
  "Madison",
  "Alice",
  "Georgia",
  "Maya",
  "Madeline",
  "Audrey",
  "Scarlett",
  "Isabelle",
  "Chelsea",
  "Mila",
  "Holly",
  "Indiana",
  "Poppy",
  "Harper",
  "Sarah",
  "Alyssa",
  "Jasmine",
  "Imogen",
  "Hayley",
  "Pheobe",
  "Eva",
  "Evelyn",
  "Mackenzie",
  "Ayla",
  "Oliver",
  "Jack",
  "Jackson",
  "William",
  "Ethan",
  "Charlie",
  "Lucas",
  "Cooper",
  "Lachlan",
  "Noah",
  "Liam",
  "Alexander",
  "Max",
  "Isaac",
  "Thomas",
  "Xavier",
  "Oscar",
  "Benjamin",
  "Aiden",
  "Mason",
  "Samuel",
  "James",
  "Levi",
  "Riley",
  "Harrison",
  "Ryan",
  "Henry",
  "Jacob",
  "Joshua",
  "Leo",
  "Zach",
  "Harry",
  "Hunter",
  "Flynn",
  "Archie",
  "Tyler",
  "Elijah",
  "Hayden",
  "Jayden",
  "Blake",
  "Archer",
  "Ashton",
  "Sebastian",
  "Zachery",
  "Lincoln",
  "Mitchell",
  "Luca",
  "Nathan",
  "Kai",
  "Connor",
  "Tom",
  "Nigel",
  "Matt",
  "Sean"
];

},{}],309:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.ocker_first_name = require("./ocker_first_name");

},{"./first_name":308,"./last_name":310,"./ocker_first_name":311}],310:[function(require,module,exports){
module["exports"] = [
  "Smith",
  "Jones",
  "Williams",
  "Brown",
  "Wilson",
  "Taylor",
  "Morton",
  "White",
  "Martin",
  "Anderson",
  "Thompson",
  "Nguyen",
  "Thomas",
  "Walker",
  "Harris",
  "Lee",
  "Ryan",
  "Robinson",
  "Kelly",
  "King",
  "Rausch",
  "Ridge",
  "Connolly",
  "LeQuesne"
];

},{}],311:[function(require,module,exports){
module["exports"] = [
  "Bazza",
  "Bluey",
  "Davo",
  "Johno",
  "Shano",
  "Shazza"
];

},{}],312:[function(require,module,exports){
arguments[4][229][0].apply(exports,arguments)
},{"dup":229}],313:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":312,"dup":85}],314:[function(require,module,exports){
module["exports"] = [
  " s/n.",
  ", #",
  ", ##",
  " #",
  " ##"
];

},{}],315:[function(require,module,exports){
arguments[4][292][0].apply(exports,arguments)
},{"dup":292}],316:[function(require,module,exports){
module["exports"] = [
  "Parla",
  "Telde",
  "Baracaldo",
  "San Fernando",
  "Torrevieja",
  "Lugo",
  "Santiago de Compostela",
  "Gerona",
  "Cáceres",
  "Lorca",
  "Coslada",
  "Talavera de la Reina",
  "El Puerto de Santa María",
  "Cornellá de Llobregat",
  "Avilés",
  "Palencia",
  "Gecho",
  "Orihuela",
  "Pontevedra",
  "Pozuelo de Alarcón",
  "Toledo",
  "El Ejido",
  "Guadalajara",
  "Gandía",
  "Ceuta",
  "Ferrol",
  "Chiclana de la Frontera",
  "Manresa",
  "Roquetas de Mar",
  "Ciudad Real",
  "Rubí",
  "Benidorm",
  "San Sebastían de los Reyes",
  "Ponferrada",
  "Zamora",
  "Alcalá de Guadaira",
  "Fuengirola",
  "Mijas",
  "Sanlúcar de Barrameda",
  "La Línea de la Concepción",
  "Majadahonda",
  "Sagunto",
  "El Prat de LLobregat",
  "Viladecans",
  "Linares",
  "Alcoy",
  "Irún",
  "Estepona",
  "Torremolinos",
  "Rivas-Vaciamadrid",
  "Molina de Segura",
  "Paterna",
  "Granollers",
  "Santa Lucía de Tirajana",
  "Motril",
  "Cerdañola del Vallés",
  "Arrecife",
  "Segovia",
  "Torrelavega",
  "Elda",
  "Mérida",
  "Ávila",
  "Valdemoro",
  "Cuenta",
  "Collado Villalba",
  "Benalmádena",
  "Mollet del Vallés",
  "Puertollano",
  "Madrid",
  "Barcelona",
  "Valencia",
  "Sevilla",
  "Zaragoza",
  "Málaga",
  "Murcia",
  "Palma de Mallorca",
  "Las Palmas de Gran Canaria",
  "Bilbao",
  "Córdoba",
  "Alicante",
  "Valladolid",
  "Vigo",
  "Gijón",
  "Hospitalet de LLobregat",
  "La Coruña",
  "Granada",
  "Vitoria",
  "Elche",
  "Santa Cruz de Tenerife",
  "Oviedo",
  "Badalona",
  "Cartagena",
  "Móstoles",
  "Jerez de la Frontera",
  "Tarrasa",
  "Sabadell",
  "Alcalá de Henares",
  "Pamplona",
  "Fuenlabrada",
  "Almería",
  "San Sebastián",
  "Leganés",
  "Santander",
  "Burgos",
  "Castellón de la Plana",
  "Alcorcón",
  "Albacete",
  "Getafe",
  "Salamanca",
  "Huelva",
  "Logroño",
  "Badajoz",
  "San Cristróbal de la Laguna",
  "León",
  "Tarragona",
  "Cádiz",
  "Lérida",
  "Marbella",
  "Mataró",
  "Dos Hermanas",
  "Santa Coloma de Gramanet",
  "Jaén",
  "Algeciras",
  "Torrejón de Ardoz",
  "Orense",
  "Alcobendas",
  "Reus",
  "Calahorra",
  "Inca"
];

},{}],317:[function(require,module,exports){
module["exports"] = [
  "Afganistán",
  "Albania",
  "Argelia",
  "Andorra",
  "Angola",
  "Argentina",
  "Armenia",
  "Aruba",
  "Australia",
  "Austria",
  "Azerbayán",
  "Bahamas",
  "Barein",
  "Bangladesh",
  "Barbados",
  "Bielorusia",
  "Bélgica",
  "Belice",
  "Bermuda",
  "Bután",
  "Bolivia",
  "Bosnia Herzegovina",
  "Botswana",
  "Brasil",
  "Bulgaria",
  "Burkina Faso",
  "Burundi",
  "Camboya",
  "Camerún",
  "Canada",
  "Cabo Verde",
  "Islas Caimán",
  "Chad",
  "Chile",
  "China",
  "Isla de Navidad",
  "Colombia",
  "Comodos",
  "Congo",
  "Costa Rica",
  "Costa de Marfil",
  "Croacia",
  "Cuba",
  "Chipre",
  "República Checa",
  "Dinamarca",
  "Dominica",
  "República Dominicana",
  "Ecuador",
  "Egipto",
  "El Salvador",
  "Guinea Ecuatorial",
  "Eritrea",
  "Estonia",
  "Etiopía",
  "Islas Faro",
  "Fiji",
  "Finlandia",
  "Francia",
  "Gabón",
  "Gambia",
  "Georgia",
  "Alemania",
  "Ghana",
  "Grecia",
  "Groenlandia",
  "Granada",
  "Guadalupe",
  "Guam",
  "Guatemala",
  "Guinea",
  "Guinea-Bisau",
  "Guayana",
  "Haiti",
  "Honduras",
  "Hong Kong",
  "Hungria",
  "Islandia",
  "India",
  "Indonesia",
  "Iran",
  "Irak",
  "Irlanda",
  "Italia",
  "Jamaica",
  "Japón",
  "Jordania",
  "Kazajistan",
  "Kenia",
  "Kiribati",
  "Corea",
  "Kuwait",
  "Letonia",
  "Líbano",
  "Liberia",
  "Liechtenstein",
  "Lituania",
  "Luxemburgo",
  "Macao",
  "Macedonia",
  "Madagascar",
  "Malawi",
  "Malasia",
  "Maldivas",
  "Mali",
  "Malta",
  "Martinica",
  "Mauritania",
  "Méjico",
  "Micronesia",
  "Moldavia",
  "Mónaco",
  "Mongolia",
  "Montenegro",
  "Montserrat",
  "Marruecos",
  "Mozambique",
  "Namibia",
  "Nauru",
  "Nepal",
  "Holanda",
  "Nueva Zelanda",
  "Nicaragua",
  "Niger",
  "Nigeria",
  "Noruega",
  "Omán",
  "Pakistan",
  "Panamá",
  "Papúa Nueva Guinea",
  "Paraguay",
  "Perú",
  "Filipinas",
  "Poland",
  "Portugal",
  "Puerto Rico",
  "Rusia",
  "Ruanda",
  "Samoa",
  "San Marino",
  "Santo Tomé y Principe",
  "Arabia Saudí",
  "Senegal",
  "Serbia",
  "Seychelles",
  "Sierra Leona",
  "Singapur",
  "Eslovaquia",
  "Eslovenia",
  "Somalia",
  "España",
  "Sri Lanka",
  "Sudán",
  "Suriname",
  "Suecia",
  "Suiza",
  "Siria",
  "Taiwan",
  "Tajikistan",
  "Tanzania",
  "Tailandia",
  "Timor-Leste",
  "Togo",
  "Tonga",
  "Trinidad y Tobago",
  "Tunez",
  "Turquia",
  "Uganda",
  "Ucrania",
  "Emiratos Árabes Unidos",
  "Reino Unido",
  "Estados Unidos de América",
  "Uruguay",
  "Uzbekistan",
  "Vanuatu",
  "Venezuela",
  "Vietnam",
  "Yemen",
  "Zambia",
  "Zimbabwe"
];

},{}],318:[function(require,module,exports){
module["exports"] = [
  "España"
];

},{}],319:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.province = require("./province");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.time_zone = require("./time_zone");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":314,"./city":315,"./city_prefix":316,"./country":317,"./default_country":318,"./postcode":320,"./province":321,"./secondary_address":322,"./state":323,"./state_abbr":324,"./street_address":325,"./street_name":326,"./street_suffix":327,"./time_zone":328}],320:[function(require,module,exports){
module["exports"] = [
  "#####"
];

},{}],321:[function(require,module,exports){
module["exports"] = [
  "Álava",
  "Albacete",
  "Alicante",
  "Almería",
  "Asturias",
  "Ávila",
  "Badajoz",
  "Barcelona",
  "Burgos",
  "Cantabria",
  "Castellón",
  "Ciudad Real",
  "Cuenca",
  "Cáceres",
  "Cádiz",
  "Córdoba",
  "Gerona",
  "Granada",
  "Guadalajara",
  "Guipúzcoa",
  "Huelva",
  "Huesca",
  "Islas Baleares",
  "Jaén",
  "La Coruña",
  "La Rioja",
  "Las Palmas",
  "León",
  "Lugo",
  "lérida",
  "Madrid",
  "Murcia",
  "Málaga",
  "Navarra",
  "Orense",
  "Palencia",
  "Pontevedra",
  "Salamanca",
  "Santa Cruz de Tenerife",
  "Segovia",
  "Sevilla",
  "Soria",
  "Tarragona",
  "Teruel",
  "Toledo",
  "Valencia",
  "Valladolid",
  "Vizcaya",
  "Zamora",
  "Zaragoza"
];

},{}],322:[function(require,module,exports){
module["exports"] = [
  "Esc. ###",
  "Puerta ###"
];

},{}],323:[function(require,module,exports){
module["exports"] = [
  "Andalucía",
  "Aragón",
  "Principado de Asturias",
  "Baleares",
  "Canarias",
  "Cantabria",
  "Castilla-La Mancha",
  "Castilla y León",
  "Cataluña",
  "Comunidad Valenciana",
  "Extremadura",
  "Galicia",
  "La Rioja",
  "Comunidad de Madrid",
  "Navarra",
  "País Vasco",
  "Región de Murcia"
];

},{}],324:[function(require,module,exports){
module["exports"] = [
  "And",
  "Ara",
  "Ast",
  "Bal",
  "Can",
  "Cbr",
  "Man",
  "Leo",
  "Cat",
  "Com",
  "Ext",
  "Gal",
  "Rio",
  "Mad",
  "Nav",
  "Vas",
  "Mur"
];

},{}],325:[function(require,module,exports){
module["exports"] = [
  "#{street_name}#{building_number}",
  "#{street_name}#{building_number} #{secondary_address}"
];

},{}],326:[function(require,module,exports){
module["exports"] = [
  "#{street_suffix} #{Name.first_name}",
  "#{street_suffix} #{Name.first_name} #{Name.last_name}"
];

},{}],327:[function(require,module,exports){
module["exports"] = [
  "Aldea",
  "Apartamento",
  "Arrabal",
  "Arroyo",
  "Avenida",
  "Bajada",
  "Barranco",
  "Barrio",
  "Bloque",
  "Calle",
  "Calleja",
  "Camino",
  "Carretera",
  "Caserio",
  "Colegio",
  "Colonia",
  "Conjunto",
  "Cuesta",
  "Chalet",
  "Edificio",
  "Entrada",
  "Escalinata",
  "Explanada",
  "Extramuros",
  "Extrarradio",
  "Ferrocarril",
  "Glorieta",
  "Gran Subida",
  "Grupo",
  "Huerta",
  "Jardines",
  "Lado",
  "Lugar",
  "Manzana",
  "Masía",
  "Mercado",
  "Monte",
  "Muelle",
  "Municipio",
  "Parcela",
  "Parque",
  "Partida",
  "Pasaje",
  "Paseo",
  "Plaza",
  "Poblado",
  "Polígono",
  "Prolongación",
  "Puente",
  "Puerta",
  "Quinta",
  "Ramal",
  "Rambla",
  "Rampa",
  "Riera",
  "Rincón",
  "Ronda",
  "Rua",
  "Salida",
  "Sector",
  "Sección",
  "Senda",
  "Solar",
  "Subida",
  "Terrenos",
  "Torrente",
  "Travesía",
  "Urbanización",
  "Vía",
  "Vía Pública"
];

},{}],328:[function(require,module,exports){
module["exports"] = [
  "Pacífico/Midway",
  "Pacífico/Pago_Pago",
  "Pacífico/Honolulu",
  "America/Juneau",
  "America/Los_Angeles",
  "America/Tijuana",
  "America/Denver",
  "America/Phoenix",
  "America/Chihuahua",
  "America/Mazatlan",
  "America/Chicago",
  "America/Regina",
  "America/Mexico_City",
  "America/Mexico_City",
  "America/Monterrey",
  "America/Guatemala",
  "America/New_York",
  "America/Indiana/Indianapolis",
  "America/Bogota",
  "America/Lima",
  "America/Lima",
  "America/Halifax",
  "America/Caracas",
  "America/La_Paz",
  "America/Santiago",
  "America/St_Johns",
  "America/Sao_Paulo",
  "America/Argentina/Buenos_Aires",
  "America/Guyana",
  "America/Godthab",
  "Atlantic/South_Georgia",
  "Atlantic/Azores",
  "Atlantic/Cape_Verde",
  "Europa/Dublin",
  "Europa/London",
  "Europa/Lisbon",
  "Europa/London",
  "Africa/Casablanca",
  "Africa/Monrovia",
  "Etc/UTC",
  "Europa/Belgrade",
  "Europa/Bratislava",
  "Europa/Budapest",
  "Europa/Ljubljana",
  "Europa/Prague",
  "Europa/Sarajevo",
  "Europa/Skopje",
  "Europa/Warsaw",
  "Europa/Zagreb",
  "Europa/Brussels",
  "Europa/Copenhagen",
  "Europa/Madrid",
  "Europa/Paris",
  "Europa/Amsterdam",
  "Europa/Berlin",
  "Europa/Berlin",
  "Europa/Rome",
  "Europa/Stockholm",
  "Europa/Vienna",
  "Africa/Algiers",
  "Europa/Bucharest",
  "Africa/Cairo",
  "Europa/Helsinki",
  "Europa/Kiev",
  "Europa/Riga",
  "Europa/Sofia",
  "Europa/Tallinn",
  "Europa/Vilnius",
  "Europa/Athens",
  "Europa/Istanbul",
  "Europa/Minsk",
  "Asia/Jerusalen",
  "Africa/Harare",
  "Africa/Johannesburg",
  "Europa/Moscú",
  "Europa/Moscú",
  "Europa/Moscú",
  "Asia/Kuwait",
  "Asia/Riyadh",
  "Africa/Nairobi",
  "Asia/Baghdad",
  "Asia/Tehran",
  "Asia/Muscat",
  "Asia/Muscat",
  "Asia/Baku",
  "Asia/Tbilisi",
  "Asia/Yerevan",
  "Asia/Kabul",
  "Asia/Yekaterinburg",
  "Asia/Karachi",
  "Asia/Karachi",
  "Asia/Tashkent",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kathmandu",
  "Asia/Dhaka",
  "Asia/Dhaka",
  "Asia/Colombo",
  "Asia/Almaty",
  "Asia/Novosibirsk",
  "Asia/Rangoon",
  "Asia/Bangkok",
  "Asia/Bangkok",
  "Asia/Jakarta",
  "Asia/Krasnoyarsk",
  "Asia/Shanghai",
  "Asia/Chongqing",
  "Asia/Hong_Kong",
  "Asia/Urumqi",
  "Asia/Kuala_Lumpur",
  "Asia/Singapore",
  "Asia/Taipei",
  "Australia/Perth",
  "Asia/Irkutsk",
  "Asia/Ulaanbaatar",
  "Asia/Seoul",
  "Asia/Tokyo",
  "Asia/Tokyo",
  "Asia/Tokyo",
  "Asia/Yakutsk",
  "Australia/Darwin",
  "Australia/Adelaide",
  "Australia/Melbourne",
  "Australia/Melbourne",
  "Australia/Sydney",
  "Australia/Brisbane",
  "Australia/Hobart",
  "Asia/Vladivostok",
  "Pacífico/Guam",
  "Pacífico/Port_Moresby",
  "Asia/Magadan",
  "Asia/Magadan",
  "Pacífico/Noumea",
  "Pacífico/Fiji",
  "Asia/Kamchatka",
  "Pacífico/Majuro",
  "Pacífico/Auckland",
  "Pacífico/Auckland",
  "Pacífico/Tongatapu",
  "Pacífico/Fakaofo",
  "Pacífico/Apia"
];

},{}],329:[function(require,module,exports){
module["exports"] = [
  "6##-###-###",
  "6##.###.###",
  "6## ### ###",
  "6########"
];

},{}],330:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"./formats":329,"dup":67}],331:[function(require,module,exports){
module["exports"] = [
  "Adaptativo",
  "Avanzado",
  "Asimilado",
  "Automatizado",
  "Equilibrado",
  "Centrado en el negocio",
  "Centralizado",
  "Clonado",
  "Compatible",
  "Configurable",
  "Multi grupo",
  "Multi plataforma",
  "Centrado en el usuario",
  "Configurable",
  "Descentralizado",
  "Digitalizado",
  "Distribuido",
  "Diverso",
  "Reducido",
  "Mejorado",
  "Para toda la empresa",
  "Ergonomico",
  "Exclusivo",
  "Expandido",
  "Extendido",
  "Cara a cara",
  "Enfocado",
  "Totalmente configurable",
  "Fundamental",
  "Orígenes",
  "Horizontal",
  "Implementado",
  "Innovador",
  "Integrado",
  "Intuitivo",
  "Inverso",
  "Gestionado",
  "Obligatorio",
  "Monitorizado",
  "Multi canal",
  "Multi lateral",
  "Multi capa",
  "En red",
  "Orientado a objetos",
  "Open-source",
  "Operativo",
  "Optimizado",
  "Opcional",
  "Organico",
  "Organizado",
  "Perseverando",
  "Persistente",
  "en fases",
  "Polarizado",
  "Pre-emptivo",
  "Proactivo",
  "Enfocado a benficios",
  "Profundo",
  "Programable",
  "Progresivo",
  "Public-key",
  "Enfocado en la calidad",
  "Reactivo",
  "Realineado",
  "Re-contextualizado",
  "Re-implementado",
  "Reducido",
  "Ingenieria inversa",
  "Robusto",
  "Fácil",
  "Seguro",
  "Auto proporciona",
  "Compartible",
  "Intercambiable",
  "Sincronizado",
  "Orientado a equipos",
  "Total",
  "Universal",
  "Mejorado",
  "Actualizable",
  "Centrado en el usuario",
  "Amigable",
  "Versatil",
  "Virtual",
  "Visionario"
];

},{}],332:[function(require,module,exports){
module["exports"] = [
  "24 horas",
  "24/7",
  "3rd generación",
  "4th generación",
  "5th generación",
  "6th generación",
  "analizada",
  "asimétrica",
  "asíncrona",
  "monitorizada por red",
  "bidireccional",
  "bifurcada",
  "generada por el cliente",
  "cliente servidor",
  "coherente",
  "cohesiva",
  "compuesto",
  "sensible al contexto",
  "basado en el contexto",
  "basado en contenido",
  "dedicada",
  "generado por la demanda",
  "didactica",
  "direccional",
  "discreta",
  "dinámica",
  "potenciada",
  "acompasada",
  "ejecutiva",
  "explícita",
  "tolerante a fallos",
  "innovadora",
  "amplio ábanico",
  "global",
  "heurística",
  "alto nivel",
  "holística",
  "homogénea",
  "hibrida",
  "incremental",
  "intangible",
  "interactiva",
  "intermedia",
  "local",
  "logística",
  "maximizada",
  "metódica",
  "misión crítica",
  "móbil",
  "modular",
  "motivadora",
  "multimedia",
  "multiestado",
  "multitarea",
  "nacional",
  "basado en necesidades",
  "neutral",
  "nueva generación",
  "no-volátil",
  "orientado a objetos",
  "óptima",
  "optimizada",
  "radical",
  "tiempo real",
  "recíproca",
  "regional",
  "escalable",
  "secundaria",
  "orientada a soluciones",
  "estable",
  "estatica",
  "sistemática",
  "sistémica",
  "tangible",
  "terciaria",
  "transicional",
  "uniforme",
  "valor añadido",
  "vía web",
  "defectos cero",
  "tolerancia cero"
];

},{}],333:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.noun = require("./noun");
company.descriptor = require("./descriptor");
company.adjective = require("./adjective");
company.name = require("./name");

},{"./adjective":331,"./descriptor":332,"./name":334,"./noun":335,"./suffix":336}],334:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name} y #{Name.last_name}",
  "#{Name.last_name} #{Name.last_name} #{suffix}",
  "#{Name.last_name}, #{Name.last_name} y #{Name.last_name} Asociados"
];

},{}],335:[function(require,module,exports){
module["exports"] = [
  "habilidad",
  "acceso",
  "adaptador",
  "algoritmo",
  "alianza",
  "analista",
  "aplicación",
  "enfoque",
  "arquitectura",
  "archivo",
  "inteligencia artificial",
  "array",
  "actitud",
  "medición",
  "gestión presupuestaria",
  "capacidad",
  "desafío",
  "circuito",
  "colaboración",
  "complejidad",
  "concepto",
  "conglomeración",
  "contingencia",
  "núcleo",
  "fidelidad",
  "base de datos",
  "data-warehouse",
  "definición",
  "emulación",
  "codificar",
  "encriptar",
  "extranet",
  "firmware",
  "flexibilidad",
  "focus group",
  "previsión",
  "base de trabajo",
  "función",
  "funcionalidad",
  "Interfaz Gráfica",
  "groupware",
  "Interfaz gráfico de usuario",
  "hardware",
  "Soporte",
  "jerarquía",
  "conjunto",
  "implementación",
  "infraestructura",
  "iniciativa",
  "instalación",
  "conjunto de instrucciones",
  "interfaz",
  "intranet",
  "base del conocimiento",
  "red de area local",
  "aprovechar",
  "matrices",
  "metodologías",
  "middleware",
  "migración",
  "modelo",
  "moderador",
  "monitorizar",
  "arquitectura abierta",
  "sistema abierto",
  "orquestar",
  "paradigma",
  "paralelismo",
  "política",
  "portal",
  "estructura de precios",
  "proceso de mejora",
  "producto",
  "productividad",
  "proyecto",
  "proyección",
  "protocolo",
  "línea segura",
  "software",
  "solución",
  "estandardización",
  "estrategia",
  "estructura",
  "éxito",
  "superestructura",
  "soporte",
  "sinergia",
  "mediante",
  "marco de tiempo",
  "caja de herramientas",
  "utilización",
  "website",
  "fuerza de trabajo"
];

},{}],336:[function(require,module,exports){
module["exports"] = [
  "S.L.",
  "e Hijos",
  "S.A.",
  "Hermanos"
];

},{}],337:[function(require,module,exports){
var es = {};
module['exports'] = es;
es.title = "Spanish";
es.address = require("./address");
es.company = require("./company");
es.internet = require("./internet");
es.name = require("./name");
es.phone_number = require("./phone_number");
es.cell_phone = require("./cell_phone");

},{"./address":319,"./cell_phone":330,"./company":333,"./internet":340,"./name":342,"./phone_number":349}],338:[function(require,module,exports){
module["exports"] = [
  "com",
  "es",
  "info",
  "com.es",
  "org"
];

},{}],339:[function(require,module,exports){
arguments[4][74][0].apply(exports,arguments)
},{"dup":74}],340:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"./domain_suffix":338,"./free_email":339,"dup":75}],341:[function(require,module,exports){
module["exports"] = [
  "Adán",
  "Agustín",
  "Alberto",
  "Alejandro",
  "Alfonso",
  "Alfredo",
  "Andrés",
  "Antonio",
  "Armando",
  "Arturo",
  "Benito",
  "Benjamín",
  "Bernardo",
  "Carlos",
  "César",
  "Claudio",
  "Clemente",
  "Cristian",
  "Cristobal",
  "Daniel",
  "David",
  "Diego",
  "Eduardo",
  "Emilio",
  "Enrique",
  "Ernesto",
  "Esteban",
  "Federico",
  "Felipe",
  "Fernando",
  "Francisco",
  "Gabriel",
  "Gerardo",
  "Germán",
  "Gilberto",
  "Gonzalo",
  "Gregorio",
  "Guillermo",
  "Gustavo",
  "Hernán",
  "Homero",
  "Horacio",
  "Hugo",
  "Ignacio",
  "Jacobo",
  "Jaime",
  "Javier",
  "Jerónimo",
  "Jesús",
  "Joaquín",
  "Jorge",
  "Jorge Luis",
  "José",
  "José Eduardo",
  "José Emilio",
  "José Luis",
  "José María",
  "Juan",
  "Juan Carlos",
  "Julio",
  "Julio César",
  "Lorenzo",
  "Lucas",
  "Luis",
  "Luis Miguel",
  "Manuel",
  "Marco Antonio",
  "Marcos",
  "Mariano",
  "Mario",
  "Martín",
  "Mateo",
  "Miguel",
  "Miguel Ángel",
  "Nicolás",
  "Octavio",
  "Óscar",
  "Pablo",
  "Patricio",
  "Pedro",
  "Rafael",
  "Ramiro",
  "Ramón",
  "Raúl",
  "Ricardo",
  "Roberto",
  "Rodrigo",
  "Rubén",
  "Salvador",
  "Samuel",
  "Sancho",
  "Santiago",
  "Sergio",
  "Teodoro",
  "Timoteo",
  "Tomás",
  "Vicente",
  "Víctor",
  "Adela",
  "Adriana",
  "Alejandra",
  "Alicia",
  "Amalia",
  "Ana",
  "Ana Luisa",
  "Ana María",
  "Andrea",
  "Anita",
  "Ángela",
  "Antonia",
  "Ariadna",
  "Barbara",
  "Beatriz",
  "Berta",
  "Blanca",
  "Caridad",
  "Carla",
  "Carlota",
  "Carmen",
  "Carolina",
  "Catalina",
  "Cecilia",
  "Clara",
  "Claudia",
  "Concepción",
  "Conchita",
  "Cristina",
  "Daniela",
  "Débora",
  "Diana",
  "Dolores",
  "Lola",
  "Dorotea",
  "Elena",
  "Elisa",
  "Eloisa",
  "Elsa",
  "Elvira",
  "Emilia",
  "Esperanza",
  "Estela",
  "Ester",
  "Eva",
  "Florencia",
  "Francisca",
  "Gabriela",
  "Gloria",
  "Graciela",
  "Guadalupe",
  "Guillermina",
  "Inés",
  "Irene",
  "Isabel",
  "Isabela",
  "Josefina",
  "Juana",
  "Julia",
  "Laura",
  "Leonor",
  "Leticia",
  "Lilia",
  "Lorena",
  "Lourdes",
  "Lucia",
  "Luisa",
  "Luz",
  "Magdalena",
  "Manuela",
  "Marcela",
  "Margarita",
  "María",
  "María del Carmen",
  "María Cristina",
  "María Elena",
  "María Eugenia",
  "María José",
  "María Luisa",
  "María Soledad",
  "María Teresa",
  "Mariana",
  "Maricarmen",
  "Marilu",
  "Marisol",
  "Marta",
  "Mayte",
  "Mercedes",
  "Micaela",
  "Mónica",
  "Natalia",
  "Norma",
  "Olivia",
  "Patricia",
  "Pilar",
  "Ramona",
  "Raquel",
  "Rebeca",
  "Reina",
  "Rocio",
  "Rosa",
  "Rosalia",
  "Rosario",
  "Sara",
  "Silvia",
  "Sofia",
  "Soledad",
  "Sonia",
  "Susana",
  "Teresa",
  "Verónica",
  "Victoria",
  "Virginia",
  "Yolanda"
];

},{}],342:[function(require,module,exports){
arguments[4][203][0].apply(exports,arguments)
},{"./first_name":341,"./last_name":343,"./name":344,"./prefix":345,"./suffix":346,"./title":347,"dup":203}],343:[function(require,module,exports){
module["exports"] = [
  "Abeyta",
  "Abrego",
  "Abreu",
  "Acevedo",
  "Acosta",
  "Acuña",
  "Adame",
  "Adorno",
  "Agosto",
  "Aguayo",
  "Águilar",
  "Aguilera",
  "Aguirre",
  "Alanis",
  "Alaniz",
  "Alarcón",
  "Alba",
  "Alcala",
  "Alcántar",
  "Alcaraz",
  "Alejandro",
  "Alemán",
  "Alfaro",
  "Alicea",
  "Almanza",
  "Almaraz",
  "Almonte",
  "Alonso",
  "Alonzo",
  "Altamirano",
  "Alva",
  "Alvarado",
  "Alvarez",
  "Amador",
  "Amaya",
  "Anaya",
  "Anguiano",
  "Angulo",
  "Aparicio",
  "Apodaca",
  "Aponte",
  "Aragón",
  "Araña",
  "Aranda",
  "Arce",
  "Archuleta",
  "Arellano",
  "Arenas",
  "Arevalo",
  "Arguello",
  "Arias",
  "Armas",
  "Armendáriz",
  "Armenta",
  "Armijo",
  "Arredondo",
  "Arreola",
  "Arriaga",
  "Arroyo",
  "Arteaga",
  "Atencio",
  "Ávalos",
  "Ávila",
  "Avilés",
  "Ayala",
  "Baca",
  "Badillo",
  "Báez",
  "Baeza",
  "Bahena",
  "Balderas",
  "Ballesteros",
  "Banda",
  "Bañuelos",
  "Barajas",
  "Barela",
  "Barragán",
  "Barraza",
  "Barrera",
  "Barreto",
  "Barrientos",
  "Barrios",
  "Batista",
  "Becerra",
  "Beltrán",
  "Benavides",
  "Benavídez",
  "Benítez",
  "Bermúdez",
  "Bernal",
  "Berríos",
  "Bétancourt",
  "Blanco",
  "Bonilla",
  "Borrego",
  "Botello",
  "Bravo",
  "Briones",
  "Briseño",
  "Brito",
  "Bueno",
  "Burgos",
  "Bustamante",
  "Bustos",
  "Caballero",
  "Cabán",
  "Cabrera",
  "Cadena",
  "Caldera",
  "Calderón",
  "Calvillo",
  "Camacho",
  "Camarillo",
  "Campos",
  "Canales",
  "Candelaria",
  "Cano",
  "Cantú",
  "Caraballo",
  "Carbajal",
  "Cardenas",
  "Cardona",
  "Carmona",
  "Carranza",
  "Carrasco",
  "Carrasquillo",
  "Carreón",
  "Carrera",
  "Carrero",
  "Carrillo",
  "Carrion",
  "Carvajal",
  "Casanova",
  "Casares",
  "Casárez",
  "Casas",
  "Casillas",
  "Castañeda",
  "Castellanos",
  "Castillo",
  "Castro",
  "Cavazos",
  "Cazares",
  "Ceballos",
  "Cedillo",
  "Ceja",
  "Centeno",
  "Cepeda",
  "Cerda",
  "Cervantes",
  "Cervántez",
  "Chacón",
  "Chapa",
  "Chavarría",
  "Chávez",
  "Cintrón",
  "Cisneros",
  "Collado",
  "Collazo",
  "Colón",
  "Colunga",
  "Concepción",
  "Contreras",
  "Cordero",
  "Córdova",
  "Cornejo",
  "Corona",
  "Coronado",
  "Corral",
  "Corrales",
  "Correa",
  "Cortés",
  "Cortez",
  "Cotto",
  "Covarrubias",
  "Crespo",
  "Cruz",
  "Cuellar",
  "Curiel",
  "Dávila",
  "de Anda",
  "de Jesús",
  "Delacrúz",
  "Delafuente",
  "Delagarza",
  "Delao",
  "Delapaz",
  "Delarosa",
  "Delatorre",
  "Deleón",
  "Delgadillo",
  "Delgado",
  "Delrío",
  "Delvalle",
  "Díaz",
  "Domínguez",
  "Domínquez",
  "Duarte",
  "Dueñas",
  "Duran",
  "Echevarría",
  "Elizondo",
  "Enríquez",
  "Escalante",
  "Escamilla",
  "Escobar",
  "Escobedo",
  "Esparza",
  "Espinal",
  "Espino",
  "Espinosa",
  "Espinoza",
  "Esquibel",
  "Esquivel",
  "Estévez",
  "Estrada",
  "Fajardo",
  "Farías",
  "Feliciano",
  "Fernández",
  "Ferrer",
  "Fierro",
  "Figueroa",
  "Flores",
  "Flórez",
  "Fonseca",
  "Franco",
  "Frías",
  "Fuentes",
  "Gaitán",
  "Galarza",
  "Galindo",
  "Gallardo",
  "Gallegos",
  "Galván",
  "Gálvez",
  "Gamboa",
  "Gamez",
  "Gaona",
  "Garay",
  "García",
  "Garibay",
  "Garica",
  "Garrido",
  "Garza",
  "Gastélum",
  "Gaytán",
  "Gil",
  "Girón",
  "Godínez",
  "Godoy",
  "Gómez",
  "Gonzales",
  "González",
  "Gollum",
  "Gracia",
  "Granado",
  "Granados",
  "Griego",
  "Grijalva",
  "Guajardo",
  "Guardado",
  "Guerra",
  "Guerrero",
  "Guevara",
  "Guillen",
  "Gurule",
  "Gutiérrez",
  "Guzmán",
  "Haro",
  "Henríquez",
  "Heredia",
  "Hernádez",
  "Hernandes",
  "Hernández",
  "Herrera",
  "Hidalgo",
  "Hinojosa",
  "Holguín",
  "Huerta",
  "Hurtado",
  "Ibarra",
  "Iglesias",
  "Irizarry",
  "Jaime",
  "Jaimes",
  "Jáquez",
  "Jaramillo",
  "Jasso",
  "Jiménez",
  "Jimínez",
  "Juárez",
  "Jurado",
  "Laboy",
  "Lara",
  "Laureano",
  "Leal",
  "Lebrón",
  "Ledesma",
  "Leiva",
  "Lemus",
  "León",
  "Lerma",
  "Leyva",
  "Limón",
  "Linares",
  "Lira",
  "Llamas",
  "Loera",
  "Lomeli",
  "Longoria",
  "López",
  "Lovato",
  "Loya",
  "Lozada",
  "Lozano",
  "Lucero",
  "Lucio",
  "Luevano",
  "Lugo",
  "Luna",
  "Macías",
  "Madera",
  "Madrid",
  "Madrigal",
  "Maestas",
  "Magaña",
  "Malave",
  "Maldonado",
  "Manzanares",
  "Mares",
  "Marín",
  "Márquez",
  "Marrero",
  "Marroquín",
  "Martínez",
  "Mascareñas",
  "Mata",
  "Mateo",
  "Matías",
  "Matos",
  "Maya",
  "Mayorga",
  "Medina",
  "Medrano",
  "Mejía",
  "Meléndez",
  "Melgar",
  "Mena",
  "Menchaca",
  "Méndez",
  "Mendoza",
  "Menéndez",
  "Meraz",
  "Mercado",
  "Merino",
  "Mesa",
  "Meza",
  "Miramontes",
  "Miranda",
  "Mireles",
  "Mojica",
  "Molina",
  "Mondragón",
  "Monroy",
  "Montalvo",
  "Montañez",
  "Montaño",
  "Montemayor",
  "Montenegro",
  "Montero",
  "Montes",
  "Montez",
  "Montoya",
  "Mora",
  "Morales",
  "Moreno",
  "Mota",
  "Moya",
  "Munguía",
  "Muñiz",
  "Muñoz",
  "Murillo",
  "Muro",
  "Nájera",
  "Naranjo",
  "Narváez",
  "Nava",
  "Navarrete",
  "Navarro",
  "Nazario",
  "Negrete",
  "Negrón",
  "Nevárez",
  "Nieto",
  "Nieves",
  "Niño",
  "Noriega",
  "Núñez",
  "Ocampo",
  "Ocasio",
  "Ochoa",
  "Ojeda",
  "Olivares",
  "Olivárez",
  "Olivas",
  "Olivera",
  "Olivo",
  "Olmos",
  "Olvera",
  "Ontiveros",
  "Oquendo",
  "Ordóñez",
  "Orellana",
  "Ornelas",
  "Orosco",
  "Orozco",
  "Orta",
  "Ortega",
  "Ortiz",
  "Osorio",
  "Otero",
  "Ozuna",
  "Pabón",
  "Pacheco",
  "Padilla",
  "Padrón",
  "Páez",
  "Pagan",
  "Palacios",
  "Palomino",
  "Palomo",
  "Pantoja",
  "Paredes",
  "Parra",
  "Partida",
  "Patiño",
  "Paz",
  "Pedraza",
  "Pedroza",
  "Pelayo",
  "Peña",
  "Perales",
  "Peralta",
  "Perea",
  "Peres",
  "Pérez",
  "Pichardo",
  "Piña",
  "Pineda",
  "Pizarro",
  "Polanco",
  "Ponce",
  "Porras",
  "Portillo",
  "Posada",
  "Prado",
  "Preciado",
  "Prieto",
  "Puente",
  "Puga",
  "Pulido",
  "Quesada",
  "Quezada",
  "Quiñones",
  "Quiñónez",
  "Quintana",
  "Quintanilla",
  "Quintero",
  "Quiroz",
  "Rael",
  "Ramírez",
  "Ramón",
  "Ramos",
  "Rangel",
  "Rascón",
  "Raya",
  "Razo",
  "Regalado",
  "Rendón",
  "Rentería",
  "Reséndez",
  "Reyes",
  "Reyna",
  "Reynoso",
  "Rico",
  "Rincón",
  "Riojas",
  "Ríos",
  "Rivas",
  "Rivera",
  "Rivero",
  "Robledo",
  "Robles",
  "Rocha",
  "Rodarte",
  "Rodrígez",
  "Rodríguez",
  "Rodríquez",
  "Rojas",
  "Rojo",
  "Roldán",
  "Rolón",
  "Romero",
  "Romo",
  "Roque",
  "Rosado",
  "Rosales",
  "Rosario",
  "Rosas",
  "Roybal",
  "Rubio",
  "Ruelas",
  "Ruiz",
  "Saavedra",
  "Sáenz",
  "Saiz",
  "Salas",
  "Salazar",
  "Salcedo",
  "Salcido",
  "Saldaña",
  "Saldivar",
  "Salgado",
  "Salinas",
  "Samaniego",
  "Sanabria",
  "Sanches",
  "Sánchez",
  "Sandoval",
  "Santacruz",
  "Santana",
  "Santiago",
  "Santillán",
  "Sarabia",
  "Sauceda",
  "Saucedo",
  "Sedillo",
  "Segovia",
  "Segura",
  "Sepúlveda",
  "Serna",
  "Serrano",
  "Serrato",
  "Sevilla",
  "Sierra",
  "Sisneros",
  "Solano",
  "Solís",
  "Soliz",
  "Solorio",
  "Solorzano",
  "Soria",
  "Sosa",
  "Sotelo",
  "Soto",
  "Suárez",
  "Tafoya",
  "Tamayo",
  "Tamez",
  "Tapia",
  "Tejada",
  "Tejeda",
  "Téllez",
  "Tello",
  "Terán",
  "Terrazas",
  "Tijerina",
  "Tirado",
  "Toledo",
  "Toro",
  "Torres",
  "Tórrez",
  "Tovar",
  "Trejo",
  "Treviño",
  "Trujillo",
  "Ulibarri",
  "Ulloa",
  "Urbina",
  "Ureña",
  "Urías",
  "Uribe",
  "Urrutia",
  "Vaca",
  "Valadez",
  "Valdés",
  "Valdez",
  "Valdivia",
  "Valencia",
  "Valentín",
  "Valenzuela",
  "Valladares",
  "Valle",
  "Vallejo",
  "Valles",
  "Valverde",
  "Vanegas",
  "Varela",
  "Vargas",
  "Vásquez",
  "Vázquez",
  "Vega",
  "Vela",
  "Velasco",
  "Velásquez",
  "Velázquez",
  "Vélez",
  "Véliz",
  "Venegas",
  "Vera",
  "Verdugo",
  "Verduzco",
  "Vergara",
  "Viera",
  "Vigil",
  "Villa",
  "Villagómez",
  "Villalobos",
  "Villalpando",
  "Villanueva",
  "Villareal",
  "Villarreal",
  "Villaseñor",
  "Villegas",
  "Yáñez",
  "Ybarra",
  "Zambrano",
  "Zamora",
  "Zamudio",
  "Zapata",
  "Zaragoza",
  "Zarate",
  "Zavala",
  "Zayas",
  "Zelaya",
  "Zepeda",
  "Zúñiga"
];

},{}],344:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}"
];

},{}],345:[function(require,module,exports){
module["exports"] = [
  "Sr.",
  "Sra.",
  "Sta."
];

},{}],346:[function(require,module,exports){
arguments[4][207][0].apply(exports,arguments)
},{"dup":207}],347:[function(require,module,exports){
module["exports"] = {
  "descriptor": [
    "Jefe",
    "Senior",
    "Directo",
    "Corporativo",
    "Dinánmico",
    "Futuro",
    "Producto",
    "Nacional",
    "Regional",
    "Distrito",
    "Central",
    "Global",
    "Cliente",
    "Inversor",
    "International",
    "Heredado",
    "Adelante",
    "Interno",
    "Humano",
    "Gerente",
    "Director"
  ],
  "level": [
    "Soluciones",
    "Programa",
    "Marca",
    "Seguridada",
    "Investigación",
    "Marketing",
    "Normas",
    "Implementación",
    "Integración",
    "Funcionalidad",
    "Respuesta",
    "Paradigma",
    "Tácticas",
    "Identidad",
    "Mercados",
    "Grupo",
    "División",
    "Aplicaciones",
    "Optimización",
    "Operaciones",
    "Infraestructura",
    "Intranet",
    "Comunicaciones",
    "Web",
    "Calidad",
    "Seguro",
    "Mobilidad",
    "Cuentas",
    "Datos",
    "Creativo",
    "Configuración",
    "Contabilidad",
    "Interacciones",
    "Factores",
    "Usabilidad",
    "Métricas"
  ],
  "job": [
    "Supervisor",
    "Asociado",
    "Ejecutivo",
    "Relacciones",
    "Oficial",
    "Gerente",
    "Ingeniero",
    "Especialista",
    "Director",
    "Coordinador",
    "Administrador",
    "Arquitecto",
    "Analista",
    "Diseñador",
    "Planificador",
    "Técnico",
    "Funcionario",
    "Desarrollador",
    "Productor",
    "Consultor",
    "Asistente",
    "Facilitador",
    "Agente",
    "Representante",
    "Estratega"
  ]
};

},{}],348:[function(require,module,exports){
module["exports"] = [
  "9##-###-###",
  "9##.###.###",
  "9## ### ###",
  "9########"
];

},{}],349:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":348,"dup":85}],350:[function(require,module,exports){
module["exports"] = [
  " s/n.",
  ", #",
  ", ##",
  " #",
  " ##",
  " ###",
  " ####"
];

},{}],351:[function(require,module,exports){
arguments[4][292][0].apply(exports,arguments)
},{"dup":292}],352:[function(require,module,exports){
module["exports"] = [
  "Aguascalientes",
  "Apodaca",
  "Buenavista",
  "Campeche",
  "Cancún",
  "Cárdenas",
  "Celaya",
  "Chalco",
  "Chetumal",
  "Chicoloapan",
  "Chignahuapan",
  "Chihuahua",
  "Chilpancingo",
  "Chimalhuacán",
  "Ciudad Acuña",
  "Ciudad de México",
  "Ciudad del Carmen",
  "Ciudad López Mateos",
  "Ciudad Madero",
  "Ciudad Obregón",
  "Ciudad Valles",
  "Ciudad Victoria",
  "Coatzacoalcos",
  "Colima-Villa de Álvarez",
  "Comitán de Dominguez",
  "Córdoba",
  "Cuautitlán Izcalli",
  "Cuautla",
  "Cuernavaca",
  "Culiacán",
  "Delicias",
  "Durango",
  "Ensenada",
  "Fresnillo",
  "General Escobedo",
  "Gómez Palacio",
  "Guadalajara",
  "Guadalupe",
  "Guanajuato",
  "Guaymas",
  "Hermosillo",
  "Hidalgo del Parral",
  "Iguala",
  "Irapuato",
  "Ixtapaluca",
  "Jiutepec",
  "Juárez",
  "La Laguna",
  "La Paz",
  "La Piedad-Pénjamo",
  "León",
  "Los Cabos",
  "Los Mochis",
  "Manzanillo",
  "Matamoros",
  "Mazatlán",
  "Mérida",
  "Mexicali",
  "Minatitlán",
  "Miramar",
  "Monclova",
  "Monclova-Frontera",
  "Monterrey",
  "Morelia",
  "Naucalpan de Juárez",
  "Navojoa",
  "Nezahualcóyotl",
  "Nogales",
  "Nuevo Laredo",
  "Oaxaca",
  "Ocotlán",
  "Ojo de agua",
  "Orizaba",
  "Pachuca",
  "Piedras Negras",
  "Poza Rica",
  "Puebla",
  "Puerto Vallarta",
  "Querétaro",
  "Reynosa-Río Bravo",
  "Rioverde-Ciudad Fernández",
  "Salamanca",
  "Saltillo",
  "San Cristobal de las Casas",
  "San Francisco Coacalco",
  "San Francisco del Rincón",
  "San Juan Bautista Tuxtepec",
  "San Juan del Río",
  "San Luis Potosí-Soledad",
  "San Luis Río Colorado",
  "San Nicolás de los Garza",
  "San Pablo de las Salinas",
  "San Pedro Garza García",
  "Santa Catarina",
  "Soledad de Graciano Sánchez",
  "Tampico-Pánuco",
  "Tapachula",
  "Tecomán",
  "Tehuacán",
  "Tehuacán",
  "Tehuantepec-Salina Cruz",
  "Tepexpan",
  "Tepic",
  "Tetela de Ocampo",
  "Texcoco de Mora",
  "Tijuana",
  "Tlalnepantla",
  "Tlaquepaque",
  "Tlaxcala-Apizaco",
  "Toluca",
  "Tonalá",
  "Torreón",
  "Tula",
  "Tulancingo",
  "Tulancingo de Bravo",
  "Tuxtla Gutiérrez",
  "Uruapan",
  "Uruapan del Progreso",
  "Valle de México",
  "Veracruz",
  "Villa de Álvarez",
  "Villa Nicolás Romero",
  "Villahermosa",
  "Xalapa",
  "Zacatecas-Guadalupe",
  "Zacatlan",
  "Zacatzingo",
  "Zamora-Jacona",
  "Zapopan",
  "Zitacuaro"
];

},{}],353:[function(require,module,exports){
arguments[4][132][0].apply(exports,arguments)
},{"dup":132}],354:[function(require,module,exports){
module["exports"] = [
  "Afganistán",
  "Albania",
  "Argelia",
  "Andorra",
  "Angola",
  "Argentina",
  "Armenia",
  "Aruba",
  "Australia",
  "Austria",
  "Azerbayán",
  "Bahamas",
  "Barein",
  "Bangladesh",
  "Barbados",
  "Bielorusia",
  "Bélgica",
  "Belice",
  "Bermuda",
  "Bután",
  "Bolivia",
  "Bosnia Herzegovina",
  "Botswana",
  "Brasil",
  "Bulgaria",
  "Burkina Faso",
  "Burundi",
  "Camboya",
  "Camerún",
  "Canada",
  "Cabo Verde",
  "Islas Caimán",
  "Chad",
  "Chile",
  "China",
  "Isla de Navidad",
  "Colombia",
  "Comodos",
  "Congo",
  "Costa Rica",
  "Costa de Marfil",
  "Croacia",
  "Cuba",
  "Chipre",
  "República Checa",
  "Dinamarca",
  "Dominica",
  "República Dominicana",
  "Ecuador",
  "Egipto",
  "El Salvador",
  "Guinea Ecuatorial",
  "Eritrea",
  "Estonia",
  "Etiopía",
  "Islas Faro",
  "Fiji",
  "Finlandia",
  "Francia",
  "Gabón",
  "Gambia",
  "Georgia",
  "Alemania",
  "Ghana",
  "Grecia",
  "Groenlandia",
  "Granada",
  "Guadalupe",
  "Guam",
  "Guatemala",
  "Guinea",
  "Guinea-Bisau",
  "Guayana",
  "Haiti",
  "Honduras",
  "Hong Kong",
  "Hungria",
  "Islandia",
  "India",
  "Indonesia",
  "Iran",
  "Irak",
  "Irlanda",
  "Italia",
  "Jamaica",
  "Japón",
  "Jordania",
  "Kazajistan",
  "Kenia",
  "Kiribati",
  "Corea",
  "Kuwait",
  "Letonia",
  "Líbano",
  "Liberia",
  "Liechtenstein",
  "Lituania",
  "Luxemburgo",
  "Macao",
  "Macedonia",
  "Madagascar",
  "Malawi",
  "Malasia",
  "Maldivas",
  "Mali",
  "Malta",
  "Martinica",
  "Mauritania",
  "México",
  "Micronesia",
  "Moldavia",
  "Mónaco",
  "Mongolia",
  "Montenegro",
  "Montserrat",
  "Marruecos",
  "Mozambique",
  "Namibia",
  "Nauru",
  "Nepal",
  "Holanda",
  "Nueva Zelanda",
  "Nicaragua",
  "Niger",
  "Nigeria",
  "Noruega",
  "Omán",
  "Pakistan",
  "Panamá",
  "Papúa Nueva Guinea",
  "Paraguay",
  "Perú",
  "Filipinas",
  "Poland",
  "Portugal",
  "Puerto Rico",
  "Rusia",
  "Ruanda",
  "Samoa",
  "San Marino",
  "Santo Tomé y Principe",
  "Arabia Saudí",
  "Senegal",
  "Serbia",
  "Seychelles",
  "Sierra Leona",
  "Singapur",
  "Eslovaquia",
  "Eslovenia",
  "Somalia",
  "España",
  "Sri Lanka",
  "Sudán",
  "Suriname",
  "Suecia",
  "Suiza",
  "Siria",
  "Taiwan",
  "Tajikistan",
  "Tanzania",
  "Tailandia",
  "Timor-Leste",
  "Togo",
  "Tonga",
  "Trinidad y Tobago",
  "Tunez",
  "Turquia",
  "Uganda",
  "Ucrania",
  "Emiratos Árabes Unidos",
  "Reino Unido",
  "Estados Unidos de América",
  "Uruguay",
  "Uzbekistan",
  "Vanuatu",
  "Venezuela",
  "Vietnam",
  "Yemen",
  "Zambia",
  "Zimbabwe"
];

},{}],355:[function(require,module,exports){
module["exports"] = [
  "México"
];

},{}],356:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.time_zone = require("./time_zone");
address.city = require("./city");
address.street = require("./street");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");
},{"./building_number":350,"./city":351,"./city_prefix":352,"./city_suffix":353,"./country":354,"./default_country":355,"./postcode":357,"./secondary_address":358,"./state":359,"./state_abbr":360,"./street":361,"./street_address":362,"./street_name":363,"./street_suffix":364,"./time_zone":365}],357:[function(require,module,exports){
arguments[4][320][0].apply(exports,arguments)
},{"dup":320}],358:[function(require,module,exports){
module["exports"] = [
  "Esc. ###",
  "Puerta ###",
  "Edificio #"
];

},{}],359:[function(require,module,exports){
module["exports"] = [
  "Aguascalientes",
  "Baja California Norte",
  "Baja California Sur",
  'Estado de México',
  "Campeche",
  "Chiapas",
  "Chihuahua",
  "Coahuila",
  "Colima",
  "Durango",
  "Guanajuato",
  "Guerrero",
  "Hidalgo",
  "Jalisco",
  "Michoacan",
  "Morelos",
  "Nayarit",
  'Nuevo León',
  "Oaxaca",
  "Puebla",
  "Querétaro",
  "Quintana Roo",
  "San Luis Potosí",
  "Sinaloa",
  "Sonora",
  "Tabasco",
  "Tamaulipas",
  "Tlaxcala",
  "Veracruz",
  "Yucatán",
  "Zacatecas"
];

},{}],360:[function(require,module,exports){
module["exports"] = [
  "AS",
  "BC",
  "BS",
  "CC",
  "CS",
  "CH",
  "CL",
  "CM",
  "DF",
  "DG",
  "GT",
  "GR",
  "HG",
  "JC",
  "MC",
  "MN",
  "MS",
  "NT",
  "NL",
  "OC",
  "PL",
  "QT",
  "QR",
  "SP",
  "SL",
  "SR",
  "TC",
  "TS",
  "TL",
  "VZ",
  "YN",
  "ZS"
];

},{}],361:[function(require,module,exports){
module["exports"] = [
	"20 de Noviembre",
	"Cinco de Mayo",
	"Cuahutemoc",
	"Manzanares",
	"Donceles",
	"Francisco I. Madero",
	"Juárez",
	"Repúplica de Cuba",
	"Repúplica de Chile",
	"Repúplica de Argentina",
	"Repúplica de Uruguay",
	"Isabel la Católica",
	"Izazaga",
	"Eje Central",
	"Eje 6",
	"Eje 5",
	"La viga",
	"Aniceto Ortega",
	"Miguel Ángel de Quevedo",
	"Amores",
	"Coyoacán",
	"Coruña",
	"Batalla de Naco",
	"La otra banda",
	"Piedra del Comal",
	"Balcón de los edecanes",
	"Barrio la Lonja",
	"Jicolapa",
	"Zacatlán",
	"Zapata",
	"Polotitlan",
	"Calimaya",
	"Flor Marina",
	"Flor Solvestre",
	"San Miguel",
	"Naranjo",
	"Cedro",
	"Jalisco",
	"Avena"
];
},{}],362:[function(require,module,exports){
arguments[4][325][0].apply(exports,arguments)
},{"dup":325}],363:[function(require,module,exports){
module["exports"] = [
  "#{street_suffix} #{Name.first_name}",
  "#{street_suffix} #{Name.first_name} #{Name.last_name}",
  "#{street_suffix} #{street}",
  "#{street_suffix} #{street}",
  "#{street_suffix} #{street}",
  "#{street_suffix} #{street}"

];

},{}],364:[function(require,module,exports){
arguments[4][327][0].apply(exports,arguments)
},{"dup":327}],365:[function(require,module,exports){
module["exports"] = [
  "Pacífico/Midway",
  "Pacífico/Pago_Pago",
  "Pacífico/Honolulu",
  "America/Juneau",
  "America/Los_Angeles",
  "America/Tijuana",
  "America/Denver",
  "America/Phoenix",
  "America/Chihuahua",
  "America/Mazatlan",
  "America/Chicago",
  "America/Regina",
  "America/Mexico_City",
  "America/Monterrey",
  "America/Guatemala",
  "America/New_York",
  "America/Indiana/Indianapolis",
  "America/Bogota",
  "America/Lima",
  "America/Lima",
  "America/Halifax",
  "America/Caracas",
  "America/La_Paz",
  "America/Santiago",
  "America/St_Johns",
  "America/Sao_Paulo",
  "America/Argentina/Buenos_Aires",
  "America/Guyana",
  "America/Godthab",
  "Atlantic/South_Georgia",
  "Atlantic/Azores",
  "Atlantic/Cape_Verde",
  "Europa/Dublin",
  "Europa/London",
  "Europa/Lisbon",
  "Europa/London",
  "Africa/Casablanca",
  "Africa/Monrovia",
  "Etc/UTC",
  "Europa/Belgrade",
  "Europa/Bratislava",
  "Europa/Budapest",
  "Europa/Ljubljana",
  "Europa/Prague",
  "Europa/Sarajevo",
  "Europa/Skopje",
  "Europa/Warsaw",
  "Europa/Zagreb",
  "Europa/Brussels",
  "Europa/Copenhagen",
  "Europa/Madrid",
  "Europa/Paris",
  "Europa/Amsterdam",
  "Europa/Berlin",
  "Europa/Berlin",
  "Europa/Rome",
  "Europa/Stockholm",
  "Europa/Vienna",
  "Africa/Algiers",
  "Europa/Bucharest",
  "Africa/Cairo",
  "Europa/Helsinki",
  "Europa/Kiev",
  "Europa/Riga",
  "Europa/Sofia",
  "Europa/Tallinn",
  "Europa/Vilnius",
  "Europa/Athens",
  "Europa/Istanbul",
  "Europa/Minsk",
  "Asia/Jerusalen",
  "Africa/Harare",
  "Africa/Johannesburg",
  "Europa/Moscú",
  "Europa/Moscú",
  "Europa/Moscú",
  "Asia/Kuwait",
  "Asia/Riyadh",
  "Africa/Nairobi",
  "Asia/Baghdad",
  "Asia/Tehran",
  "Asia/Muscat",
  "Asia/Muscat",
  "Asia/Baku",
  "Asia/Tbilisi",
  "Asia/Yerevan",
  "Asia/Kabul",
  "Asia/Yekaterinburg",
  "Asia/Karachi",
  "Asia/Karachi",
  "Asia/Tashkent",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kolkata",
  "Asia/Kathmandu",
  "Asia/Dhaka",
  "Asia/Dhaka",
  "Asia/Colombo",
  "Asia/Almaty",
  "Asia/Novosibirsk",
  "Asia/Rangoon",
  "Asia/Bangkok",
  "Asia/Bangkok",
  "Asia/Jakarta",
  "Asia/Krasnoyarsk",
  "Asia/Shanghai",
  "Asia/Chongqing",
  "Asia/Hong_Kong",
  "Asia/Urumqi",
  "Asia/Kuala_Lumpur",
  "Asia/Singapore",
  "Asia/Taipei",
  "Australia/Perth",
  "Asia/Irkutsk",
  "Asia/Ulaanbaatar",
  "Asia/Seoul",
  "Asia/Tokyo",
  "Asia/Tokyo",
  "Asia/Tokyo",
  "Asia/Yakutsk",
  "Australia/Darwin",
  "Australia/Adelaide",
  "Australia/Melbourne",
  "Australia/Melbourne",
  "Australia/Sydney",
  "Australia/Brisbane",
  "Australia/Hobart",
  "Asia/Vladivostok",
  "Pacífico/Guam",
  "Pacífico/Port_Moresby",
  "Asia/Magadan",
  "Asia/Magadan",
  "Pacífico/Noumea",
  "Pacífico/Fiji",
  "Asia/Kamchatka",
  "Pacífico/Majuro",
  "Pacífico/Auckland",
  "Pacífico/Auckland",
  "Pacífico/Tongatapu",
  "Pacífico/Fakaofo",
  "Pacífico/Apia"
];

},{}],366:[function(require,module,exports){
module["exports"] = [
  "5##-###-###",
  "5##.###.###",
  "5## ### ###",
  "5########"
];

},{}],367:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"./formats":366,"dup":67}],368:[function(require,module,exports){
module["exports"] = [
   "rojo",
   "verde",
   "azul",
   "amarillo",
   "morado",
   "Menta verde",
   "teal",
   "blanco",
   "negro",
   "Naranja",
   "Rosa",
   "gris",
   "marrón",
   "violeta",
   "turquesa",
   "tan",
   "cielo azul",
   "salmón",
   "ciruela",
   "orquídea",
   "aceituna",
   "magenta",
   "Lima",
   "marfil",
   "índigo",
   "oro",
   "fucsia",
   "cian",
   "azul",
   "lavanda",
   "plata"
];

},{}],369:[function(require,module,exports){
module["exports"] = [
   "Libros",
   "Películas",
   "Música",
   "Juegos",
   "Electrónica",
   "Ordenadores",
   "Hogar",
   "Jardín",
   "Herramientas",
   "Ultramarinos",
   "Salud",
   "Belleza",
   "Juguetes",
   "Kids",
   "Baby",
   "Ropa",
   "Zapatos",
   "Joyería",
   "Deportes",
   "Aire libre",
   "Automoción",
   "Industrial"
];

},{}],370:[function(require,module,exports){
arguments[4][159][0].apply(exports,arguments)
},{"./color":368,"./department":369,"./product_name":371,"dup":159}],371:[function(require,module,exports){
module["exports"] = {
"adjective": [
     "Pequeño",
     "Ergonómico",
     "Rústico",
     "Inteligente",
     "Gorgeous",
     "Increíble",
     "Fantástico",
     "Práctica",
     "Elegante",
     "Increíble",
     "Genérica",
     "Artesanal",
     "Hecho a mano",
     "Licencia",
     "Refinado",
     "Sin marca",
     "Sabrosa"
   ],
"material": [
     "Acero",
     "Madera",
     "Hormigón",
     "Plástico",
     "Cotton",
     "Granito",
     "Caucho",
     "Metal",
     "Soft",
     "Fresco",
     "Frozen"
   ],
"product": [
     "Presidente",
     "Auto",
     "Computadora",
     "Teclado",
     "Ratón",
     "Bike",
     "Pelota",
     "Guantes",
     "Pantalones",
     "Camisa",
     "Mesa",
     "Zapatos",
     "Sombrero",
     "Toallas",
     "Jabón",
     "Tuna",
     "Pollo",
     "Pescado",
     "Queso",
     "Tocino",
     "Pizza",
     "Ensalada",
     "Embutidos"
  ]
};

},{}],372:[function(require,module,exports){
arguments[4][331][0].apply(exports,arguments)
},{"dup":331}],373:[function(require,module,exports){
module["exports"] = [
  "Clics y mortero",
  "Valor añadido",
  "Vertical",
  "Proactivo",
  "Robusto",
  "Revolucionario",
  "Escalable",
  "De vanguardia",
  "Innovador",
  "Intuitivo",
  "Estratégico",
  "E-business",
  "Misión crítica",
  "Pegajosa",
  "Doce y cincuenta y nueve de la noche",
  "24/7",
  "De extremo a extremo",
  "Global",
  "B2B",
  "B2C",
  "Granular",
  "Fricción",
  "Virtual",
  "Viral",
  "Dinámico",
  "24/365",
  "Mejor de su clase",
  "Asesino",
  "Magnética",
  "Filo sangriento",
  "Habilitado web",
  "Interactiva",
  "Punto com",
  "Sexy",
  "Back-end",
  "Tiempo real",
  "Eficiente",
  "Frontal",
  "Distribuida",
  "Sin costura",
  "Extensible",
  "Llave en mano",
  "Clase mundial",
  "Código abierto",
  "Multiplataforma",
  "Cross-media",
  "Sinérgico",
  "ladrillos y clics",
  "Fuera de la caja",
  "Empresa",
  "Integrado",
  "Impactante",
  "Inalámbrico",
  "Transparente",
  "Próxima generación",
  "Innovador",
  "User-centric",
  "Visionario",
  "A medida",
  "Ubicua",
  "Enchufa y juega",
  "Colaboración",
  "Convincente",
  "Holístico",
  "Ricos"
];
},{}],374:[function(require,module,exports){
module["exports"] = [
   "sinergias",
   "web-readiness",
   "paradigmas",
   "mercados",
   "asociaciones",
   "infraestructuras",
   "plataformas",
   "iniciativas",
   "canales",
   "ojos",
   "comunidades",
   "ROI",
   "soluciones",
   "minoristas electrónicos",
   "e-servicios",
   "elementos de acción",
   "portales",
   "nichos",
   "tecnologías",
   "contenido",
   "vortales",
   "cadenas de suministro",
   "convergencia",
   "relaciones",
   "arquitecturas",
   "interfaces",
   "mercados electrónicos",
   "e-commerce",
   "sistemas",
   "ancho de banda",
   "infomediarios",
   "modelos",
   "Mindshare",
   "entregables",
   "usuarios",
   "esquemas",
   "redes",
   "aplicaciones",
   "métricas",
   "e-business",
   "funcionalidades",
   "experiencias",
   "servicios web",
   "metodologías"
];
},{}],375:[function(require,module,exports){
module["exports"] = [
   "poner en práctica",
   "utilizar",
   "integrar",
   "racionalizar",
   "optimizar",
   "evolucionar",
   "transformar",
   "abrazar",
   "habilitar",
   "orquestar",
   "apalancamiento",
   "reinventar",
   "agregado",
   "arquitecto",
   "mejorar",
   "incentivar",
   "transformarse",
   "empoderar",
   "Envisioneer",
   "monetizar",
   "arnés",
   "facilitar",
   "aprovechar",
   "desintermediar",
   "sinergia",
   "estrategias",
   "desplegar",
   "marca",
   "crecer",
   "objetivo",
   "sindicato",
   "sintetizar",
   "entregue",
   "malla",
   "incubar",
   "enganchar",
   "maximizar",
   "punto de referencia",
   "acelerar",
   "reintermediate",
   "pizarra",
   "visualizar",
   "reutilizar",
   "innovar",
   "escala",
   "desatar",
   "conducir",
   "extender",
   "ingeniero",
   "revolucionar",
   "generar",
   "explotar",
   "transición",
   "e-enable",
   "repetir",
   "cultivar",
   "matriz",
   "productize",
   "redefinir",
   "recontextualizar"
]
},{}],376:[function(require,module,exports){
arguments[4][332][0].apply(exports,arguments)
},{"dup":332}],377:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.adjective = require("./adjective");
company.descriptor = require("./descriptor");
company.noun = require("./noun");
company.bs_verb = require("./bs_verb");
company.name = require("./name");
company.bs_adjective = require("./bs_adjective");
company.bs_noun = require("./bs_noun");

},{"./adjective":372,"./bs_adjective":373,"./bs_noun":374,"./bs_verb":375,"./descriptor":376,"./name":378,"./noun":379,"./suffix":380}],378:[function(require,module,exports){
arguments[4][334][0].apply(exports,arguments)
},{"dup":334}],379:[function(require,module,exports){
arguments[4][335][0].apply(exports,arguments)
},{"dup":335}],380:[function(require,module,exports){
arguments[4][336][0].apply(exports,arguments)
},{"dup":336}],381:[function(require,module,exports){
var es_MX = {};
module['exports'] = es_MX;
es_MX.title = "Spanish Mexico";
es_MX.separator = " & ";
es_MX.name = require("./name");
es_MX.address = require("./address");
es_MX.company = require("./company");
es_MX.internet = require("./internet");
es_MX.phone_number = require("./phone_number");
es_MX.cell_phone = require("./cell_phone");
es_MX.lorem = require("./lorem");
es_MX.commerce = require("./commerce");
es_MX.team = require("./team");
},{"./address":356,"./cell_phone":367,"./commerce":370,"./company":377,"./internet":384,"./lorem":385,"./name":389,"./phone_number":396,"./team":398}],382:[function(require,module,exports){
module["exports"] = [
  "com",
  "mx",
  "info",
  "com.mx",
  "org",
  "gob.mx"
];

},{}],383:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.com",
  "hotmail.com",
  "nearbpo.com",
  "corpfolder.com"
];

},{}],384:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"./domain_suffix":382,"./free_email":383,"dup":75}],385:[function(require,module,exports){
arguments[4][199][0].apply(exports,arguments)
},{"./supplemental":386,"./words":387,"dup":199}],386:[function(require,module,exports){
arguments[4][200][0].apply(exports,arguments)
},{"dup":200}],387:[function(require,module,exports){
module["exports"] = [
"Abacalero",
"Abacería",
"Abacero",
"Abacial",
"Abaco",
"Abacora",
"Abacorar",
"Abad",
"Abada",
"Abadejo",
"Abadengo",
"Abadernar",
"Abadesa",
"Abadí",
"Abadía",
"Abadiado",
"Abadiato",
"Abajadero",
"Abajamiento",
"Abajar",
"Abajeño",
"Abajera",
"Abajo",
"Abalada",
"Abalanzar",
"Abalar",
"Abalaustrado",
"Abaldonadamente",
"Abaldonamiento",
"Bastonada",
"Bastonazo",
"Bastoncillo",
"Bastonear",
"Bastonero",
"Bástulo",
"Basura",
"Basural",
"Basurear",
"Basurero",
"Bata",
"Batacazo",
"Batahola",
"Batalán",
"Batalla",
"Batallador",
"Batallar",
"Batallaroso",
"Batallola",
"Batallón",
"Batallona",
"Batalloso",
"Batán",
"Batanar",
"Batanear",
"Batanero",
"Batanga",
"Bataola",
"Batata",
"Batatazo",
"Batato",
"Batavia",
"Bátavo",
"Batayola",
"Batazo",
"Bate",
"Batea",
"Bateador",
"Bateaguas",
"Cenagar",
"Cenagoso",
"Cenal",
"Cenaoscuras",
"Ceñar",
"Cenata",
"Cenca",
"Cencapa",
"Cencellada",
"Cenceñada",
"Cenceño",
"Cencero",
"Cencerra",
"Cencerrada",
"Cencerrado",
"Cencerrear",
"Cencerreo",
"Cencerril",
"Cencerrillas",
"Cencerro",
"Cencerrón",
"Cencha",
"Cencido",
"Cencío",
"Cencivera",
"Cenco",
"Cencuate",
"Cendal",
"Cendalí",
"Céndea",
"Cendolilla",
"Cendra",
"Cendrada",
"Cendradilla",
"Cendrado",
"Cendrar",
"Cendrazo",
"Cenefa",
"Cenegar",
"Ceneque",
"Cenero",
"Cenestesia",
"Desceñir",
"Descensión",
"Descenso",
"Descentrado",
"Descentralización",
"Descentralizador",
"Descentralizar",
"Descentrar",
"Descepar",
"Descerar",
"Descercado",
"Descercador",
"Descercar",
"Descerco",
"Descerebración",
"Descerebrado",
"Descerebrar",
"Descerezar",
"Descerrajado",
"Descerrajadura",
"Descerrajar",
"Descerrar",
"Descerrumarse",
"Descervigamiento",
"Descervigar",
"Deschapar",
"Descharchar",
"Deschavetado",
"Deschavetarse",
"Deschuponar",
"Descifrable",
"Descifrador",
"Desciframiento",
"Descifrar",
"Descifre",
"Descimbramiento",
"Descimbrar",
"Engarbarse",
"Engarberar",
"Engarbullar",
"Engarce",
"Engarfiar",
"Engargantadura",
"Engargantar",
"Engargante",
"Engargolado",
"Engargolar",
"Engaritar",
"Engarmarse",
"Engarnio",
"Engarrafador",
"Engarrafar",
"Engarrar",
"Engarro",
"Engarronar",
"Engarrotar",
"Engarzador",
"Engarzadura",
"Engarzar",
"Engasgarse",
"Engastador",
"Engastadura",
"Engastar",
"Engaste",
"Ficción",
"Fice",
"Ficha",
"Fichaje",
"Fichar",
"Fichero",
"Ficoideo",
"Ficticio",
"Fidalgo",
"Fidecomiso",
"Fidedigno",
"Fideero",
"Fideicomisario",
"Fideicomiso",
"Fideicomitente",
"Fideísmo",
"Fidelidad",
"Fidelísimo",
"Fideo",
"Fido",
"Fiducia",
"Geminación",
"Geminado",
"Geminar",
"Géminis",
"Gémino",
"Gemíparo",
"Gemiquear",
"Gemiqueo",
"Gemir",
"Gemología",
"Gemológico",
"Gemólogo",
"Gemonias",
"Gemoso",
"Gemoterapia",
"Gen",
"Genciana",
"Gencianáceo",
"Gencianeo",
"Gendarme",
"Gendarmería",
"Genealogía",
"Genealógico",
"Genealogista",
"Genearca",
"Geneático",
"Generable",
"Generación",
"Generacional",
"Generador",
"General",
"Generala",
"Generalato",
"Generalidad",
"Generalísimo",
"Incordio",
"Incorporación",
"Incorporal",
"Incorporalmente",
"Incorporar",
"Incorporeidad",
"Incorpóreo",
"Incorporo",
"Incorrección",
"Incorrectamente",
"Incorrecto",
"Incorregibilidad",
"Incorregible",
"Incorregiblemente",
"Incorrupción",
"Incorruptamente",
"Incorruptibilidad",
"Incorruptible",
"Incorrupto",
"Incrasar",
"Increado",
"Incredibilidad",
"Incrédulamente",
"Incredulidad",
"Incrédulo",
"Increíble",
"Increíblemente",
"Incrementar",
"Incremento",
"Increpación",
"Increpador",
"Increpar",
"Incriminación",
"Incriminar",
"Incristalizable",
"Incruentamente",
"Incruento",
"Incrustación"
];

},{}],388:[function(require,module,exports){
module["exports"] = [
"Aarón",
"Abraham",
"Adán",
"Agustín",
"Alan",
"Alberto",
"Alejandro",
"Alexander",
"Alexis",
"Alfonso",
"Alfredo",
"Andrés",
"Ángel Daniel",
"Ángel Gabriel",
"Antonio",
"Armando",
"Arturo",
"Axel",
"Benito",
"Benjamín",
"Bernardo",
"Brandon",
"Brayan",
"Carlos",
"César",
"Claudio",
"Clemente",
"Cristian",
"Cristobal",
"Damián",
"Daniel",
"David",
"Diego",
"Eduardo",
"Elías",
"Emiliano",
"Emilio",
"Emilio",
"Emmanuel",
"Enrique",
"Erick",
"Ernesto",
"Esteban",
"Federico",
"Felipe",
"Fernando",
"Fernando Javier",
"Francisco",
"Francisco Javier",
"Gabriel",
"Gael",
"Gerardo",
"Germán",
"Gilberto",
"Gonzalo",
"Gregorio",
"Guillermo",
"Gustavo",
"Hernán",
"Homero",
"Horacio",
"Hugo",
"Ignacio",
"Iker",
"Isaac",
"Isaias",
"Israel",
"Ivan",
"Jacobo",
"Jaime",
"Javier",
"Jerónimo",
"Jesús",
"Joaquín",
"Jorge",
"Jorge Luis",
"José",
"José Antonio",
"Jose Daniel",
"José Eduardo",
"José Emilio",
"José Luis",
"José María",
"José Miguel",
"Juan",
"Juan Carlos",
"Juan Manuel",
"Juan Pablo",
"Julio",
"Julio César",
"Kevin",
"Leonardo",
"Lorenzo",
"Lucas",
"Luis",
"Luis Ángel",
"Luis Fernando",
"Luis Gabino",
"Luis Miguel",
"Manuel",
"Marco Antonio",
"Marcos",
"Mariano",
"Mario",
"Martín",
"Mateo",
"Matías",
"Mauricio",
"Maximiliano",
"Miguel",
"Miguel Ángel",
"Nicolás",
"Octavio",
"Óscar",
"Pablo",
"Patricio",
"Pedro",
"Rafael",
"Ramiro",
"Ramón",
"Raúl",
"Ricardo",
"Roberto",
"Rodrigo",
"Rubén",
"Salvador",
"Samuel",
"Sancho",
"Santiago",
"Saúl",
"Sebastian",
"Sergio",
"Tadeo",
"Teodoro",
"Timoteo",
"Tomás",
"Uriel",
"Vicente",
"Víctor",
"Victor Manuel",
"Adriana",
"Alejandra",
"Alicia",
"Amalia",
"Ana",
"Ana Luisa",
"Ana María",
"Andrea",
"Ángela",
"Anita",
"Antonia",
"Araceli",
"Ariadna",
"Barbara",
"Beatriz",
"Berta",
"Blanca",
"Caridad",
"Carla",
"Carlota",
"Carmen",
"Carolina",
"Catalina",
"Cecilia",
"Clara",
"Claudia",
"Concepción",
"Conchita",
"Cristina",
"Daniela",
"Débora",
"Diana",
"Dolores",
"Dorotea",
"Elena",
"Elisa",
"Elizabeth",
"Eloisa",
"Elsa",
"Elvira",
"Emilia",
"Esperanza",
"Estela",
"Ester",
"Eva",
"Florencia",
"Francisca",
"Gabriela",
"Gloria",
"Graciela",
"Guadalupe",
"Guillermina",
"Inés",
"Irene",
"Isabel",
"Isabela",
"Josefina",
"Juana",
"Julia",
"Laura",
"Leonor",
"Leticia",
"Lilia",
"Lola",
"Lorena",
"Lourdes",
"Lucia",
"Luisa",
"Luz",
"Magdalena",
"Manuela",
"Marcela",
"Margarita",
"María",
"María Cristina",
"María de Jesús",
"María de los Ángeles",
"María del Carmen",
"María Elena",
"María Eugenia",
"María Guadalupe",
"María José",
"María Luisa",
"María Soledad",
"María Teresa",
"Mariana",
"Maricarmen",
"Marilu",
"Marisol",
"Marta",
"Mayte",
"Mercedes",
"Micaela",
"Mónica",
"Natalia",
"Norma",
"Olivia",
"Patricia",
"Pilar",
"Ramona",
"Raquel",
"Rebeca",
"Reina",
"Rocio",
"Rosa",
"Rosa María",
"Rosalia",
"Rosario",
"Sara",
"Silvia",
"Sofia",
"Soledad",
"Sonia",
"Susana",
"Teresa",
"Verónica",
"Victoria",
"Virginia",
"Xochitl",
"Yolanda",
"Abigail",
"Abril",
"Adela",
"Alexa",
"Alondra Romina",
"Ana Sofía",
"Ana Victoria",
"Camila",
"Carolina",
"Daniela",
"Dulce María",
"Emily",
"Esmeralda",
"Estefanía",
"Evelyn",
"Fatima",
"Ivanna",
"Jazmin",
"Jennifer",
"Jimena",
"Julieta",
"Kimberly",
"Liliana",
"Lizbeth",
"María Fernanda",
"Melany",
"Melissa",
"Miranda",
"Monserrat",
"Naomi",
"Natalia",
"Nicole",
"Paola",
"Paulina",
"Regina",
"Renata",
"Valentina",
"Valeria",
"Vanessa",
"Ximena",
"Ximena Guadalupe",
"Yamileth",
"Yaretzi",
"Zoe"
]
},{}],389:[function(require,module,exports){
arguments[4][203][0].apply(exports,arguments)
},{"./first_name":388,"./last_name":390,"./name":391,"./prefix":392,"./suffix":393,"./title":394,"dup":203}],390:[function(require,module,exports){
module["exports"] = [
  "Abeyta",
"Abrego",
"Abreu",
"Acevedo",
"Acosta",
"Acuña",
"Adame",
"Adorno",
"Agosto",
"Aguayo",
"Águilar",
"Aguilera",
"Aguirre",
"Alanis",
"Alaniz",
"Alarcón",
"Alba",
"Alcala",
"Alcántar",
"Alcaraz",
"Alejandro",
"Alemán",
"Alfaro",
"Alicea",
"Almanza",
"Almaraz",
"Almonte",
"Alonso",
"Alonzo",
"Altamirano",
"Alva",
"Alvarado",
"Alvarez",
"Amador",
"Amaya",
"Anaya",
"Anguiano",
"Angulo",
"Aparicio",
"Apodaca",
"Aponte",
"Aragón",
"Aranda",
"Araña",
"Arce",
"Archuleta",
"Arellano",
"Arenas",
"Arevalo",
"Arguello",
"Arias",
"Armas",
"Armendáriz",
"Armenta",
"Armijo",
"Arredondo",
"Arreola",
"Arriaga",
"Arroyo",
"Arteaga",
"Atencio",
"Ávalos",
"Ávila",
"Avilés",
"Ayala",
"Baca",
"Badillo",
"Báez",
"Baeza",
"Bahena",
"Balderas",
"Ballesteros",
"Banda",
"Bañuelos",
"Barajas",
"Barela",
"Barragán",
"Barraza",
"Barrera",
"Barreto",
"Barrientos",
"Barrios",
"Batista",
"Becerra",
"Beltrán",
"Benavides",
"Benavídez",
"Benítez",
"Bermúdez",
"Bernal",
"Berríos",
"Bétancourt",
"Blanco",
"Bonilla",
"Borrego",
"Botello",
"Bravo",
"Briones",
"Briseño",
"Brito",
"Bueno",
"Burgos",
"Bustamante",
"Bustos",
"Caballero",
"Cabán",
"Cabrera",
"Cadena",
"Caldera",
"Calderón",
"Calvillo",
"Camacho",
"Camarillo",
"Campos",
"Canales",
"Candelaria",
"Cano",
"Cantú",
"Caraballo",
"Carbajal",
"Cardenas",
"Cardona",
"Carmona",
"Carranza",
"Carrasco",
"Carrasquillo",
"Carreón",
"Carrera",
"Carrero",
"Carrillo",
"Carrion",
"Carvajal",
"Casanova",
"Casares",
"Casárez",
"Casas",
"Casillas",
"Castañeda",
"Castellanos",
"Castillo",
"Castro",
"Cavazos",
"Cazares",
"Ceballos",
"Cedillo",
"Ceja",
"Centeno",
"Cepeda",
"Cerda",
"Cervantes",
"Cervántez",
"Chacón",
"Chapa",
"Chavarría",
"Chávez",
"Cintrón",
"Cisneros",
"Collado",
"Collazo",
"Colón",
"Colunga",
"Concepción",
"Contreras",
"Cordero",
"Córdova",
"Cornejo",
"Corona",
"Coronado",
"Corral",
"Corrales",
"Correa",
"Cortés",
"Cortez",
"Cotto",
"Covarrubias",
"Crespo",
"Cruz",
"Cuellar",
"Curiel",
"Dávila",
"de Anda",
"de Jesús",
"Delacrúz",
"Delafuente",
"Delagarza",
"Delao",
"Delapaz",
"Delarosa",
"Delatorre",
"Deleón",
"Delgadillo",
"Delgado",
"Delrío",
"Delvalle",
"Díaz",
"Domínguez",
"Domínquez",
"Duarte",
"Dueñas",
"Duran",
"Echevarría",
"Elizondo",
"Enríquez",
"Escalante",
"Escamilla",
"Escobar",
"Escobedo",
"Esparza",
"Espinal",
"Espino",
"Espinosa",
"Espinoza",
"Esquibel",
"Esquivel",
"Estévez",
"Estrada",
"Fajardo",
"Farías",
"Feliciano",
"Fernández",
"Ferrer",
"Fierro",
"Figueroa",
"Flores",
"Flórez",
"Fonseca",
"Franco",
"Frías",
"Fuentes",
"Gaitán",
"Galarza",
"Galindo",
"Gallardo",
"Gallegos",
"Galván",
"Gálvez",
"Gamboa",
"Gamez",
"Gaona",
"Garay",
"García",
"Garibay",
"Garica",
"Garrido",
"Garza",
"Gastélum",
"Gaytán",
"Gil",
"Girón",
"Godínez",
"Godoy",
"Gollum",
"Gómez",
"Gonzales",
"González",
"Gracia",
"Granado",
"Granados",
"Griego",
"Grijalva",
"Guajardo",
"Guardado",
"Guerra",
"Guerrero",
"Guevara",
"Guillen",
"Gurule",
"Gutiérrez",
"Guzmán",
"Haro",
"Henríquez",
"Heredia",
"Hernádez",
"Hernandes",
"Hernández",
"Herrera",
"Hidalgo",
"Hinojosa",
"Holguín",
"Huerta",
"Huixtlacatl",
"Hurtado",
"Ibarra",
"Iglesias",
"Irizarry",
"Jaime",
"Jaimes",
"Jáquez",
"Jaramillo",
"Jasso",
"Jiménez",
"Jimínez",
"Juárez",
"Jurado",
"Kadar rodriguez",
"Kamal",
"Kamat",
"Kanaria",
"Kanea",
"Kanimal",
"Kano",
"Kanzaki",
"Kaplan",
"Kara",
"Karam",
"Karan",
"Kardache soto",
"Karem",
"Karen",
"Khalid",
"Kindelan",
"Koenig",
"Korta",
"Korta hernandez",
"Kortajarena",
"Kranz sans",
"Krasnova",
"Krauel natera",
"Kuzmina",
"Kyra",
"Laboy",
"Lara",
"Laureano",
"Leal",
"Lebrón",
"Ledesma",
"Leiva",
"Lemus",
"León",
"Lerma",
"Leyva",
"Limón",
"Linares",
"Lira",
"Llamas",
"Loera",
"Lomeli",
"Longoria",
"López",
"Lovato",
"Loya",
"Lozada",
"Lozano",
"Lucero",
"Lucio",
"Luevano",
"Lugo",
"Luna",
"Macías",
"Madera",
"Madrid",
"Madrigal",
"Maestas",
"Magaña",
"Malave",
"Maldonado",
"Manzanares",
"Mares",
"Marín",
"Márquez",
"Marrero",
"Marroquín",
"Martínez",
"Mascareñas",
"Mata",
"Mateo",
"Matías",
"Matos",
"Maya",
"Mayorga",
"Medina",
"Medrano",
"Mejía",
"Meléndez",
"Melgar",
"Mena",
"Menchaca",
"Méndez",
"Mendoza",
"Menéndez",
"Meraz",
"Mercado",
"Merino",
"Mesa",
"Meza",
"Miramontes",
"Miranda",
"Mireles",
"Mojica",
"Molina",
"Mondragón",
"Monroy",
"Montalvo",
"Montañez",
"Montaño",
"Montemayor",
"Montenegro",
"Montero",
"Montes",
"Montez",
"Montoya",
"Mora",
"Morales",
"Moreno",
"Mota",
"Moya",
"Munguía",
"Muñiz",
"Muñoz",
"Murillo",
"Muro",
"Nájera",
"Naranjo",
"Narváez",
"Nava",
"Navarrete",
"Navarro",
"Nazario",
"Negrete",
"Negrón",
"Nevárez",
"Nieto",
"Nieves",
"Niño",
"Noriega",
"Núñez",
"Ñañez",
"Ocampo",
"Ocasio",
"Ochoa",
"Ojeda",
"Olivares",
"Olivárez",
"Olivas",
"Olivera",
"Olivo",
"Olmos",
"Olvera",
"Ontiveros",
"Oquendo",
"Ordóñez",
"Orellana",
"Ornelas",
"Orosco",
"Orozco",
"Orta",
"Ortega",
"Ortiz",
"Osorio",
"Otero",
"Ozuna",
"Pabón",
"Pacheco",
"Padilla",
"Padrón",
"Páez",
"Pagan",
"Palacios",
"Palomino",
"Palomo",
"Pantoja",
"Paredes",
"Parra",
"Partida",
"Patiño",
"Paz",
"Pedraza",
"Pedroza",
"Pelayo",
"Peña",
"Perales",
"Peralta",
"Perea",
"Peres",
"Pérez",
"Pichardo",
"Pineda",
"Piña",
"Pizarro",
"Polanco",
"Ponce",
"Porras",
"Portillo",
"Posada",
"Prado",
"Preciado",
"Prieto",
"Puente",
"Puga",
"Pulido",
"Quesada",
"Quevedo",
"Quezada",
"Quinta",
"Quintairos",
"Quintana",
"Quintanilla",
"Quintero",
"Quintero cruz",
"Quintero de la cruz",
"Quiñones",
"Quiñónez",
"Quiros",
"Quiroz",
"Rael",
"Ramírez",
"Ramón",
"Ramos",
"Rangel",
"Rascón",
"Raya",
"Razo",
"Regalado",
"Rendón",
"Rentería",
"Reséndez",
"Reyes",
"Reyna",
"Reynoso",
"Rico",
"Rincón",
"Riojas",
"Ríos",
"Rivas",
"Rivera",
"Rivero",
"Robledo",
"Robles",
"Rocha",
"Rodarte",
"Rodrígez",
"Rodríguez",
"Rodríquez",
"Rojas",
"Rojo",
"Roldán",
"Rolón",
"Romero",
"Romo",
"Roque",
"Rosado",
"Rosales",
"Rosario",
"Rosas",
"Roybal",
"Rubio",
"Ruelas",
"Ruiz",
"Saavedra",
"Sáenz",
"Saiz",
"Salas",
"Salazar",
"Salcedo",
"Salcido",
"Saldaña",
"Saldivar",
"Salgado",
"Salinas",
"Samaniego",
"Sanabria",
"Sanches",
"Sánchez",
"Sandoval",
"Santacruz",
"Santana",
"Santiago",
"Santillán",
"Sarabia",
"Sauceda",
"Saucedo",
"Sedillo",
"Segovia",
"Segura",
"Sepúlveda",
"Serna",
"Serrano",
"Serrato",
"Sevilla",
"Sierra",
"Sisneros",
"Solano",
"Solís",
"Soliz",
"Solorio",
"Solorzano",
"Soria",
"Sosa",
"Sotelo",
"Soto",
"Suárez",
"Tafoya",
"Tamayo",
"Tamez",
"Tapia",
"Tejada",
"Tejeda",
"Téllez",
"Tello",
"Terán",
"Terrazas",
"Tijerina",
"Tirado",
"Toledo",
"Toro",
"Torres",
"Tórrez",
"Tovar",
"Trejo",
"Treviño",
"Trujillo",
"Ulibarri",
"Ulloa",
"Urbina",
"Ureña",
"Urías",
"Uribe",
"Urrutia",
"Vaca",
"Valadez",
"Valdés",
"Valdez",
"Valdivia",
"Valencia",
"Valentín",
"Valenzuela",
"Valladares",
"Valle",
"Vallejo",
"Valles",
"Valverde",
"Vanegas",
"Varela",
"Vargas",
"Vásquez",
"Vázquez",
"Vega",
"Vela",
"Velasco",
"Velásquez",
"Velázquez",
"Vélez",
"Véliz",
"Venegas",
"Vera",
"Verdugo",
"Verduzco",
"Vergara",
"Viera",
"Vigil",
"Villa",
"Villagómez",
"Villalobos",
"Villalpando",
"Villanueva",
"Villareal",
"Villarreal",
"Villaseñor",
"Villegas",
"Xacon",
"Xairo Belmonte",
"Xana",
"Xenia",
"Xiana",
"Xicoy",
"Yago",
"Yami",
"Yanes",
"Yáñez",
"Ybarra",
"Yebra",
"Yunta",
"Zabaleta",
"Zamarreno",
"Zamarripa",
"Zambrana",
"Zambrano",
"Zamora",
"Zamudio",
"Zapata",
"Zaragoza",
"Zarate",
"Zavala",
"Zayas",
"Zelaya",
"Zepeda",
"Zúñiga"
];

},{}],391:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} de #{last_name}",
  "#{suffix} #{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}"
];

},{}],392:[function(require,module,exports){
arguments[4][345][0].apply(exports,arguments)
},{"dup":345}],393:[function(require,module,exports){
module["exports"] = [
  "Jr.",
  "Sr.",
  "I",
  "II",
  "III",
  "IV",
  "V",
  "MD",
  "DDS",
  "PhD",
  "DVM",
  "Ing.",
  "Lic.",
  "Dr.",
  "Mtro."
];

},{}],394:[function(require,module,exports){
 module["exports"] = {
  "descriptor": [
    "Jefe",
    "Senior",
    "Directo",
    "Corporativo",
    "Dinánmico",
    "Futuro",
    "Producto",
    "Nacional",
    "Regional",
    "Distrito",
    "Central",
    "Global",
    "Cliente",
    "Inversor",
    "International",
    "Heredado",
    "Adelante",
    "Interno",
    "Humano",
    "Gerente",
    "SubGerente",
    "Director"
  ],
  "level": [
    "Soluciones",
    "Programa",
    "Marca",
    "Seguridad",
    "Investigación",
    "Marketing",
    "Normas",
    "Implementación",
    "Integración",
    "Funcionalidad",
    "Respuesta",
    "Paradigma",
    "Tácticas",
    "Identidad",
    "Mercados",
    "Grupo",
    "División",
    "Aplicaciones",
    "Optimización",
    "Operaciones",
    "Infraestructura",
    "Intranet",
    "Comunicaciones",
    "Web",
    "Calidad",
    "Seguro",
    "Mobilidad",
    "Cuentas",
    "Datos",
    "Creativo",
    "Configuración",
    "Contabilidad",
    "Interacciones",
    "Factores",
    "Usabilidad",
    "Métricas",
  ],
  "job": [
    "Supervisor",
    "Asociado",
    "Ejecutivo",
    "Relacciones",
    "Oficial",
    "Gerente",
    "Ingeniero",
    "Especialista",
    "Director",
    "Coordinador",
    "Administrador",
    "Arquitecto",
    "Analista",
    "Diseñador",
    "Planificador",
    "Técnico",
    "Funcionario",
    "Desarrollador",
    "Productor",
    "Consultor",
    "Asistente",
    "Facilitador",
    "Agente",
    "Representante",
    "Estratega",
    "Scrum Master",
    "Scrum Owner",
    "Product Owner",
    "Scrum Developer"
  ]
};

},{}],395:[function(require,module,exports){
module["exports"] = [
  "5###-###-###",
  "5##.###.###",
  "5## ### ###",
  "5########"
];

},{}],396:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":395,"dup":85}],397:[function(require,module,exports){
module["exports"] = [
  "hormigas",
   "murciélagos",
   "osos",
   "abejas",
   "pájaros",
   "búfalo",
   "gatos",
   "pollos",
   "ganado",
   "perros",
   "delfines",
   "patos",
   "elefantes",
   "peces",
   "zorros",
   "ranas",
   "gansos",
   "cabras",
   "caballos",
   "canguros",
   "leones",
   "monos",
   "búhos",
   "bueyes",
   "pingüinos",
   "pueblo",
   "cerdos",
   "conejos",
   "ovejas",
   "tigres",
   "ballenas",
   "lobos",
   "cebras",
   "almas en pena",
   "cuervos",
   "gatos negros",
   "quimeras",
   "fantasmas",
   "conspiradores",
   "dragones",
   "enanos",
   "duendes",
   "encantadores",
   "exorcistas",
   "hijos",
   "enemigos",
   "gigantes",
   "gnomos",
   "duendes",
   "gansos",
   "grifos",
   "licántropos",
   "némesis",
   "ogros",
   "oráculos",
   "profetas",
   "hechiceros",
   "arañas",
   "espíritus",
   "vampiros",
   "brujos",
   "zorras",
   "hombres lobo",
   "brujas",
   "adoradores",
   "zombies",
   "druidas"
];

},{}],398:[function(require,module,exports){
arguments[4][212][0].apply(exports,arguments)
},{"./creature":397,"./name":399,"dup":212}],399:[function(require,module,exports){
arguments[4][213][0].apply(exports,arguments)
},{"dup":213}],400:[function(require,module,exports){
var fa = {};
module['exports'] = fa;
fa.title = "Farsi";
fa.name = require("./name");

},{"./name":402}],401:[function(require,module,exports){
module["exports"] = [
  "آبان دخت",
  "آبتین",
  "آتوسا",
  "آفر",
  "آفره دخت",
  "آذرنوش‌",
  "آذین",
  "آراه",
  "آرزو",
  "آرش",
  "آرتین",
  "آرتام",
  "آرتمن",
  "آرشام",
  "آرمان",
  "آرمین",
  "آرمیتا",
  "آریا فر",
  "آریا",
  "آریا مهر",
  "آرین",
  "آزاده",
  "آزرم",
  "آزرمدخت",
  "آزیتا",
  "آناهیتا",
  "آونگ",
  "آهو",
  "آیدا",
  "اتسز",
  "اختر",
  "ارد",
  "ارد شیر",
  "اردوان",
  "ارژن",
  "ارژنگ",
  "ارسلان",
  "ارغوان",
  "ارمغان",
  "ارنواز",
  "اروانه",
  "استر",
  "اسفندیار",
  "اشکان",
  "اشکبوس",
  "افسانه",
  "افسون",
  "افشین",
  "امید",
  "انوش (‌ آنوشا )",
  "انوشروان",
  "اورنگ",
  "اوژن",
  "اوستا",
  "اهورا",
  "ایاز",
  "ایران",
  "ایراندخت",
  "ایرج",
  "ایزدیار",
  "بابک",
  "باپوک",
  "باربد",
  "بارمان",
  "بامداد",
  "بامشاد",
  "بانو",
  "بختیار",
  "برانوش",
  "بردیا",
  "برزو",
  "برزویه",
  "برزین",
  "برمک",
  "بزرگمهر",
  "بنفشه",
  "بوژان",
  "بویان",
  "بهار",
  "بهارک",
  "بهاره",
  "بهتاش",
  "بهداد",
  "بهرام",
  "بهدیس",
  "بهرخ",
  "بهرنگ",
  "بهروز",
  "بهزاد",
  "بهشاد",
  "بهمن",
  "بهناز",
  "بهنام",
  "بهنود",
  "بهنوش",
  "بیتا",
  "بیژن",
  "پارسا",
  "پاکان",
  "پاکتن",
  "پاکدخت",
  "پانته آ",
  "پدرام",
  "پرتو",
  "پرشنگ",
  "پرتو",
  "پرستو",
  "پرویز",
  "پردیس",
  "پرهام",
  "پژمان",
  "پژوا",
  "پرنیا",
  "پشنگ",
  "پروانه",
  "پروین",
  "پری",
  "پریچهر",
  "پریدخت",
  "پریسا",
  "پرناز",
  "پریوش",
  "پریا",
  "پوپک",
  "پوران",
  "پوراندخت",
  "پوریا",
  "پولاد",
  "پویا",
  "پونه",
  "پیام",
  "پیروز",
  "پیمان",
  "تابان",
  "تاباندخت",
  "تاجی",
  "تارا",
  "تاویار",
  "ترانه",
  "تناز",
  "توران",
  "توراندخت",
  "تورج",
  "تورتک",
  "توفان",
  "توژال",
  "تیر داد",
  "تینا",
  "تینو",
  "جابان",
  "جامین",
  "جاوید",
  "جریره",
  "جمشید",
  "جوان",
  "جویا",
  "جهان",
  "جهانبخت",
  "جهانبخش",
  "جهاندار",
  "جهانگیر",
  "جهان بانو",
  "جهاندخت",
  "جهان ناز",
  "جیران",
  "چابک",
  "چالاک",
  "چاوش",
  "چترا",
  "چوبین",
  "چهرزاد",
  "خاوردخت",
  "خداداد",
  "خدایار",
  "خرم",
  "خرمدخت",
  "خسرو",
  "خشایار",
  "خورشید",
  "دادمهر",
  "دارا",
  "داراب",
  "داریا",
  "داریوش",
  "دانوش",
  "داور‌",
  "دایان",
  "دریا",
  "دل آرا",
  "دل آویز",
  "دلارام",
  "دل انگیز",
  "دلبر",
  "دلبند",
  "دلربا",
  "دلشاد",
  "دلکش",
  "دلناز",
  "دلنواز",
  "دورشاسب",
  "دنیا",
  "دیااکو",
  "دیانوش",
  "دیبا",
  "دیبا دخت",
  "رابو",
  "رابین",
  "رادبانو",
  "رادمان",
  "رازبان",
  "راژانه",
  "راسا",
  "رامتین",
  "رامش",
  "رامشگر",
  "رامونا",
  "رامیار",
  "رامیلا",
  "رامین",
  "راویار",
  "رژینا",
  "رخپاک",
  "رخسار",
  "رخشانه",
  "رخشنده",
  "رزمیار",
  "رستم",
  "رکسانا",
  "روبینا",
  "رودابه",
  "روزبه",
  "روشنک",
  "روناک",
  "رهام",
  "رهی",
  "ریبار",
  "راسپینا",
  "زادبخت",
  "زاد به",
  "زاد چهر",
  "زاد فر",
  "زال",
  "زادماسب",
  "زاوا",
  "زردشت",
  "زرنگار",
  "زری",
  "زرین",
  "زرینه",
  "زمانه",
  "زونا",
  "زیبا",
  "زیبار",
  "زیما",
  "زینو",
  "ژاله",
  "ژالان",
  "ژیار",
  "ژینا",
  "ژیوار",
  "سارا",
  "سارک",
  "سارنگ",
  "ساره",
  "ساسان",
  "ساغر",
  "سام",
  "سامان",
  "سانا",
  "ساناز",
  "سانیار",
  "ساویز",
  "ساهی",
  "ساینا",
  "سایه",
  "سپنتا",
  "سپند",
  "سپهر",
  "سپهرداد",
  "سپیدار",
  "سپید بانو",
  "سپیده",
  "ستاره",
  "ستی",
  "سرافراز",
  "سرور",
  "سروش",
  "سرور",
  "سوبا",
  "سوبار",
  "سنبله",
  "سودابه",
  "سوری",
  "سورن",
  "سورنا",
  "سوزان",
  "سوزه",
  "سوسن",
  "سومار",
  "سولان",
  "سولماز",
  "سوگند",
  "سهراب",
  "سهره",
  "سهند",
  "سیامک",
  "سیاوش",
  "سیبوبه ‌",
  "سیما",
  "سیمدخت",
  "سینا",
  "سیمین",
  "سیمین دخت",
  "شاپرک",
  "شادی",
  "شادمهر",
  "شاران",
  "شاهپور",
  "شاهدخت",
  "شاهرخ",
  "شاهین",
  "شاهیندخت",
  "شایسته",
  "شباهنگ",
  "شب بو",
  "شبدیز",
  "شبنم",
  "شراره",
  "شرمین",
  "شروین",
  "شکوفه",
  "شکفته",
  "شمشاد",
  "شمین",
  "شوان",
  "شمیلا",
  "شورانگیز",
  "شوری",
  "شهاب",
  "شهبار",
  "شهباز",
  "شهبال",
  "شهپر",
  "شهداد",
  "شهرآرا",
  "شهرام",
  "شهربانو",
  "شهرزاد",
  "شهرناز",
  "شهرنوش",
  "شهره",
  "شهریار",
  "شهرزاد",
  "شهلا",
  "شهنواز",
  "شهین",
  "شیبا",
  "شیدا",
  "شیده",
  "شیردل",
  "شیرزاد",
  "شیرنگ",
  "شیرو",
  "شیرین دخت",
  "شیما",
  "شینا",
  "شیرین",
  "شیوا",
  "طوس",
  "طوطی",
  "طهماسب",
  "طهمورث",
  "غوغا",
  "غنچه",
  "فتانه",
  "فدا",
  "فراز",
  "فرامرز",
  "فرانک",
  "فراهان",
  "فربد",
  "فربغ",
  "فرجاد",
  "فرخ",
  "فرخ پی",
  "فرخ داد",
  "فرخ رو",
  "فرخ زاد",
  "فرخ لقا",
  "فرخ مهر",
  "فرداد",
  "فردیس",
  "فرین",
  "فرزاد",
  "فرزام",
  "فرزان",
  "فرزانه",
  "فرزین",
  "فرشاد",
  "فرشته",
  "فرشید",
  "فرمان",
  "فرناز",
  "فرنگیس",
  "فرنود",
  "فرنوش",
  "فرنیا",
  "فروتن",
  "فرود",
  "فروز",
  "فروزان",
  "فروزش",
  "فروزنده",
  "فروغ",
  "فرهاد",
  "فرهنگ",
  "فرهود",
  "فربار",
  "فریبا",
  "فرید",
  "فریدخت",
  "فریدون",
  "فریمان",
  "فریناز",
  "فرینوش",
  "فریوش",
  "فیروز",
  "فیروزه",
  "قابوس",
  "قباد",
  "قدسی",
  "کابان",
  "کابوک",
  "کارا",
  "کارو",
  "کاراکو",
  "کامبخت",
  "کامبخش",
  "کامبیز",
  "کامجو",
  "کامدین",
  "کامران",
  "کامراوا",
  "کامک",
  "کامنوش",
  "کامیار",
  "کانیار",
  "کاووس",
  "کاوه",
  "کتایون",
  "کرشمه",
  "کسری",
  "کلاله",
  "کمبوجیه",
  "کوشا",
  "کهبد",
  "کهرام",
  "کهزاد",
  "کیارش",
  "کیان",
  "کیانا",
  "کیانچهر",
  "کیاندخت",
  "کیانوش",
  "کیاوش",
  "کیخسرو",
  "کیقباد",
  "کیکاووس",
  "کیوان",
  "کیوان دخت",
  "کیومرث",
  "کیهان",
  "کیاندخت",
  "کیهانه",
  "گرد آفرید",
  "گردان",
  "گرشا",
  "گرشاسب",
  "گرشین",
  "گرگین",
  "گزل",
  "گشتاسب",
  "گشسب",
  "گشسب بانو",
  "گل",
  "گل آذین",
  "گل آرا‌",
  "گلاره",
  "گل افروز",
  "گلاله",
  "گل اندام",
  "گلاویز",
  "گلباد",
  "گلبار",
  "گلبام",
  "گلبان",
  "گلبانو",
  "گلبرگ",
  "گلبو",
  "گلبهار",
  "گلبیز",
  "گلپاره",
  "گلپر",
  "گلپری",
  "گلپوش",
  "گل پونه",
  "گلچین",
  "گلدخت",
  "گلدیس",
  "گلربا",
  "گلرخ",
  "گلرنگ",
  "گلرو",
  "گلشن",
  "گلریز",
  "گلزاد",
  "گلزار",
  "گلسا",
  "گلشید",
  "گلنار",
  "گلناز",
  "گلنسا",
  "گلنواز",
  "گلنوش",
  "گلی",
  "گودرز",
  "گوماتو",
  "گهر چهر",
  "گوهر ناز",
  "گیتی",
  "گیسو",
  "گیلدا",
  "گیو",
  "لادن",
  "لاله",
  "لاله رخ",
  "لاله دخت",
  "لبخند",
  "لقاء",
  "لومانا",
  "لهراسب",
  "مارال",
  "ماری",
  "مازیار",
  "ماکان",
  "مامک",
  "مانا",
  "ماندانا",
  "مانوش",
  "مانی",
  "مانیا",
  "ماهان",
  "ماهاندخت",
  "ماه برزین",
  "ماه جهان",
  "ماهچهر",
  "ماهدخت",
  "ماهور",
  "ماهرخ",
  "ماهزاد",
  "مردآویز",
  "مرداس",
  "مرزبان",
  "مرمر",
  "مزدک",
  "مژده",
  "مژگان",
  "مستان",
  "مستانه",
  "مشکاندخت",
  "مشکناز",
  "مشکین دخت",
  "منیژه",
  "منوچهر",
  "مهبانو",
  "مهبد",
  "مه داد",
  "مهتاب",
  "مهدیس",
  "مه جبین",
  "مه دخت",
  "مهر آذر",
  "مهر آرا",
  "مهر آسا",
  "مهر آفاق",
  "مهر افرین",
  "مهرآب",
  "مهرداد",
  "مهر افزون",
  "مهرام",
  "مهران",
  "مهراندخت",
  "مهراندیش",
  "مهرانفر",
  "مهرانگیز",
  "مهرداد",
  "مهر دخت",
  "مهرزاده ‌",
  "مهرناز",
  "مهرنوش",
  "مهرنکار",
  "مهرنیا",
  "مهروز",
  "مهری",
  "مهریار",
  "مهسا",
  "مهستی",
  "مه سیما",
  "مهشاد",
  "مهشید",
  "مهنام",
  "مهناز",
  "مهنوش",
  "مهوش",
  "مهیار",
  "مهین",
  "مهین دخت",
  "میترا",
  "میخک",
  "مینا",
  "مینا دخت",
  "مینو",
  "مینودخت",
  "مینو فر",
  "نادر",
  "ناز آفرین",
  "نازبانو",
  "نازپرور",
  "نازچهر",
  "نازفر",
  "نازلی",
  "نازی",
  "نازیدخت",
  "نامور",
  "ناهید",
  "ندا",
  "نرسی",
  "نرگس",
  "نرمک",
  "نرمین",
  "نریمان",
  "نسترن",
  "نسرین",
  "نسرین دخت",
  "نسرین نوش",
  "نکیسا",
  "نگار",
  "نگاره",
  "نگارین",
  "نگین",
  "نوا",
  "نوش",
  "نوش آذر",
  "نوش آور",
  "نوشا",
  "نوش آفرین",
  "نوشدخت",
  "نوشروان",
  "نوشفر",
  "نوشناز",
  "نوشین",
  "نوید",
  "نوین",
  "نوین دخت",
  "نیش ا",
  "نیک بین",
  "نیک پی",
  "نیک چهر",
  "نیک خواه",
  "نیکداد",
  "نیکدخت",
  "نیکدل",
  "نیکزاد",
  "نیلوفر",
  "نیما",
  "وامق",
  "ورجاوند",
  "وریا",
  "وشمگیر",
  "وهرز",
  "وهسودان",
  "ویدا",
  "ویس",
  "ویشتاسب",
  "ویگن",
  "هژیر",
  "هخامنش",
  "هربد( هیربد )",
  "هرمز",
  "همایون",
  "هما",
  "همادخت",
  "همدم",
  "همراز",
  "همراه",
  "هنگامه",
  "هوتن",
  "هور",
  "هورتاش",
  "هورچهر",
  "هورداد",
  "هوردخت",
  "هورزاد",
  "هورمند",
  "هوروش",
  "هوشنگ",
  "هوشیار",
  "هومان",
  "هومن",
  "هونام",
  "هویدا",
  "هیتاسب",
  "هیرمند",
  "هیما",
  "هیوا",
  "یادگار",
  "یاسمن ( یاسمین )",
  "یاشار",
  "یاور",
  "یزدان",
  "یگانه",
  "یوشیتا"
];

},{}],402:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");

},{"./first_name":401,"./last_name":403,"./prefix":404}],403:[function(require,module,exports){
module["exports"] = [
  "عارف",
  "عاشوری",
  "عالی",
  "عبادی",
  "عبدالکریمی",
  "عبدالملکی",
  "عراقی",
  "عزیزی",
  "عصار",
  "عقیلی",
  "علم",
  "علم‌الهدی",
  "علی عسگری",
  "علی‌آبادی",
  "علیا",
  "علی‌پور",
  "علی‌زمانی",
  "عنایت",
  "غضنفری",
  "غنی",
  "فارسی",
  "فاطمی",
  "فانی",
  "فتاحی",
  "فرامرزی",
  "فرج",
  "فرشیدورد",
  "فرمانفرمائیان",
  "فروتن",
  "فرهنگ",
  "فریاد",
  "فنایی",
  "فنی‌زاده",
  "فولادوند",
  "فهمیده",
  "قاضی",
  "قانعی",
  "قانونی",
  "قمیشی",
  "قنبری",
  "قهرمان",
  "قهرمانی",
  "قهرمانیان",
  "قهستانی",
  "کاشی",
  "کاکاوند",
  "کامکار",
  "کاملی",
  "کاویانی",
  "کدیور",
  "کردبچه",
  "کرمانی",
  "کریمی",
  "کلباسی",
  "کمالی",
  "کوشکی",
  "کهنمویی",
  "کیان",
  "کیانی (نام خانوادگی)",
  "کیمیایی",
  "گل محمدی",
  "گلپایگانی",
  "گنجی",
  "لاجوردی",
  "لاچینی",
  "لاهوتی",
  "لنکرانی",
  "لوکس",
  "مجاهد",
  "مجتبایی",
  "مجتبوی",
  "مجتهد شبستری",
  "مجتهدی",
  "مجرد",
  "محجوب",
  "محجوبی",
  "محدثی",
  "محمدرضایی",
  "محمدی",
  "مددی",
  "مرادخانی",
  "مرتضوی",
  "مستوفی",
  "مشا",
  "مصاحب",
  "مصباح",
  "مصباح‌زاده",
  "مطهری",
  "مظفر",
  "معارف",
  "معروف",
  "معین",
  "مفتاح",
  "مفتح",
  "مقدم",
  "ملایری",
  "ملک",
  "ملکیان",
  "منوچهری",
  "موحد",
  "موسوی",
  "موسویان",
  "مهاجرانی",
  "مهدی‌پور",
  "میرباقری",
  "میردامادی",
  "میرزاده",
  "میرسپاسی",
  "میزبانی",
  "ناظری",
  "نامور",
  "نجفی",
  "ندوشن",
  "نراقی",
  "نعمت‌زاده",
  "نقدی",
  "نقیب‌زاده",
  "نواب",
  "نوبخت",
  "نوبختی",
  "نهاوندی",
  "نیشابوری",
  "نیلوفری",
  "واثقی",
  "واعظ",
  "واعظ‌زاده",
  "واعظی",
  "وکیلی",
  "هاشمی",
  "هاشمی رفسنجانی",
  "هاشمیان",
  "هامون",
  "هدایت",
  "هراتی",
  "هروی",
  "همایون",
  "همت",
  "همدانی",
  "هوشیار",
  "هومن",
  "یاحقی",
  "یادگار",
  "یثربی",
  "یلدا"
];

},{}],404:[function(require,module,exports){
module["exports"] = [
  "آقای",
  "خانم",
  "دکتر"
];

},{}],405:[function(require,module,exports){
module["exports"] = [
  "####",
  "###",
  "##",
  "#"
];

},{}],406:[function(require,module,exports){
arguments[4][87][0].apply(exports,arguments)
},{"dup":87}],407:[function(require,module,exports){
module["exports"] = [
  "Paris",
  "Marseille",
  "Lyon",
  "Toulouse",
  "Nice",
  "Nantes",
  "Strasbourg",
  "Montpellier",
  "Bordeaux",
  "Lille13",
  "Rennes",
  "Reims",
  "Le Havre",
  "Saint-Étienne",
  "Toulon",
  "Grenoble",
  "Dijon",
  "Angers",
  "Saint-Denis",
  "Villeurbanne",
  "Le Mans",
  "Aix-en-Provence",
  "Brest",
  "Nîmes",
  "Limoges",
  "Clermont-Ferrand",
  "Tours",
  "Amiens",
  "Metz",
  "Perpignan",
  "Besançon",
  "Orléans",
  "Boulogne-Billancourt",
  "Mulhouse",
  "Rouen",
  "Caen",
  "Nancy",
  "Saint-Denis",
  "Saint-Paul",
  "Montreuil",
  "Argenteuil",
  "Roubaix",
  "Dunkerque14",
  "Tourcoing",
  "Nanterre",
  "Avignon",
  "Créteil",
  "Poitiers",
  "Fort-de-France",
  "Courbevoie",
  "Versailles",
  "Vitry-sur-Seine",
  "Colombes",
  "Pau",
  "Aulnay-sous-Bois",
  "Asnières-sur-Seine",
  "Rueil-Malmaison",
  "Saint-Pierre",
  "Antibes",
  "Saint-Maur-des-Fossés",
  "Champigny-sur-Marne",
  "La Rochelle",
  "Aubervilliers",
  "Calais",
  "Cannes",
  "Le Tampon",
  "Béziers",
  "Colmar",
  "Bourges",
  "Drancy",
  "Mérignac",
  "Saint-Nazaire",
  "Valence",
  "Ajaccio",
  "Issy-les-Moulineaux",
  "Villeneuve-d'Ascq",
  "Levallois-Perret",
  "Noisy-le-Grand",
  "Quimper",
  "La Seyne-sur-Mer",
  "Antony",
  "Troyes",
  "Neuilly-sur-Seine",
  "Sarcelles",
  "Les Abymes",
  "Vénissieux",
  "Clichy",
  "Lorient",
  "Pessac",
  "Ivry-sur-Seine",
  "Cergy",
  "Cayenne",
  "Niort",
  "Chambéry",
  "Montauban",
  "Saint-Quentin",
  "Villejuif",
  "Hyères",
  "Beauvais",
  "Cholet"
];

},{}],408:[function(require,module,exports){
module["exports"] = [
  "France"
];

},{}],409:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.building_number = require("./building_number");
address.street_prefix = require("./street_prefix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.city_name = require("./city_name");
address.city = require("./city");
address.street_suffix = require("./street_suffix");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":405,"./city":406,"./city_name":407,"./default_country":408,"./postcode":410,"./secondary_address":411,"./state":412,"./street_address":413,"./street_name":414,"./street_prefix":415,"./street_suffix":416}],410:[function(require,module,exports){
arguments[4][320][0].apply(exports,arguments)
},{"dup":320}],411:[function(require,module,exports){
module["exports"] = [
  "Apt. ###",
  "# étage"
];

},{}],412:[function(require,module,exports){
module["exports"] = [
  "Alsace",
  "Aquitaine",
  "Auvergne",
  "Basse-Normandie",
  "Bourgogne",
  "Bretagne",
  "Centre",
  "Champagne-Ardenne",
  "Corse",
  "Franche-Comté",
  "Haute-Normandie",
  "Île-de-France",
  "Languedoc-Roussillon",
  "Limousin",
  "Lorraine",
  "Midi-Pyrénées",
  "Nord-Pas-de-Calais",
  "Pays de la Loire",
  "Picardie",
  "Poitou-Charentes",
  "Provence-Alpes-Côte d'Azur",
  "Rhône-Alpes"
];

},{}],413:[function(require,module,exports){
arguments[4][143][0].apply(exports,arguments)
},{"dup":143}],414:[function(require,module,exports){
module["exports"] = [
  "#{street_prefix} #{street_suffix}"
];

},{}],415:[function(require,module,exports){
module["exports"] = [
  "Allée, Voie",
  "Rue",
  "Avenue",
  "Boulevard",
  "Quai",
  "Passage",
  "Impasse",
  "Place"
];

},{}],416:[function(require,module,exports){
module["exports"] = [
  "de l'Abbaye",
  "Adolphe Mille",
  "d'Alésia",
  "d'Argenteuil",
  "d'Assas",
  "du Bac",
  "de Paris",
  "La Boétie",
  "Bonaparte",
  "de la Bûcherie",
  "de Caumartin",
  "Charlemagne",
  "du Chat-qui-Pêche",
  "de la Chaussée-d'Antin",
  "du Dahomey",
  "Dauphine",
  "Delesseux",
  "du Faubourg Saint-Honoré",
  "du Faubourg-Saint-Denis",
  "de la Ferronnerie",
  "des Francs-Bourgeois",
  "des Grands Augustins",
  "de la Harpe",
  "du Havre",
  "de la Huchette",
  "Joubert",
  "Laffitte",
  "Lepic",
  "des Lombards",
  "Marcadet",
  "Molière",
  "Monsieur-le-Prince",
  "de Montmorency",
  "Montorgueil",
  "Mouffetard",
  "de Nesle",
  "Oberkampf",
  "de l'Odéon",
  "d'Orsel",
  "de la Paix",
  "des Panoramas",
  "Pastourelle",
  "Pierre Charron",
  "de la Pompe",
  "de Presbourg",
  "de Provence",
  "de Richelieu",
  "de Rivoli",
  "des Rosiers",
  "Royale",
  "d'Abbeville",
  "Saint-Honoré",
  "Saint-Bernard",
  "Saint-Denis",
  "Saint-Dominique",
  "Saint-Jacques",
  "Saint-Séverin",
  "des Saussaies",
  "de Seine",
  "de Solférino",
  "Du Sommerard",
  "de Tilsitt",
  "Vaneau",
  "de Vaugirard",
  "de la Victoire",
  "Zadkine"
];

},{}],417:[function(require,module,exports){
arguments[4][161][0].apply(exports,arguments)
},{"dup":161}],418:[function(require,module,exports){
arguments[4][162][0].apply(exports,arguments)
},{"dup":162}],419:[function(require,module,exports){
arguments[4][163][0].apply(exports,arguments)
},{"dup":163}],420:[function(require,module,exports){
arguments[4][164][0].apply(exports,arguments)
},{"dup":164}],421:[function(require,module,exports){
arguments[4][165][0].apply(exports,arguments)
},{"dup":165}],422:[function(require,module,exports){
arguments[4][166][0].apply(exports,arguments)
},{"./adjective":417,"./bs_adjective":418,"./bs_noun":419,"./bs_verb":420,"./descriptor":421,"./name":423,"./noun":424,"./suffix":425,"dup":166}],423:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name} et #{Name.last_name}"
];

},{}],424:[function(require,module,exports){
arguments[4][168][0].apply(exports,arguments)
},{"dup":168}],425:[function(require,module,exports){
module["exports"] = [
  "SARL",
  "SA",
  "EURL",
  "SAS",
  "SEM",
  "SCOP",
  "GIE",
  "EI"
];

},{}],426:[function(require,module,exports){
var fr = {};
module['exports'] = fr;
fr.title = "French";
fr.address = require("./address");
fr.company = require("./company");
fr.internet = require("./internet");
fr.lorem = require("./lorem");
fr.name = require("./name");
fr.phone_number = require("./phone_number");

},{"./address":409,"./company":422,"./internet":429,"./lorem":430,"./name":434,"./phone_number":440}],427:[function(require,module,exports){
module["exports"] = [
  "com",
  "fr",
  "eu",
  "info",
  "name",
  "net",
  "org"
];

},{}],428:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.fr",
  "hotmail.fr"
];

},{}],429:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"./domain_suffix":427,"./free_email":428,"dup":75}],430:[function(require,module,exports){
arguments[4][199][0].apply(exports,arguments)
},{"./supplemental":431,"./words":432,"dup":199}],431:[function(require,module,exports){
arguments[4][200][0].apply(exports,arguments)
},{"dup":200}],432:[function(require,module,exports){
arguments[4][77][0].apply(exports,arguments)
},{"dup":77}],433:[function(require,module,exports){
module["exports"] = [
  "Enzo",
  "Lucas",
  "Mathis",
  "Nathan",
  "Thomas",
  "Hugo",
  "Théo",
  "Tom",
  "Louis",
  "Raphaël",
  "Clément",
  "Léo",
  "Mathéo",
  "Maxime",
  "Alexandre",
  "Antoine",
  "Yanis",
  "Paul",
  "Baptiste",
  "Alexis",
  "Gabriel",
  "Arthur",
  "Jules",
  "Ethan",
  "Noah",
  "Quentin",
  "Axel",
  "Evan",
  "Mattéo",
  "Romain",
  "Valentin",
  "Maxence",
  "Noa",
  "Adam",
  "Nicolas",
  "Julien",
  "Mael",
  "Pierre",
  "Rayan",
  "Victor",
  "Mohamed",
  "Adrien",
  "Kylian",
  "Sacha",
  "Benjamin",
  "Léa",
  "Clara",
  "Manon",
  "Chloé",
  "Camille",
  "Ines",
  "Sarah",
  "Jade",
  "Lola",
  "Anaïs",
  "Lucie",
  "Océane",
  "Lilou",
  "Marie",
  "Eva",
  "Romane",
  "Lisa",
  "Zoe",
  "Julie",
  "Mathilde",
  "Louise",
  "Juliette",
  "Clémence",
  "Célia",
  "Laura",
  "Lena",
  "Maëlys",
  "Charlotte",
  "Ambre",
  "Maeva",
  "Pauline",
  "Lina",
  "Jeanne",
  "Lou",
  "Noémie",
  "Justine",
  "Louna",
  "Elisa",
  "Alice",
  "Emilie",
  "Carla",
  "Maëlle",
  "Alicia",
  "Mélissa"
];

},{}],434:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.title = require("./title");
name.name = require("./name");

},{"./first_name":433,"./last_name":435,"./name":436,"./prefix":437,"./title":438}],435:[function(require,module,exports){
module["exports"] = [
  "Martin",
  "Bernard",
  "Dubois",
  "Thomas",
  "Robert",
  "Richard",
  "Petit",
  "Durand",
  "Leroy",
  "Moreau",
  "Simon",
  "Laurent",
  "Lefebvre",
  "Michel",
  "Garcia",
  "David",
  "Bertrand",
  "Roux",
  "Vincent",
  "Fournier",
  "Morel",
  "Girard",
  "Andre",
  "Lefevre",
  "Mercier",
  "Dupont",
  "Lambert",
  "Bonnet",
  "Francois",
  "Martinez",
  "Legrand",
  "Garnier",
  "Faure",
  "Rousseau",
  "Blanc",
  "Guerin",
  "Muller",
  "Henry",
  "Roussel",
  "Nicolas",
  "Perrin",
  "Morin",
  "Mathieu",
  "Clement",
  "Gauthier",
  "Dumont",
  "Lopez",
  "Fontaine",
  "Chevalier",
  "Robin",
  "Masson",
  "Sanchez",
  "Gerard",
  "Nguyen",
  "Boyer",
  "Denis",
  "Lemaire",
  "Duval",
  "Joly",
  "Gautier",
  "Roger",
  "Roche",
  "Roy",
  "Noel",
  "Meyer",
  "Lucas",
  "Meunier",
  "Jean",
  "Perez",
  "Marchand",
  "Dufour",
  "Blanchard",
  "Marie",
  "Barbier",
  "Brun",
  "Dumas",
  "Brunet",
  "Schmitt",
  "Leroux",
  "Colin",
  "Fernandez",
  "Pierre",
  "Renard",
  "Arnaud",
  "Rolland",
  "Caron",
  "Aubert",
  "Giraud",
  "Leclerc",
  "Vidal",
  "Bourgeois",
  "Renaud",
  "Lemoine",
  "Picard",
  "Gaillard",
  "Philippe",
  "Leclercq",
  "Lacroix",
  "Fabre",
  "Dupuis",
  "Olivier",
  "Rodriguez",
  "Da silva",
  "Hubert",
  "Louis",
  "Charles",
  "Guillot",
  "Riviere",
  "Le gall",
  "Guillaume",
  "Adam",
  "Rey",
  "Moulin",
  "Gonzalez",
  "Berger",
  "Lecomte",
  "Menard",
  "Fleury",
  "Deschamps",
  "Carpentier",
  "Julien",
  "Benoit",
  "Paris",
  "Maillard",
  "Marchal",
  "Aubry",
  "Vasseur",
  "Le roux",
  "Renault",
  "Jacquet",
  "Collet",
  "Prevost",
  "Poirier",
  "Charpentier",
  "Royer",
  "Huet",
  "Baron",
  "Dupuy",
  "Pons",
  "Paul",
  "Laine",
  "Carre",
  "Breton",
  "Remy",
  "Schneider",
  "Perrot",
  "Guyot",
  "Barre",
  "Marty",
  "Cousin"
];

},{}],436:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{last_name} #{first_name}"
];

},{}],437:[function(require,module,exports){
module["exports"] = [
  "M",
  "Mme",
  "Mlle",
  "Dr",
  "Prof"
];

},{}],438:[function(require,module,exports){
module["exports"] = {
  "job": [
    "Superviseur",
    "Executif",
    "Manager",
    "Ingenieur",
    "Specialiste",
    "Directeur",
    "Coordinateur",
    "Administrateur",
    "Architecte",
    "Analyste",
    "Designer",
    "Technicien",
    "Developpeur",
    "Producteur",
    "Consultant",
    "Assistant",
    "Agent",
    "Stagiaire"
  ]
};

},{}],439:[function(require,module,exports){
module["exports"] = [
  "01########",
  "02########",
  "03########",
  "04########",
  "05########",
  "06########",
  "07########",
  "+33 1########",
  "+33 2########",
  "+33 3########",
  "+33 4########",
  "+33 5########",
  "+33 6########",
  "+33 7########"
];

},{}],440:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":439,"dup":85}],441:[function(require,module,exports){
arguments[4][234][0].apply(exports,arguments)
},{"dup":234}],442:[function(require,module,exports){
arguments[4][267][0].apply(exports,arguments)
},{"./default_country":441,"./postcode":443,"./state":444,"./state_abbr":445,"dup":267}],443:[function(require,module,exports){
arguments[4][236][0].apply(exports,arguments)
},{"dup":236}],444:[function(require,module,exports){
module["exports"] = [
  "Alberta",
  "Colombie-Britannique",
  "Manitoba",
  "Nouveau-Brunswick",
  "Terre-Neuve-et-Labrador",
  "Nouvelle-Écosse",
  "Territoires du Nord-Ouest",
  "Nunavut",
  "Ontario",
  "Île-du-Prince-Édouard",
  "Québec",
  "Saskatchewan",
  "Yukon"
];

},{}],445:[function(require,module,exports){
module["exports"] = [
  "AB",
  "BC",
  "MB",
  "NB",
  "NL",
  "NS",
  "NU",
  "NT",
  "ON",
  "PE",
  "QC",
  "SK",
  "YK"
];

},{}],446:[function(require,module,exports){
var fr_CA = {};
module['exports'] = fr_CA;
fr_CA.title = "Canada (French)";
fr_CA.address = require("./address");
fr_CA.internet = require("./internet");
fr_CA.phone_number = require("./phone_number");

},{"./address":442,"./internet":449,"./phone_number":451}],447:[function(require,module,exports){
module["exports"] = [
  "qc.ca",
  "ca",
  "com",
  "biz",
  "info",
  "name",
  "net",
  "org"
];

},{}],448:[function(require,module,exports){
arguments[4][241][0].apply(exports,arguments)
},{"dup":241}],449:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"./domain_suffix":447,"./free_email":448,"dup":75}],450:[function(require,module,exports){
module["exports"] = [
  "### ###-####",
  "1 ### ###-####",
  "### ###-####, poste ###"
];

},{}],451:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":450,"dup":85}],452:[function(require,module,exports){
module["exports"] = [
  "###",
  "##",
  "#"
];

},{}],453:[function(require,module,exports){
module["exports"] = [
  "#{city_prefix} #{Name.first_name}#{city_suffix}",
  "#{city_prefix} #{Name.first_name}",
  "#{Name.first_name}#{city_suffix}",
  "#{Name.first_name}#{city_suffix}",
  "#{Name.last_name}#{city_suffix}",
  "#{Name.last_name}#{city_suffix}"
];

},{}],454:[function(require,module,exports){
module["exports"] = [
  "აბასთუმანი",
  "აბაშა",
  "ადიგენი",
  "ამბროლაური",
  "ანაკლია",
  "ასპინძა",
  "ახალგორი",
  "ახალქალაქი",
  "ახალციხე",
  "ახმეტა",
  "ბათუმი",
  "ბაკურიანი",
  "ბაღდათი",
  "ბახმარო",
  "ბოლნისი",
  "ბორჯომი",
  "გარდაბანი",
  "გონიო",
  "გორი",
  "გრიგოლეთი",
  "გუდაური",
  "გურჯაანი",
  "დედოფლისწყარო",
  "დმანისი",
  "დუშეთი",
  "ვანი",
  "ზესტაფონი",
  "ზუგდიდი",
  "თბილისი",
  "თეთრიწყარო",
  "თელავი",
  "თერჯოლა",
  "თიანეთი",
  "კასპი",
  "კვარიათი",
  "კიკეთი",
  "კოჯორი",
  "ლაგოდეხი",
  "ლანჩხუთი",
  "ლენტეხი",
  "მარნეული",
  "მარტვილი",
  "მესტია",
  "მცხეთა",
  "მწვანე კონცხი",
  "ნინოწმინდა",
  "ოზურგეთი",
  "ონი",
  "რუსთავი",
  "საგარეჯო",
  "საგურამო",
  "საირმე",
  "სამტრედია",
  "სარფი",
  "საჩხერე",
  "სენაკი",
  "სიღნაღი",
  "სტეფანწმინდა",
  "სურამი",
  "ტაბახმელა",
  "ტყიბული",
  "ურეკი",
  "ფოთი",
  "ქარელი",
  "ქედა",
  "ქობულეთი",
  "ქუთაისი",
  "ყვარელი",
  "შუახევი",
  "ჩაქვი",
  "ჩოხატაური",
  "ცაგერი",
  "ცხოროჭყუ",
  "წავკისი",
  "წალენჯიხა",
  "წალკა",
  "წაღვერი",
  "წეროვანი",
  "წნორი",
  "წყალტუბო",
  "წყნეთი",
  "ჭიათურა",
  "ხარაგაული",
  "ხაშური",
  "ხელვაჩაური",
  "ხობი",
  "ხონი",
  "ხულო"
];

},{}],455:[function(require,module,exports){
module["exports"] = [
  "ახალი",
  "ძველი",
  "ზემო",
  "ქვემო"
];

},{}],456:[function(require,module,exports){
module["exports"] = [
  "სოფელი",
  "ძირი",
  "სკარი",
  "დაბა"
];

},{}],457:[function(require,module,exports){
module["exports"] = [
  "ავსტრალია",
  "ავსტრია",
  "ავღანეთი",
  "აზავადი",
  "აზერბაიჯანი",
  "აზიაში",
  "აზიის",
  "ალბანეთი",
  "ალჟირი",
  "ამაღლება და ტრისტანი-და-კუნია",
  "ამერიკის ვირჯინიის კუნძულები",
  "ამერიკის სამოა",
  "ამერიკის შეერთებული შტატები",
  "ამერიკის",
  "ანგილია",
  "ანგოლა",
  "ანდორა",
  "ანტიგუა და ბარბუდა",
  "არაბეთის საემიროები",
  "არაბთა გაერთიანებული საამიროები",
  "არაბული ქვეყნების ლიგის",
  "არგენტინა",
  "არუბა",
  "არცნობილი ქვეყნების სია",
  "აფრიკაში",
  "აფრიკაშია",
  "აღდგომის კუნძული",
  "აღმ. ტიმორი",
  "აღმოსავლეთი აფრიკა",
  "აღმოსავლეთი ტიმორი",
  "აშშ",
  "აშშ-ის ვირჯინის კუნძულები",
  "ახალი ზელანდია",
  "ახალი კალედონია",
  "ბანგლადეში",
  "ბარბადოსი",
  "ბაჰამის კუნძულები",
  "ბაჰრეინი",
  "ბელარუსი",
  "ბელგია",
  "ბელიზი",
  "ბენინი",
  "ბერმუდა",
  "ბერმუდის კუნძულები",
  "ბოლივია",
  "ბოსნია და ჰერცეგოვინა",
  "ბოტსვანა",
  "ბრაზილია",
  "ბრიტანეთის ვირჯინიის კუნძულები",
  "ბრიტანეთის ვირჯინის კუნძულები",
  "ბრიტანეთის ინდოეთის ოკეანის ტერიტორია",
  "ბრუნეი",
  "ბულგარეთი",
  "ბურკინა ფასო",
  "ბურკინა-ფასო",
  "ბურუნდი",
  "ბჰუტანი",
  "გაბონი",
  "გაერთიანებული სამეფო",
  "გაეროს",
  "გაიანა",
  "გამბია",
  "განა",
  "გერმანია",
  "გვადელუპა",
  "გვატემალა",
  "გვინეა",
  "გვინეა-ბისაუ",
  "გიბრალტარი",
  "გრენადა",
  "გრენლანდია",
  "გუამი",
  "დამოკიდებული ტერ.",
  "დამოკიდებული ტერიტორია",
  "დამოკიდებული",
  "დანია",
  "დასავლეთი აფრიკა",
  "დასავლეთი საჰარა",
  "დიდი ბრიტანეთი",
  "დომინიკა",
  "დომინიკელთა რესპუბლიკა",
  "ეგვიპტე",
  "ევროკავშირის",
  "ევროპასთან",
  "ევროპაშია",
  "ევროპის ქვეყნები",
  "ეთიოპია",
  "ეკვადორი",
  "ეკვატორული გვინეა",
  "ეპარსეს კუნძული",
  "ერაყი",
  "ერიტრეა",
  "ესპანეთი",
  "ესპანეთის სუვერენული ტერიტორიები",
  "ესტონეთი",
  "ეშმორის და კარტიეს კუნძულები",
  "ვანუატუ",
  "ვატიკანი",
  "ვენესუელა",
  "ვიეტნამი",
  "ზამბია",
  "ზიმბაბვე",
  "თურქეთი",
  "თურქმენეთი",
  "იამაიკა",
  "იან მაიენი",
  "იაპონია",
  "იემენი",
  "ინდოეთი",
  "ინდონეზია",
  "იორდანია",
  "ირანი",
  "ირლანდია",
  "ისლანდია",
  "ისრაელი",
  "იტალია",
  "კაბო-ვერდე",
  "კაიმანის კუნძულები",
  "კამბოჯა",
  "კამერუნი",
  "კანადა",
  "კანარის კუნძულები",
  "კარიბის ზღვის",
  "კატარი",
  "კენია",
  "კვიპროსი",
  "კინგმენის რიფი",
  "კირიბატი",
  "კლიპერტონი",
  "კოლუმბია",
  "კომორი",
  "კომორის კუნძულები",
  "კონგოს დემოკრატიული რესპუბლიკა",
  "კონგოს რესპუბლიკა",
  "კორეის რესპუბლიკა",
  "კოსტა-რიკა",
  "კოტ-დ’ივუარი",
  "კუბა",
  "კუკის კუნძულები",
  "ლაოსი",
  "ლატვია",
  "ლესოთო",
  "ლიბანი",
  "ლიბერია",
  "ლიბია",
  "ლიტვა",
  "ლიხტენშტაინი",
  "ლუქსემბურგი",
  "მადაგასკარი",
  "მადეირა",
  "მავრიკი",
  "მავრიტანია",
  "მაიოტა",
  "მაკაო",
  "მაკედონია",
  "მალავი",
  "მალაიზია",
  "მალდივი",
  "მალდივის კუნძულები",
  "მალი",
  "მალტა",
  "მაროკო",
  "მარტინიკა",
  "მარშალის კუნძულები",
  "მარჯნის ზღვის კუნძულები",
  "მელილია",
  "მექსიკა",
  "მიანმარი",
  "მიკრონეზია",
  "მიკრონეზიის ფედერაციული შტატები",
  "მიმდებარე კუნძულები",
  "მოზამბიკი",
  "მოლდოვა",
  "მონაკო",
  "მონსერატი",
  "მონღოლეთი",
  "ნამიბია",
  "ნაურუ",
  "ნაწილობრივ აფრიკაში",
  "ნეპალი",
  "ნიგერი",
  "ნიგერია",
  "ნიდერლანდი",
  "ნიდერლანდის ანტილები",
  "ნიკარაგუა",
  "ნიუე",
  "ნორვეგია",
  "ნორფოლკის კუნძული",
  "ოკეანეთის",
  "ოკეანიას",
  "ომანი",
  "პაკისტანი",
  "პალაუ",
  "პალესტინა",
  "პალმირა (ატოლი)",
  "პანამა",
  "პანტელერია",
  "პაპუა-ახალი გვინეა",
  "პარაგვაი",
  "პერუ",
  "პიტკერნის კუნძულები",
  "პოლონეთი",
  "პორტუგალია",
  "პრინც-ედუარდის კუნძული",
  "პუერტო-რიკო",
  "რეუნიონი",
  "როტუმა",
  "რუანდა",
  "რუმინეთი",
  "რუსეთი",
  "საბერძნეთი",
  "სადავო ტერიტორიები",
  "სალვადორი",
  "სამოა",
  "სამხ. კორეა",
  "სამხრეთ ამერიკაშია",
  "სამხრეთ ამერიკის",
  "სამხრეთ აფრიკის რესპუბლიკა",
  "სამხრეთი აფრიკა",
  "სამხრეთი გეორგია და სამხრეთ სენდვიჩის კუნძულები",
  "სამხრეთი სუდანი",
  "სან-მარინო",
  "სან-ტომე და პრინსიპი",
  "საუდის არაბეთი",
  "საფრანგეთი",
  "საფრანგეთის გვიანა",
  "საფრანგეთის პოლინეზია",
  "საქართველო",
  "საჰარის არაბთა დემოკრატიული რესპუბლიკა",
  "სეიშელის კუნძულები",
  "სენ-ბართელმი",
  "სენ-მარტენი",
  "სენ-პიერი და მიკელონი",
  "სენეგალი",
  "სენტ-ვინსენტი და გრენადინები",
  "სენტ-კიტსი და ნევისი",
  "სენტ-ლუსია",
  "სერბეთი",
  "სეუტა",
  "სვაზილენდი",
  "სვალბარდი",
  "სიერა-ლეონე",
  "სინგაპური",
  "სირია",
  "სლოვაკეთი",
  "სლოვენია",
  "სოკოტრა",
  "სოლომონის კუნძულები",
  "სომალი",
  "სომალილენდი",
  "სომხეთი",
  "სუდანი",
  "სუვერენული სახელმწიფოები",
  "სურინამი",
  "ტაივანი",
  "ტაილანდი",
  "ტანზანია",
  "ტაჯიკეთი",
  "ტერიტორიები",
  "ტერქსისა და კაიკოსის კუნძულები",
  "ტოგო",
  "ტოკელაუ",
  "ტონგა",
  "ტრანსკონტინენტური ქვეყანა",
  "ტრინიდადი და ტობაგო",
  "ტუვალუ",
  "ტუნისი",
  "უგანდა",
  "უზბეკეთი",
  "უკრაინა",
  "უნგრეთი",
  "უოლისი და ფუტუნა",
  "ურუგვაი",
  "ფარერის კუნძულები",
  "ფილიპინები",
  "ფინეთი",
  "ფიჯი",
  "ფოლკლენდის კუნძულები",
  "ქვეყნები",
  "ქოქოსის კუნძულები",
  "ქუვეითი",
  "ღაზის სექტორი",
  "ყაზახეთი",
  "ყირგიზეთი",
  "შვედეთი",
  "შვეიცარია",
  "შობის კუნძული",
  "შრი-ლანკა",
  "ჩადი",
  "ჩერნოგორია",
  "ჩეჩნეთის რესპუბლიკა იჩქერია",
  "ჩეხეთი",
  "ჩილე",
  "ჩინეთი",
  "ჩრდ. კორეა",
  "ჩრდილოეთ ამერიკის",
  "ჩრდილოეთ მარიანას კუნძულები",
  "ჩრდილოეთი აფრიკა",
  "ჩრდილოეთი კორეა",
  "ჩრდილოეთი მარიანას კუნძულები",
  "ცენტრალური აფრიკა",
  "ცენტრალური აფრიკის რესპუბლიკა",
  "წევრები",
  "წმინდა ელენე",
  "წმინდა ელენეს კუნძული",
  "ხორვატია",
  "ჯერსი",
  "ჯიბუტი",
  "ჰავაი",
  "ჰაიტი",
  "ჰერდი და მაკდონალდის კუნძულები",
  "ჰონდურასი",
  "ჰონკონგი"
];

},{}],458:[function(require,module,exports){
module["exports"] = [
  "საქართველო"
];

},{}],459:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.city = require("./city");
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.city_name = require("./city_name");
address.street_title = require("./street_title");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":452,"./city":453,"./city_name":454,"./city_prefix":455,"./city_suffix":456,"./country":457,"./default_country":458,"./postcode":460,"./secondary_address":461,"./street_address":462,"./street_name":463,"./street_suffix":464,"./street_title":465}],460:[function(require,module,exports){
module["exports"] = [
  "01##"
];

},{}],461:[function(require,module,exports){
module["exports"] = [
  "კორპ. ##",
  "შენობა ###"
];

},{}],462:[function(require,module,exports){
arguments[4][63][0].apply(exports,arguments)
},{"dup":63}],463:[function(require,module,exports){
module["exports"] = [
  "#{street_title} #{street_suffix}"
];

},{}],464:[function(require,module,exports){
module["exports"] = [
  "გამზ.",
  "გამზირი",
  "ქ.",
  "ქუჩა",
  "ჩიხი",
  "ხეივანი"
];

},{}],465:[function(require,module,exports){
module["exports"] = [
  "აბაშიძის",
  "აბესაძის",
  "აბულაძის",
  "აგლაძის",
  "ადლერის",
  "ავიაქიმიის",
  "ავლაბრის",
  "ათარბეგოვის",
  "ათონელის",
  "ალავერდოვის",
  "ალექსიძის",
  "ალილუევის",
  "ალმასიანის",
  "ამაღლების",
  "ამირეჯიბის",
  "ანაგის",
  "ანდრონიკაშვილის",
  "ანთელავას",
  "ანჯაფარიძის",
  "არაგვის",
  "არდონის",
  "არეშიძის",
  "ასათიანის",
  "ასკურავას",
  "ასლანიდის",
  "ატენის",
  "აფხაზი",
  "აღმაშენებლის",
  "ახალშენის",
  "ახვლედიანის",
  "ბააზოვის",
  "ბაბისხევის",
  "ბაბუშკინის",
  "ბაგრატიონის",
  "ბალანჩივაძეების",
  "ბალანჩივაძის",
  "ბალანჩინის",
  "ბალმაშევის",
  "ბარამიძის",
  "ბარნოვის",
  "ბაშალეიშვილის",
  "ბევრეთის",
  "ბელინსკის",
  "ბელოსტოკის",
  "ბენაშვილის",
  "ბეჟანიშვილის",
  "ბერიძის",
  "ბოლქვაძის",
  "ბოცვაძის",
  "ბოჭორიშვილის",
  "ბოჭორიძის",
  "ბუაჩიძის",
  "ბუდაპეშტის",
  "ბურკიაშვილის",
  "ბურძგლას",
  "გაბესკირიას",
  "გაგარინის",
  "გაზაფხულის",
  "გამრეკელის",
  "გამსახურდიას",
  "გარეჯელის",
  "გეგეჭკორის",
  "გედაურის",
  "გელოვანი",
  "გელოვანის",
  "გერცენის",
  "გლდანის",
  "გოგებაშვილის",
  "გოგიბერიძის",
  "გოგოლის",
  "გონაშვილის",
  "გორგასლის",
  "გრანელის",
  "გრიზოდუბოვას",
  "გრინევიცკის",
  "გრომოვას",
  "გრუზინსკის",
  "გუდიაშვილის",
  "გულრიფშის",
  "გულუას",
  "გურამიშვილის",
  "გურგენიძის",
  "დადიანის",
  "დავითაშვილის",
  "დამაკავშირებელი",
  "დარიალის",
  "დედოფლისწყაროს",
  "დეპუტატის",
  "დიდგორის",
  "დიდი",
  "დიდუბის",
  "დიუმას",
  "დიღმის",
  "დიღომში",
  "დოლიძის",
  "დუნდუას",
  "დურმიშიძის",
  "ელიავას",
  "ენგელსის",
  "ენგურის",
  "ეპისკოპოსის",
  "ერისთავი",
  "ერისთავის",
  "ვაზისუბნის",
  "ვაკელის",
  "ვართაგავას",
  "ვატუტინის",
  "ვაჩნაძის",
  "ვაცეკის",
  "ვეკუას",
  "ვეშაპურის",
  "ვირსალაძის",
  "ვოლოდარსკის",
  "ვორონინის",
  "ზაარბრიუკენის",
  "ზაზიაშვილის",
  "ზაზიშვილის",
  "ზაკომოლდინის",
  "ზანდუკელის",
  "ზაქარაიას",
  "ზაქარიაძის",
  "ზახაროვის",
  "ზაჰესის",
  "ზნაურის",
  "ზურაბაშვილის",
  "ზღვის",
  "თაბუკაშვილის",
  "თავაძის",
  "თავისუფლების",
  "თამარაშვილის",
  "თაქთაქიშვილის",
  "თბილელის",
  "თელიას",
  "თორაძის",
  "თოფურიძის",
  "იალბუზის",
  "იამანიძის",
  "იაშვილის",
  "იბერიის",
  "იერუსალიმის",
  "ივანიძის",
  "ივერიელის",
  "იზაშვილის",
  "ილურიძის",
  "იმედაშვილის",
  "იმედაძის",
  "იმედის",
  "ინანიშვილის",
  "ინგოროყვას",
  "ინდუსტრიალიზაციის",
  "ინჟინრის",
  "ინწკირველის",
  "ირბახის",
  "ირემაშვილის",
  "ისაკაძის",
  "ისპასჰანლის",
  "იტალიის",
  "იუნკერთა",
  "კათალიკოსის",
  "კაიროს",
  "კაკაბაძის",
  "კაკაბეთის",
  "კაკლიანის",
  "კალანდაძის",
  "კალიაევის",
  "კალინინის",
  "კამალოვის",
  "კამოს",
  "კაშენის",
  "კახოვკის",
  "კედიას",
  "კელაპტრიშვილის",
  "კერესელიძის",
  "კეცხოველის",
  "კიბალჩიჩის",
  "კიკნაძის",
  "კიროვის",
  "კობარეთის",
  "კოლექტივიზაციის",
  "კოლმეურნეობის",
  "კოლხეთის",
  "კომკავშირის",
  "კომუნისტური",
  "კონსტიტუციის",
  "კოოპერაციის",
  "კოსტავას",
  "კოტეტიშვილის",
  "კოჩეტკოვის",
  "კოჯრის",
  "კრონშტადტის",
  "კროპოტკინის",
  "კრუპსკაიას",
  "კუიბიშევის",
  "კურნატოვსკის",
  "კურტანოვსკის",
  "კუტუზოვის",
  "ლაღიძის",
  "ლელაშვილის",
  "ლენინაშენის",
  "ლენინგრადის",
  "ლენინის",
  "ლენის",
  "ლეონიძის",
  "ლვოვის",
  "ლორთქიფანიძის",
  "ლოტკინის",
  "ლუბლიანის",
  "ლუბოვსკის",
  "ლუნაჩარსკის",
  "ლუქსემბურგის",
  "მაგნიტოგორსკის",
  "მაზნიაშვილის",
  "მაისურაძის",
  "მამარდაშვილის",
  "მამაცაშვილის",
  "მანაგაძის",
  "მანჯგალაძის",
  "მარის",
  "მარუაშვილის",
  "მარქსის",
  "მარჯანის",
  "მატროსოვის",
  "მაჭავარიანი",
  "მახალდიანის",
  "მახარაძის",
  "მებაღიშვილის",
  "მეგობრობის",
  "მელაანის",
  "მერკვილაძის",
  "მესხიას",
  "მესხის",
  "მეტეხის",
  "მეტრეველი",
  "მეჩნიკოვის",
  "მთავარანგელოზის",
  "მიასნიკოვის",
  "მილორავას",
  "მიმინოშვილის",
  "მიროტაძის",
  "მიქატაძის",
  "მიქელაძის",
  "მონტინის",
  "მორეტის",
  "მოსკოვის",
  "მრევლიშვილის",
  "მუშკორის",
  "მუჯირიშვილის",
  "მშვიდობის",
  "მცხეთის",
  "ნადირაძის",
  "ნაკაშიძის",
  "ნარიმანოვის",
  "ნასიძის",
  "ნაფარეულის",
  "ნეკრასოვის",
  "ნიაღვრის",
  "ნინიძის",
  "ნიშნიანიძის",
  "ობოლაძის",
  "ონიანის",
  "ოჟიოს",
  "ორახელაშვილის",
  "ორბელიანის",
  "ორჯონიკიძის",
  "ოქტომბრის",
  "ოცდაექვსი",
  "პავლოვის",
  "პარალელურის",
  "პარიზის",
  "პეკინის",
  "პეროვსკაიას",
  "პეტეფის",
  "პიონერის",
  "პირველი",
  "პისარევის",
  "პლეხანოვის",
  "პრავდის",
  "პროლეტარიატის",
  "ჟელიაბოვის",
  "ჟვანიას",
  "ჟორდანიას",
  "ჟღენტი",
  "ჟღენტის",
  "რადიანის",
  "რამიშვილი",
  "რასკოვას",
  "რენინგერის",
  "რინგის",
  "რიჟინაშვილის",
  "რობაქიძის",
  "რობესპიერის",
  "რუსის",
  "რუხაძის",
  "რჩეულიშვილის",
  "სააკაძის",
  "საბადურის",
  "საბაშვილის",
  "საბურთალოს",
  "საბჭოს",
  "საგურამოს",
  "სამრეკლოს",
  "სამღერეთის",
  "სანაკოევის",
  "სარაჯიშვილის",
  "საჯაიას",
  "სევასტოპოლის",
  "სერგი",
  "სვანიძის",
  "სვერდლოვის",
  "სტახანოვის",
  "სულთნიშნის",
  "სურგულაძის",
  "სხირტლაძის",
  "ტაბიძის",
  "ტატიშვილის",
  "ტელმანის",
  "ტერევერკოს",
  "ტეტელაშვილის",
  "ტოვსტონოგოვის",
  "ტოროშელიძის",
  "ტრაქტორის",
  "ტრიკოტაჟის",
  "ტურბინის",
  "უბილავას",
  "უბინაშვილის",
  "უზნაძის",
  "უკლებას",
  "ულიანოვის",
  "ურიდიას",
  "ფაბრიციუსის",
  "ფაღავას",
  "ფერისცვალების",
  "ფიგნერის",
  "ფიზკულტურის",
  "ფიოლეტოვის",
  "ფიფიების",
  "ფოცხიშვილის",
  "ქართველიშვილის",
  "ქართლელიშვილის",
  "ქინქლაძის",
  "ქიქოძის",
  "ქსოვრელის",
  "ქუთათელაძის",
  "ქუთათელის",
  "ქურდიანის",
  "ღოღობერიძის",
  "ღუდუშაურის",
  "ყავლაშვილის",
  "ყაზბეგის",
  "ყარყარაშვილის",
  "ყიფიანის",
  "ყუშიტაშვილის",
  "შანიძის",
  "შარტავას",
  "შატილოვის",
  "შაუმიანის",
  "შენგელაიას",
  "შერვაშიძის",
  "შეროზიას",
  "შირშოვის",
  "შმიდტის",
  "შრომის",
  "შუშინის",
  "შჩორსის",
  "ჩალაუბნის",
  "ჩანტლაძის",
  "ჩაპაევის",
  "ჩაჩავას",
  "ჩელუსკინელების",
  "ჩერნიახოვსკის",
  "ჩერქეზიშვილი",
  "ჩერქეზიშვილის",
  "ჩვიდმეტი",
  "ჩიტაიას",
  "ჩიტაძის",
  "ჩიქვანაიას",
  "ჩიქობავას",
  "ჩიხლაძის",
  "ჩოდრიშვილის",
  "ჩოლოყაშვილის",
  "ჩუღურეთის",
  "ცაბაძის",
  "ცაგარელის",
  "ცეტკინის",
  "ცინცაძის",
  "ცისკარიშვილის",
  "ცურტაველის",
  "ცქიტიშვილის",
  "ცხაკაიას",
  "ძმობის",
  "ძნელაძის",
  "წერეთლის",
  "წითელი",
  "წითელწყაროს",
  "წინამძღვრიშვილის",
  "წულაძის",
  "წულუკიძის",
  "ჭაბუკიანის",
  "ჭავჭავაძის",
  "ჭანტურიას",
  "ჭოველიძის",
  "ჭონქაძის",
  "ჭყონდიდელის",
  "ხანძთელის",
  "ხვამლის",
  "ხვინგიას",
  "ხვიჩიას",
  "ხიმშიაშვილის",
  "ხმელნიცკის",
  "ხორნაბუჯის",
  "ხრამჰესის",
  "ხუციშვილის",
  "ჯავახიშვილის",
  "ჯაფარიძის",
  "ჯიბლაძის",
  "ჯორჯიაშვილის"
];

},{}],466:[function(require,module,exports){
module["exports"] = [
  "(+995 32) 2-##-##-##",
  "032-2-##-##-##",
  "032-2-######",
  "032-2-###-###",
  "032 2 ## ## ##",
  "032 2 ######",
  "2 ## ## ##",
  "2######",
  "2 ### ###"
];

},{}],467:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"./formats":466,"dup":67}],468:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.prefix = require("./prefix");
company.suffix = require("./suffix");
company.name = require("./name");

},{"./name":469,"./prefix":470,"./suffix":471}],469:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{Name.first_name}",
  "#{prefix} #{Name.last_name}",
  "#{prefix} #{Name.last_name} #{suffix}",
  "#{prefix} #{Name.first_name} #{suffix}",
  "#{prefix} #{Name.last_name}-#{Name.last_name}"
];

},{}],470:[function(require,module,exports){
module["exports"] = [
  "შპს",
  "სს",
  "ააიპ",
  "სსიპ"
];

},{}],471:[function(require,module,exports){
module["exports"] = [
  "ჯგუფი",
  "და კომპანია",
  "სტუდია",
  "გრუპი"
];

},{}],472:[function(require,module,exports){
var ge = {};
module['exports'] = ge;
ge.title = "Georgian";
ge.separator = " და ";
ge.name = require("./name");
ge.address = require("./address");
ge.internet = require("./internet");
ge.company = require("./company");
ge.phone_number = require("./phone_number");
ge.cell_phone = require("./cell_phone");

},{"./address":459,"./cell_phone":467,"./company":468,"./internet":475,"./name":477,"./phone_number":483}],473:[function(require,module,exports){
module["exports"] = [
  "ge",
  "com",
  "net",
  "org",
  "com.ge",
  "org.ge"
];

},{}],474:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.com",
  "posta.ge"
];

},{}],475:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"./domain_suffix":473,"./free_email":474,"dup":75}],476:[function(require,module,exports){
module["exports"] = [
  "აგული",
  "აგუნა",
  "ადოლა",
  "ავთანდილ",
  "ავთო",
  "აკაკი",
  "აკო",
  "ალეკო",
  "ალექსანდრე",
  "ალექსი",
  "ალიო",
  "ამირან",
  "ანა",
  "ანანო",
  "ანზორ",
  "ანნა",
  "ანუკა",
  "ანუკი",
  "არჩილ",
  "ასკილა",
  "ასლანაზ",
  "აჩიკო",
  "ბადრი",
  "ბაია",
  "ბარბარე",
  "ბაქარ",
  "ბაჩა",
  "ბაჩანა",
  "ბაჭუა",
  "ბაჭუკი",
  "ბახვა",
  "ბელა",
  "ბერა",
  "ბერდია",
  "ბესიკ",
  "ბესიკ",
  "ბესო",
  "ბექა",
  "ბიძინა",
  "ბიჭიკო",
  "ბოჩია",
  "ბოცო",
  "ბროლა",
  "ბუბუ",
  "ბუდუ",
  "ბუხუტი",
  "გაგა",
  "გაგი",
  "გახა",
  "გეგა",
  "გეგი",
  "გედია",
  "გელა",
  "გენადი",
  "გვადი",
  "გვანცა",
  "გვანჯი",
  "გვიტია",
  "გვრიტა",
  "გია",
  "გიგა",
  "გიგი",
  "გიგილო",
  "გიგლა",
  "გიგოლი",
  "გივი",
  "გივიკო",
  "გიორგი",
  "გოგი",
  "გოგიტა",
  "გოგიჩა",
  "გოგოთურ",
  "გოგოლა",
  "გოდერძი",
  "გოლა",
  "გოჩა",
  "გრიგოლ",
  "გუგა",
  "გუგუ",
  "გუგულა",
  "გუგული",
  "გუგუნა",
  "გუკა",
  "გულარისა",
  "გულვარდი",
  "გულვარდისა",
  "გულთამზე",
  "გულია",
  "გულიკო",
  "გულისა",
  "გულნარა",
  "გურამ",
  "დავით",
  "დალი",
  "დარეჯან",
  "დიანა",
  "დიმიტრი",
  "დოდო",
  "დუტუ",
  "ეთერ",
  "ეთო",
  "ეკა",
  "ეკატერინე",
  "ელგუჯა",
  "ელენა",
  "ელენე",
  "ელზა",
  "ელიკო",
  "ელისო",
  "ემზარ",
  "ეშხა",
  "ვალენტინა",
  "ვალერი",
  "ვანო",
  "ვაჟა",
  "ვაჟა",
  "ვარდო",
  "ვარსკვლავისა",
  "ვასიკო",
  "ვასილ",
  "ვატო",
  "ვახო",
  "ვახტანგ",
  "ვენერა",
  "ვერა",
  "ვერიკო",
  "ზაზა",
  "ზაირა",
  "ზაურ",
  "ზეზვა",
  "ზვიად",
  "ზინა",
  "ზოია",
  "ზუკა",
  "ზურა",
  "ზურაბ",
  "ზურია",
  "ზურიკო",
  "თაზო",
  "თათა",
  "თათია",
  "თათული",
  "თაია",
  "თაკო",
  "თალიკო",
  "თამაზ",
  "თამარ",
  "თამარა",
  "თამთა",
  "თამთიკე",
  "თამი",
  "თამილა",
  "თამრიკო",
  "თამრო",
  "თამუნა",
  "თამჩო",
  "თანანა",
  "თანდილა",
  "თაყა",
  "თეა",
  "თებრონე",
  "თეიმურაზ",
  "თემურ",
  "თენგიზ",
  "თენგო",
  "თეონა",
  "თიკა",
  "თიკო",
  "თიკუნა",
  "თინა",
  "თინათინ",
  "თინიკო",
  "თმაგიშერა",
  "თორნიკე",
  "თუთა",
  "თუთია",
  "ია",
  "იათამზე",
  "იამზე",
  "ივანე",
  "ივერი",
  "ივქირიონ",
  "იზოლდა",
  "ილია",
  "ილიკო",
  "იმედა",
  "ინგა",
  "იოსებ",
  "ირაკლი",
  "ირინა",
  "ირინე",
  "ირინკა",
  "ირმა",
  "იური",
  "კაკო",
  "კალე",
  "კატო",
  "კახა",
  "კახაბერ",
  "კეკელა",
  "კესანე",
  "კესო",
  "კვირია",
  "კიტა",
  "კობა",
  "კოკა",
  "კონსტანტინე",
  "კოსტა",
  "კოტე",
  "კუკური",
  "ლადო",
  "ლალი",
  "ლამაზა",
  "ლამარა",
  "ლამზირა",
  "ლაშა",
  "ლევან",
  "ლეილა",
  "ლელა",
  "ლენა",
  "ლერწამისა",
  "ლექსო",
  "ლია",
  "ლიანა",
  "ლიზა",
  "ლიზიკო",
  "ლილე",
  "ლილი",
  "ლილიკო",
  "ლომია",
  "ლუიზა",
  "მაგული",
  "მადონა",
  "მათიკო",
  "მაია",
  "მაიკო",
  "მაისა",
  "მაკა",
  "მაკო",
  "მაკუნა",
  "მალხაზ",
  "მამამზე",
  "მამია",
  "მამისა",
  "მამისთვალი",
  "მამისიმედი",
  "მამუკა",
  "მამულა",
  "მანანა",
  "მანჩო",
  "მარადი",
  "მარი",
  "მარია",
  "მარიამი",
  "მარიკა",
  "მარინა",
  "მარინე",
  "მარიტა",
  "მაყვალა",
  "მაყვალა",
  "მაშიკო",
  "მაშო",
  "მაცაცო",
  "მგელია",
  "მგელიკა",
  "მედეა",
  "მეკაშო",
  "მელანო",
  "მერაბ",
  "მერი",
  "მეტია",
  "მზაღო",
  "მზევინარ",
  "მზეთამზე",
  "მზეთვალა",
  "მზეონა",
  "მზექალა",
  "მზეხა",
  "მზეხათუნი",
  "მზია",
  "მზირა",
  "მზისადარ",
  "მზისთანადარი",
  "მზიულა",
  "მთვარისა",
  "მინდია",
  "მიშა",
  "მიშიკო",
  "მიხეილ",
  "მნათობი",
  "მნათობისა",
  "მოგელი",
  "მონავარდისა",
  "მურმან",
  "მუხრან",
  "ნაზი",
  "ნაზიკო",
  "ნათელა",
  "ნათია",
  "ნაირა",
  "ნანა",
  "ნანი",
  "ნანიკო",
  "ნანუკა",
  "ნანული",
  "ნარგიზი",
  "ნასყიდა",
  "ნატალია",
  "ნატო",
  "ნელი",
  "ნენე",
  "ნესტან",
  "ნია",
  "ნიაკო",
  "ნიკა",
  "ნიკოლოზ",
  "ნინა",
  "ნინაკა",
  "ნინი",
  "ნინიკო",
  "ნინო",
  "ნინუკა",
  "ნინუცა",
  "ნოდარ",
  "ნოდო",
  "ნონა",
  "ნორა",
  "ნუგზარ",
  "ნუგო",
  "ნუკა",
  "ნუკი",
  "ნუკრი",
  "ნუნუ",
  "ნუნუ",
  "ნუნუკა",
  "ნუცა",
  "ნუცი",
  "ოთარ",
  "ოთია",
  "ოთო",
  "ომარ",
  "ორბელ",
  "ოტია",
  "ოქროპირ",
  "პაატა",
  "პაპუნა",
  "პატარკაცი",
  "პატარქალი",
  "პეპელა",
  "პირვარდისა",
  "პირიმზე",
  "ჟამიერა",
  "ჟამიტა",
  "ჟამუტა",
  "ჟუჟუნა",
  "რამაზ",
  "რევაზ",
  "რეზი",
  "რეზო",
  "როზა",
  "რომან",
  "რუსკა",
  "რუსუდან",
  "საბა",
  "სალი",
  "სალომე",
  "სანათა",
  "სანდრო",
  "სერგო",
  "სესია",
  "სეხნია",
  "სვეტლანა",
  "სიხარულა",
  "სოსო",
  "სოფიკო",
  "სოფიო",
  "სოფო",
  "სულა",
  "სულიკო",
  "ტარიელ",
  "ტასიკო",
  "ტასო",
  "ტატიანა",
  "ტატო",
  "ტეტია",
  "ტურია",
  "უმანკო",
  "უტა",
  "უჩა",
  "ფაქიზო",
  "ფაცია",
  "ფეფელა",
  "ფეფენა",
  "ფეფიკო",
  "ფეფო",
  "ფოსო",
  "ფოფო",
  "ქაბატო",
  "ქავთარი",
  "ქალია",
  "ქართლოს",
  "ქეთათო",
  "ქეთევან",
  "ქეთი",
  "ქეთინო",
  "ქეთო",
  "ქველი",
  "ქიტესა",
  "ქიშვარდი",
  "ქობული",
  "ქრისტესია",
  "ქტისტეფორე",
  "ქურციკა",
  "ღარიბა",
  "ღვთისავარი",
  "ღვთისია",
  "ღვთისო",
  "ღვინია",
  "ღუღუნა",
  "ყაითამზა",
  "ყაყიტა",
  "ყვარყვარე",
  "ყიასა",
  "შაბური",
  "შაკო",
  "შალვა",
  "შალიკო",
  "შანშე",
  "შარია",
  "შაქარა",
  "შაქრო",
  "შოთა",
  "შორენა",
  "შოშია",
  "შუქია",
  "ჩიორა",
  "ჩიტო",
  "ჩიტო",
  "ჩოყოლა",
  "ცაგო",
  "ცაგული",
  "ცანგალა",
  "ცარო",
  "ცაცა",
  "ცაცო",
  "ციალა",
  "ციკო",
  "ცინარა",
  "ცირა",
  "ცისანა",
  "ცისია",
  "ცისკარა",
  "ცისკარი",
  "ცისმარა",
  "ცისმარი",
  "ციური",
  "ციცი",
  "ციცია",
  "ციცინო",
  "ცოტნე",
  "ცოქალა",
  "ცუცა",
  "ცხვარი",
  "ძაბული",
  "ძამისა",
  "ძაღინა",
  "ძიძია",
  "წათე",
  "წყალობა",
  "ჭაბუკა",
  "ჭიაბერ",
  "ჭიკჭიკა",
  "ჭიჭია",
  "ჭიჭიკო",
  "ჭოლა",
  "ხათუნა",
  "ხარება",
  "ხატია",
  "ხახულა",
  "ხახუტა",
  "ხეჩუა",
  "ხვიჩა",
  "ხიზანა",
  "ხირხელა",
  "ხობელასი",
  "ხოხია",
  "ხოხიტა",
  "ხუტა",
  "ხუცია",
  "ჯაბა",
  "ჯავახი",
  "ჯარჯი",
  "ჯემალ",
  "ჯონდო",
  "ჯოტო",
  "ჯუბი",
  "ჯულიეტა",
  "ჯუმბერ",
  "ჰამლეტ"
];

},{}],477:[function(require,module,exports){
arguments[4][434][0].apply(exports,arguments)
},{"./first_name":476,"./last_name":478,"./name":479,"./prefix":480,"./title":481,"dup":434}],478:[function(require,module,exports){
module["exports"] = [
  "აბაზაძე",
  "აბაშიძე",
  "აბრამაშვილი",
  "აბუსერიძე",
  "აბშილავა",
  "ავაზნელი",
  "ავალიშვილი",
  "ამილახვარი",
  "ანთაძე",
  "ასლამაზიშვილი",
  "ასპანიძე",
  "აშკარელი",
  "ახალბედაშვილი",
  "ახალკაცი",
  "ახვლედიანი",
  "ბარათაშვილი",
  "ბარდაველიძე",
  "ბახტაძე",
  "ბედიანიძე",
  "ბერიძე",
  "ბერუაშვილი",
  "ბეჟანიშვილი",
  "ბოგველიშვილი",
  "ბოტკოველი",
  "გაბრიჩიძე",
  "გაგნიძე",
  "გამრეკელი",
  "გელაშვილი",
  "გზირიშვილი",
  "გიგაური",
  "გურამიშვილი",
  "გურგენიძე",
  "დადიანი",
  "დავითიშვილი",
  "დათუაშვილი",
  "დარბაისელი",
  "დეკანოიძე",
  "დვალი",
  "დოლაბერიძე",
  "ედიშერაშვილი",
  "ელიზბარაშვილი",
  "ელიოზაშვილი",
  "ერისთავი",
  "ვარამაშვილი",
  "ვარდიაშვილი",
  "ვაჩნაძე",
  "ვარდანიძე",
  "ველიაშვილი",
  "ველიჯანაშვილი",
  "ზარანდია",
  "ზარიძე",
  "ზედგინიძე",
  "ზუბიაშვილი",
  "თაბაგარი",
  "თავდგირიძე",
  "თათარაშვილი",
  "თამაზაშვილი",
  "თამარაშვილი",
  "თაქთაქიშვილი",
  "თაყაიშვილი",
  "თბილელი",
  "თუხარელი",
  "იაშვილი",
  "იგითხანიშვილი",
  "ინასარიძე",
  "იშხნელი",
  "კანდელაკი",
  "კაცია",
  "კერესელიძე",
  "კვირიკაშვილი",
  "კიკნაძე",
  "კლდიაშვილი",
  "კოვზაძე",
  "კოპაძე",
  "კოპტონაშვილი",
  "კოშკელაშვილი",
  "ლაბაძე",
  "ლეკიშვილი",
  "ლიქოკელი",
  "ლოლაძე",
  "ლურსმანაშვილი",
  "მაისურაძე",
  "მარტოლეკი",
  "მაღალაძე",
  "მახარაშვილი",
  "მგალობლიშვილი",
  "მეგრელიშვილი",
  "მელაშვილი",
  "მელიქიძე",
  "მერაბიშვილი",
  "მეფარიშვილი",
  "მუჯირი",
  "მჭედლიძე",
  "მხეიძე",
  "ნათაძე",
  "ნაჭყებია",
  "ნოზაძე",
  "ოდიშვილი",
  "ონოფრიშვილი",
  "პარეხელაშვილი",
  "პეტრიაშვილი",
  "სააკაძე",
  "სააკაშვილი",
  "საგინაშვილი",
  "სადუნიშვილი",
  "საძაგლიშვილი",
  "სებისკვერიძე",
  "სეთური",
  "სუთიაშვილი",
  "სულაშვილი",
  "ტაბაღუა",
  "ტყეშელაშვილი",
  "ულუმბელაშვილი",
  "უნდილაძე",
  "ქავთარაძე",
  "ქართველიშვილი",
  "ყაზბეგი",
  "ყაუხჩიშვილი",
  "შავლაშვილი",
  "შალიკაშვილი",
  "შონია",
  "ჩიბუხაშვილი",
  "ჩიხრაძე",
  "ჩიქოვანი",
  "ჩუბინიძე",
  "ჩოლოყაშვილი",
  "ჩოხელი",
  "ჩხვიმიანი",
  "ცალუღელაშვილი",
  "ცაძიკიძე",
  "ციციშვილი",
  "ციხელაშვილი",
  "ციხისთავი",
  "ცხოვრებაძე",
  "ცხომარია",
  "წამალაიძე",
  "წერეთელი",
  "წიკლაური",
  "წიფურია",
  "ჭაბუკაშვილი",
  "ჭავჭავაძე",
  "ჭანტურია",
  "ჭარელიძე",
  "ჭიორელი",
  "ჭუმბურიძე",
  "ხაბაზი",
  "ხარაძე",
  "ხარატიშვილი",
  "ხარატასშვილი",
  "ხარისჭირაშვილი",
  "ხარხელაური",
  "ხაშმელაშვილი",
  "ხეთაგური",
  "ხიზამბარელი",
  "ხიზანიშვილი",
  "ხიმშიაშვილი",
  "ხოსრუაშვილი",
  "ხოჯივანიშვილი",
  "ხუციშვილი",
  "ჯაბადარი",
  "ჯავახი",
  "ჯავახიშვილი",
  "ჯანელიძე",
  "ჯაფარიძე",
  "ჯაყელი",
  "ჯაჯანიძე",
  "ჯვარელია",
  "ჯინიუზაშვილი",
  "ჯუღაშვილი"
];

},{}],479:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}"
];

},{}],480:[function(require,module,exports){
module["exports"] = [
  "ბ-ნი",
  "ბატონი",
  "ქ-ნი",
  "ქალბატონი"
];

},{}],481:[function(require,module,exports){
module["exports"] = {
  "descriptor": [
    "გენერალური",
    "მთავარი",
    "სტაჟიორ",
    "უმცროსი",
    "ყოფილი",
    "წამყვანი"
  ],
  "level": [
    "აღრიცხვების",
    "ბრენდინგის",
    "ბრენიდს",
    "ბუღალტერიის",
    "განყოფილების",
    "გაყიდვების",
    "გუნდის",
    "დახმარების",
    "დიზაინის",
    "თავდაცვის",
    "ინფორმაციის",
    "კვლევების",
    "კომუნიკაციების",
    "მარკეტინგის",
    "ოპერაციათა",
    "ოპტიმიზაციების",
    "პიარ",
    "პროგრამის",
    "საქმეთა",
    "ტაქტიკური",
    "უსაფრთხოების",
    "ფინანსთა",
    "ქსელის",
    "ხარისხის",
    "ჯგუფის"
  ],
  "job": [
    "აგენტი",
    "ადვოკატი",
    "ადმინისტრატორი",
    "არქიტექტორი",
    "ასისტენტი",
    "აღმასრულებელი დირექტორი",
    "დეველოპერი",
    "დეკანი",
    "დიზაინერი",
    "დირექტორი",
    "ელექტრიკოსი",
    "ექსპერტი",
    "ინჟინერი",
    "იურისტი",
    "კონსტრუქტორი",
    "კონსულტანტი",
    "კოორდინატორი",
    "ლექტორი",
    "მასაჟისტი",
    "მემანქანე",
    "მენეჯერი",
    "მძღოლი",
    "მწვრთნელი",
    "ოპერატორი",
    "ოფიცერი",
    "პედაგოგი",
    "პოლიციელი",
    "პროგრამისტი",
    "პროდიუსერი",
    "პრორექტორი",
    "ჟურნალისტი",
    "რექტორი",
    "სპეციალისტი",
    "სტრატეგისტი",
    "ტექნიკოსი",
    "ფოტოგრაფი",
    "წარმომადგენელი"
  ]
};

},{}],482:[function(require,module,exports){
module["exports"] = [
  "5##-###-###",
  "5########",
  "5## ## ## ##",
  "5## ######",
  "5## ### ###",
  "995 5##-###-###",
  "995 5########",
  "995 5## ## ## ##",
  "995 5## ######",
  "995 5## ### ###",
  "+995 5##-###-###",
  "+995 5########",
  "+995 5## ## ## ##",
  "+995 5## ######",
  "+995 5## ### ###",
  "(+995) 5##-###-###",
  "(+995) 5########",
  "(+995) 5## ## ## ##",
  "(+995) 5## ######",
  "(+995) 5## ### ###"
];

},{}],483:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":482,"dup":85}],484:[function(require,module,exports){
arguments[4][452][0].apply(exports,arguments)
},{"dup":452}],485:[function(require,module,exports){
module["exports"] = [
  "#{city_prefix} #{Name.first_name} #{city_suffix}",
  "#{city_prefix} #{Name.first_name}",
  "#{Name.first_name} #{city_suffix}",
  "#{Name.last_name} #{city_suffix}"
];

},{}],486:[function(require,module,exports){
module["exports"] = [
  "San",
  "Borgo",
  "Sesto",
  "Quarto",
  "Settimo"
];

},{}],487:[function(require,module,exports){
module["exports"] = [
  "a mare",
  "lido",
  "ligure",
  "del friuli",
  "salentino",
  "calabro",
  "veneto",
  "nell'emilia",
  "umbro",
  "laziale",
  "terme",
  "sardo"
];

},{}],488:[function(require,module,exports){
module["exports"] = [
  "Afghanistan",
  "Albania",
  "Algeria",
  "American Samoa",
  "Andorra",
  "Angola",
  "Anguilla",
  "Antartide (territori a sud del 60° parallelo)",
  "Antigua e Barbuda",
  "Argentina",
  "Armenia",
  "Aruba",
  "Australia",
  "Austria",
  "Azerbaijan",
  "Bahamas",
  "Bahrain",
  "Bangladesh",
  "Barbados",
  "Bielorussia",
  "Belgio",
  "Belize",
  "Benin",
  "Bermuda",
  "Bhutan",
  "Bolivia",
  "Bosnia e Herzegovina",
  "Botswana",
  "Bouvet Island (Bouvetoya)",
  "Brasile",
  "Territorio dell'arcipelago indiano",
  "Isole Vergini Britanniche",
  "Brunei Darussalam",
  "Bulgaria",
  "Burkina Faso",
  "Burundi",
  "Cambogia",
  "Cameroon",
  "Canada",
  "Capo Verde",
  "Isole Cayman",
  "Repubblica Centrale Africana",
  "Chad",
  "Cile",
  "Cina",
  "Isola di Pasqua",
  "Isola di Cocos (Keeling)",
  "Colombia",
  "Comoros",
  "Congo",
  "Isole Cook",
  "Costa Rica",
  "Costa d'Avorio",
  "Croazia",
  "Cuba",
  "Cipro",
  "Repubblica Ceca",
  "Danimarca",
  "Gibuti",
  "Repubblica Dominicana",
  "Equador",
  "Egitto",
  "El Salvador",
  "Guinea Equatoriale",
  "Eritrea",
  "Estonia",
  "Etiopia",
  "Isole Faroe",
  "Isole Falkland (Malvinas)",
  "Fiji",
  "Finlandia",
  "Francia",
  "Guyana Francese",
  "Polinesia Francese",
  "Territori Francesi del sud",
  "Gabon",
  "Gambia",
  "Georgia",
  "Germania",
  "Ghana",
  "Gibilterra",
  "Grecia",
  "Groenlandia",
  "Grenada",
  "Guadalupa",
  "Guam",
  "Guatemala",
  "Guernsey",
  "Guinea",
  "Guinea-Bissau",
  "Guyana",
  "Haiti",
  "Heard Island and McDonald Islands",
  "Città del Vaticano",
  "Honduras",
  "Hong Kong",
  "Ungheria",
  "Islanda",
  "India",
  "Indonesia",
  "Iran",
  "Iraq",
  "Irlanda",
  "Isola di Man",
  "Israele",
  "Italia",
  "Giamaica",
  "Giappone",
  "Jersey",
  "Giordania",
  "Kazakhstan",
  "Kenya",
  "Kiribati",
  "Korea",
  "Kuwait",
  "Republicca Kirgiza",
  "Repubblica del Laos",
  "Latvia",
  "Libano",
  "Lesotho",
  "Liberia",
  "Libyan Arab Jamahiriya",
  "Liechtenstein",
  "Lituania",
  "Lussemburgo",
  "Macao",
  "Macedonia",
  "Madagascar",
  "Malawi",
  "Malesia",
  "Maldive",
  "Mali",
  "Malta",
  "Isole Marshall",
  "Martinica",
  "Mauritania",
  "Mauritius",
  "Mayotte",
  "Messico",
  "Micronesia",
  "Moldova",
  "Principato di Monaco",
  "Mongolia",
  "Montenegro",
  "Montserrat",
  "Marocco",
  "Mozambico",
  "Myanmar",
  "Namibia",
  "Nauru",
  "Nepal",
  "Antille Olandesi",
  "Olanda",
  "Nuova Caledonia",
  "Nuova Zelanda",
  "Nicaragua",
  "Niger",
  "Nigeria",
  "Niue",
  "Isole Norfolk",
  "Northern Mariana Islands",
  "Norvegia",
  "Oman",
  "Pakistan",
  "Palau",
  "Palestina",
  "Panama",
  "Papua Nuova Guinea",
  "Paraguay",
  "Peru",
  "Filippine",
  "Pitcairn Islands",
  "Polonia",
  "Portogallo",
  "Porto Rico",
  "Qatar",
  "Reunion",
  "Romania",
  "Russia",
  "Rwanda",
  "San Bartolomeo",
  "Sant'Elena",
  "Saint Kitts and Nevis",
  "Saint Lucia",
  "Saint Martin",
  "Saint Pierre and Miquelon",
  "Saint Vincent and the Grenadines",
  "Samoa",
  "San Marino",
  "Sao Tome and Principe",
  "Arabia Saudita",
  "Senegal",
  "Serbia",
  "Seychelles",
  "Sierra Leone",
  "Singapore",
  "Slovenia",
  "Isole Solomon",
  "Somalia",
  "Sud Africa",
  "Georgia del sud e South Sandwich Islands",
  "Spagna",
  "Sri Lanka",
  "Sudan",
  "Suriname",
  "Svalbard & Jan Mayen Islands",
  "Swaziland",
  "Svezia",
  "Svizzera",
  "Siria",
  "Taiwan",
  "Tajikistan",
  "Tanzania",
  "Tailandia",
  "Timor-Leste",
  "Togo",
  "Tokelau",
  "Tonga",
  "Trinidad e Tobago",
  "Tunisia",
  "Turchia",
  "Turkmenistan",
  "Isole di Turks and Caicos",
  "Tuvalu",
  "Uganda",
  "Ucraina",
  "Emirati Arabi Uniti",
  "Regno Unito",
  "Stati Uniti d'America",
  "United States Minor Outlying Islands",
  "Isole Vergini Statunitensi",
  "Uruguay",
  "Uzbekistan",
  "Vanuatu",
  "Venezuela",
  "Vietnam",
  "Wallis and Futuna",
  "Western Sahara",
  "Yemen",
  "Zambia",
  "Zimbabwe"
];

},{}],489:[function(require,module,exports){
module["exports"] = [
  "Italia"
];

},{}],490:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":484,"./city":485,"./city_prefix":486,"./city_suffix":487,"./country":488,"./default_country":489,"./postcode":491,"./secondary_address":492,"./state":493,"./state_abbr":494,"./street_address":495,"./street_name":496,"./street_suffix":497}],491:[function(require,module,exports){
arguments[4][320][0].apply(exports,arguments)
},{"dup":320}],492:[function(require,module,exports){
module["exports"] = [
  "Appartamento ##",
  "Piano #"
];

},{}],493:[function(require,module,exports){
module["exports"] = [
  "Agrigento",
  "Alessandria",
  "Ancona",
  "Aosta",
  "Arezzo",
  "Ascoli Piceno",
  "Asti",
  "Avellino",
  "Bari",
  "Barletta-Andria-Trani",
  "Belluno",
  "Benevento",
  "Bergamo",
  "Biella",
  "Bologna",
  "Bolzano",
  "Brescia",
  "Brindisi",
  "Cagliari",
  "Caltanissetta",
  "Campobasso",
  "Carbonia-Iglesias",
  "Caserta",
  "Catania",
  "Catanzaro",
  "Chieti",
  "Como",
  "Cosenza",
  "Cremona",
  "Crotone",
  "Cuneo",
  "Enna",
  "Fermo",
  "Ferrara",
  "Firenze",
  "Foggia",
  "Forlì-Cesena",
  "Frosinone",
  "Genova",
  "Gorizia",
  "Grosseto",
  "Imperia",
  "Isernia",
  "La Spezia",
  "L'Aquila",
  "Latina",
  "Lecce",
  "Lecco",
  "Livorno",
  "Lodi",
  "Lucca",
  "Macerata",
  "Mantova",
  "Massa-Carrara",
  "Matera",
  "Messina",
  "Milano",
  "Modena",
  "Monza e della Brianza",
  "Napoli",
  "Novara",
  "Nuoro",
  "Olbia-Tempio",
  "Oristano",
  "Padova",
  "Palermo",
  "Parma",
  "Pavia",
  "Perugia",
  "Pesaro e Urbino",
  "Pescara",
  "Piacenza",
  "Pisa",
  "Pistoia",
  "Pordenone",
  "Potenza",
  "Prato",
  "Ragusa",
  "Ravenna",
  "Reggio Calabria",
  "Reggio Emilia",
  "Rieti",
  "Rimini",
  "Roma",
  "Rovigo",
  "Salerno",
  "Medio Campidano",
  "Sassari",
  "Savona",
  "Siena",
  "Siracusa",
  "Sondrio",
  "Taranto",
  "Teramo",
  "Terni",
  "Torino",
  "Ogliastra",
  "Trapani",
  "Trento",
  "Treviso",
  "Trieste",
  "Udine",
  "Varese",
  "Venezia",
  "Verbano-Cusio-Ossola",
  "Vercelli",
  "Verona",
  "Vibo Valentia",
  "Vicenza",
  "Viterbo"
];

},{}],494:[function(require,module,exports){
module["exports"] = [
  "AG",
  "AL",
  "AN",
  "AO",
  "AR",
  "AP",
  "AT",
  "AV",
  "BA",
  "BT",
  "BL",
  "BN",
  "BG",
  "BI",
  "BO",
  "BZ",
  "BS",
  "BR",
  "CA",
  "CL",
  "CB",
  "CI",
  "CE",
  "CT",
  "CZ",
  "CH",
  "CO",
  "CS",
  "CR",
  "KR",
  "CN",
  "EN",
  "FM",
  "FE",
  "FI",
  "FG",
  "FC",
  "FR",
  "GE",
  "GO",
  "GR",
  "IM",
  "IS",
  "SP",
  "AQ",
  "LT",
  "LE",
  "LC",
  "LI",
  "LO",
  "LU",
  "MC",
  "MN",
  "MS",
  "MT",
  "ME",
  "MI",
  "MO",
  "MB",
  "NA",
  "NO",
  "NU",
  "OT",
  "OR",
  "PD",
  "PA",
  "PR",
  "PV",
  "PG",
  "PU",
  "PE",
  "PC",
  "PI",
  "PT",
  "PN",
  "PZ",
  "PO",
  "RG",
  "RA",
  "RC",
  "RE",
  "RI",
  "RN",
  "RM",
  "RO",
  "SA",
  "VS",
  "SS",
  "SV",
  "SI",
  "SR",
  "SO",
  "TA",
  "TE",
  "TR",
  "TO",
  "OG",
  "TP",
  "TN",
  "TV",
  "TS",
  "UD",
  "VA",
  "VE",
  "VB",
  "VC",
  "VR",
  "VV",
  "VI",
  "VT"
];

},{}],495:[function(require,module,exports){
module["exports"] = [
  "#{street_name} #{building_number}",
  "#{street_name} #{building_number}, #{secondary_address}"
];

},{}],496:[function(require,module,exports){
module["exports"] = [
  "#{street_suffix} #{Name.first_name}",
  "#{street_suffix} #{Name.last_name}"
];

},{}],497:[function(require,module,exports){
module["exports"] = [
  "Piazza",
  "Strada",
  "Via",
  "Borgo",
  "Contrada",
  "Rotonda",
  "Incrocio"
];

},{}],498:[function(require,module,exports){
module["exports"] = [
  "24 ore",
  "24/7",
  "terza generazione",
  "quarta generazione",
  "quinta generazione",
  "sesta generazione",
  "asimmetrica",
  "asincrona",
  "background",
  "bi-direzionale",
  "biforcata",
  "bottom-line",
  "coerente",
  "coesiva",
  "composita",
  "sensibile al contesto",
  "basta sul contesto",
  "basata sul contenuto",
  "dedicata",
  "didattica",
  "direzionale",
  "discreta",
  "dinamica",
  "eco-centrica",
  "esecutiva",
  "esplicita",
  "full-range",
  "globale",
  "euristica",
  "alto livello",
  "olistica",
  "omogenea",
  "ibrida",
  "impattante",
  "incrementale",
  "intangibile",
  "interattiva",
  "intermediaria",
  "locale",
  "logistica",
  "massimizzata",
  "metodica",
  "mission-critical",
  "mobile",
  "modulare",
  "motivazionale",
  "multimedia",
  "multi-tasking",
  "nazionale",
  "neutrale",
  "nextgeneration",
  "non-volatile",
  "object-oriented",
  "ottima",
  "ottimizzante",
  "radicale",
  "real-time",
  "reciproca",
  "regionale",
  "responsiva",
  "scalabile",
  "secondaria",
  "stabile",
  "statica",
  "sistematica",
  "sistemica",
  "tangibile",
  "terziaria",
  "uniforme",
  "valore aggiunto"
];

},{}],499:[function(require,module,exports){
module["exports"] = [
  "valore aggiunto",
  "verticalizzate",
  "proattive",
  "forti",
  "rivoluzionari",
  "scalabili",
  "innovativi",
  "intuitivi",
  "strategici",
  "e-business",
  "mission-critical",
  "24/7",
  "globali",
  "B2B",
  "B2C",
  "granulari",
  "virtuali",
  "virali",
  "dinamiche",
  "magnetiche",
  "web",
  "interattive",
  "sexy",
  "back-end",
  "real-time",
  "efficienti",
  "front-end",
  "distributivi",
  "estensibili",
  "mondiali",
  "open-source",
  "cross-platform",
  "sinergiche",
  "out-of-the-box",
  "enterprise",
  "integrate",
  "di impatto",
  "wireless",
  "trasparenti",
  "next-generation",
  "cutting-edge",
  "visionari",
  "plug-and-play",
  "collaborative",
  "olistiche",
  "ricche"
];

},{}],500:[function(require,module,exports){
module["exports"] = [
  "partnerships",
  "comunità",
  "ROI",
  "soluzioni",
  "e-services",
  "nicchie",
  "tecnologie",
  "contenuti",
  "supply-chains",
  "convergenze",
  "relazioni",
  "architetture",
  "interfacce",
  "mercati",
  "e-commerce",
  "sistemi",
  "modelli",
  "schemi",
  "reti",
  "applicazioni",
  "metriche",
  "e-business",
  "funzionalità",
  "esperienze",
  "webservices",
  "metodologie"
];

},{}],501:[function(require,module,exports){
module["exports"] = [
  "implementate",
  "utilizzo",
  "integrate",
  "ottimali",
  "evolutive",
  "abilitate",
  "reinventate",
  "aggregate",
  "migliorate",
  "incentivate",
  "monetizzate",
  "sinergizzate",
  "strategiche",
  "deploy",
  "marchi",
  "accrescitive",
  "target",
  "sintetizzate",
  "spedizioni",
  "massimizzate",
  "innovazione",
  "guida",
  "estensioni",
  "generate",
  "exploit",
  "transizionali",
  "matrici",
  "ricontestualizzate"
];

},{}],502:[function(require,module,exports){
module["exports"] = [
  "adattiva",
  "avanzata",
  "migliorata",
  "assimilata",
  "automatizzata",
  "bilanciata",
  "centralizzata",
  "compatibile",
  "configurabile",
  "cross-platform",
  "decentralizzata",
  "digitalizzata",
  "distribuita",
  "piccola",
  "ergonomica",
  "esclusiva",
  "espansa",
  "estesa",
  "configurabile",
  "fondamentale",
  "orizzontale",
  "implementata",
  "innovativa",
  "integrata",
  "intuitiva",
  "inversa",
  "gestita",
  "obbligatoria",
  "monitorata",
  "multi-canale",
  "multi-laterale",
  "open-source",
  "operativa",
  "ottimizzata",
  "organica",
  "persistente",
  "polarizzata",
  "proattiva",
  "programmabile",
  "progressiva",
  "reattiva",
  "riallineata",
  "ricontestualizzata",
  "ridotta",
  "robusta",
  "sicura",
  "condivisibile",
  "stand-alone",
  "switchabile",
  "sincronizzata",
  "sinergica",
  "totale",
  "universale",
  "user-friendly",
  "versatile",
  "virtuale",
  "visionaria"
];

},{}],503:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.noun = require("./noun");
company.descriptor = require("./descriptor");
company.adjective = require("./adjective");
company.bs_noun = require("./bs_noun");
company.bs_verb = require("./bs_verb");
company.bs_adjective = require("./bs_adjective");
company.name = require("./name");

},{"./adjective":498,"./bs_adjective":499,"./bs_noun":500,"./bs_verb":501,"./descriptor":502,"./name":504,"./noun":505,"./suffix":506}],504:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name}-#{Name.last_name} #{suffix}",
  "#{Name.last_name}, #{Name.last_name} e #{Name.last_name} #{suffix}"
];

},{}],505:[function(require,module,exports){
module["exports"] = [
  "Abilità",
  "Access",
  "Adattatore",
  "Algoritmo",
  "Alleanza",
  "Analizzatore",
  "Applicazione",
  "Approccio",
  "Architettura",
  "Archivio",
  "Intelligenza artificiale",
  "Array",
  "Attitudine",
  "Benchmark",
  "Capacità",
  "Sfida",
  "Circuito",
  "Collaborazione",
  "Complessità",
  "Concetto",
  "Conglomerato",
  "Contingenza",
  "Core",
  "Database",
  "Data-warehouse",
  "Definizione",
  "Emulazione",
  "Codifica",
  "Criptazione",
  "Firmware",
  "Flessibilità",
  "Previsione",
  "Frame",
  "framework",
  "Funzione",
  "Funzionalità",
  "Interfaccia grafica",
  "Hardware",
  "Help-desk",
  "Gerarchia",
  "Hub",
  "Implementazione",
  "Infrastruttura",
  "Iniziativa",
  "Installazione",
  "Set di istruzioni",
  "Interfaccia",
  "Soluzione internet",
  "Intranet",
  "Conoscenza base",
  "Matrici",
  "Matrice",
  "Metodologia",
  "Middleware",
  "Migrazione",
  "Modello",
  "Moderazione",
  "Monitoraggio",
  "Moratoria",
  "Rete",
  "Architettura aperta",
  "Sistema aperto",
  "Orchestrazione",
  "Paradigma",
  "Parallelismo",
  "Policy",
  "Portale",
  "Struttura di prezzo",
  "Prodotto",
  "Produttività",
  "Progetto",
  "Proiezione",
  "Protocollo",
  "Servizio clienti",
  "Software",
  "Soluzione",
  "Standardizzazione",
  "Strategia",
  "Struttura",
  "Successo",
  "Sovrastruttura",
  "Supporto",
  "Sinergia",
  "Task-force",
  "Finestra temporale",
  "Strumenti",
  "Utilizzazione",
  "Sito web",
  "Forza lavoro"
];

},{}],506:[function(require,module,exports){
module["exports"] = [
  "SPA",
  "e figli",
  "Group",
  "s.r.l."
];

},{}],507:[function(require,module,exports){
var it = {};
module['exports'] = it;
it.title = "Italian";
it.address = require("./address");
it.company = require("./company");
it.internet = require("./internet");
it.name = require("./name");
it.phone_number = require("./phone_number");

},{"./address":490,"./company":503,"./internet":510,"./name":512,"./phone_number":518}],508:[function(require,module,exports){
module["exports"] = [
  "com",
  "com",
  "com",
  "net",
  "org",
  "it",
  "it",
  "it"
];

},{}],509:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.com",
  "hotmail.com",
  "email.it",
  "libero.it",
  "yahoo.it"
];

},{}],510:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"./domain_suffix":508,"./free_email":509,"dup":75}],511:[function(require,module,exports){
module["exports"] = [
  "Aaron",
  "Akira",
  "Alberto",
  "Alessandro",
  "Alighieri",
  "Amedeo",
  "Amos",
  "Anselmo",
  "Antonino",
  "Arcibaldo",
  "Armando",
  "Artes",
  "Audenico",
  "Ausonio",
  "Bacchisio",
  "Battista",
  "Bernardo",
  "Boris",
  "Caio",
  "Carlo",
  "Cecco",
  "Cirino",
  "Cleros",
  "Costantino",
  "Damiano",
  "Danny",
  "Davide",
  "Demian",
  "Dimitri",
  "Domingo",
  "Dylan",
  "Edilio",
  "Egidio",
  "Elio",
  "Emanuel",
  "Enrico",
  "Ercole",
  "Ermes",
  "Ethan",
  "Eusebio",
  "Evangelista",
  "Fabiano",
  "Ferdinando",
  "Fiorentino",
  "Flavio",
  "Fulvio",
  "Gabriele",
  "Gastone",
  "Germano",
  "Giacinto",
  "Gianantonio",
  "Gianleonardo",
  "Gianmarco",
  "Gianriccardo",
  "Gioacchino",
  "Giordano",
  "Giuliano",
  "Graziano",
  "Guido",
  "Harry",
  "Iacopo",
  "Ilario",
  "Ione",
  "Italo",
  "Jack",
  "Jari",
  "Joey",
  "Joseph",
  "Kai",
  "Kociss",
  "Laerte",
  "Lauro",
  "Leonardo",
  "Liborio",
  "Lorenzo",
  "Ludovico",
  "Maggiore",
  "Manuele",
  "Mariano",
  "Marvin",
  "Matteo",
  "Mauro",
  "Michael",
  "Mirco",
  "Modesto",
  "Muzio",
  "Nabil",
  "Nathan",
  "Nick",
  "Noah",
  "Odino",
  "Olo",
  "Oreste",
  "Osea",
  "Pablo",
  "Patrizio",
  "Piererminio",
  "Pierfrancesco",
  "Piersilvio",
  "Priamo",
  "Quarto",
  "Quirino",
  "Radames",
  "Raniero",
  "Renato",
  "Rocco",
  "Romeo",
  "Rosalino",
  "Rudy",
  "Sabatino",
  "Samuel",
  "Santo",
  "Sebastian",
  "Serse",
  "Silvano",
  "Sirio",
  "Tancredi",
  "Terzo",
  "Timoteo",
  "Tolomeo",
  "Trevis",
  "Ubaldo",
  "Ulrico",
  "Valdo",
  "Neri",
  "Vinicio",
  "Walter",
  "Xavier",
  "Yago",
  "Zaccaria",
  "Abramo",
  "Adriano",
  "Alan",
  "Albino",
  "Alessio",
  "Alighiero",
  "Amerigo",
  "Anastasio",
  "Antimo",
  "Antonio",
  "Arduino",
  "Aroldo",
  "Arturo",
  "Augusto",
  "Avide",
  "Baldassarre",
  "Bettino",
  "Bortolo",
  "Caligola",
  "Carmelo",
  "Celeste",
  "Ciro",
  "Costanzo",
  "Dante",
  "Danthon",
  "Davis",
  "Demis",
  "Dindo",
  "Domiziano",
  "Edipo",
  "Egisto",
  "Eliziario",
  "Emidio",
  "Enzo",
  "Eriberto",
  "Erminio",
  "Ettore",
  "Eustachio",
  "Fabio",
  "Fernando",
  "Fiorenzo",
  "Folco",
  "Furio",
  "Gaetano",
  "Gavino",
  "Gerlando",
  "Giacobbe",
  "Giancarlo",
  "Gianmaria",
  "Giobbe",
  "Giorgio",
  "Giulio",
  "Gregorio",
  "Hector",
  "Ian",
  "Ippolito",
  "Ivano",
  "Jacopo",
  "Jarno",
  "Joannes",
  "Joshua",
  "Karim",
  "Kris",
  "Lamberto",
  "Lazzaro",
  "Leone",
  "Lino",
  "Loris",
  "Luigi",
  "Manfredi",
  "Marco",
  "Marino",
  "Marzio",
  "Mattia",
  "Max",
  "Michele",
  "Mirko",
  "Moreno",
  "Nadir",
  "Nazzareno",
  "Nestore",
  "Nico",
  "Noel",
  "Odone",
  "Omar",
  "Orfeo",
  "Osvaldo",
  "Pacifico",
  "Pericle",
  "Pietro",
  "Primo",
  "Quasimodo",
  "Radio",
  "Raoul",
  "Renzo",
  "Rodolfo",
  "Romolo",
  "Rosolino",
  "Rufo",
  "Sabino",
  "Sandro",
  "Sasha",
  "Secondo",
  "Sesto",
  "Silverio",
  "Siro",
  "Tazio",
  "Teseo",
  "Timothy",
  "Tommaso",
  "Tristano",
  "Umberto",
  "Ariel",
  "Artemide",
  "Assia",
  "Azue",
  "Benedetta",
  "Bibiana",
  "Brigitta",
  "Carmela",
  "Cassiopea",
  "Cesidia",
  "Cira",
  "Clea",
  "Cleopatra",
  "Clodovea",
  "Concetta",
  "Cosetta",
  "Cristyn",
  "Damiana",
  "Danuta",
  "Deborah",
  "Demi",
  "Diamante",
  "Diana",
  "Donatella",
  "Doriana",
  "Edvige",
  "Elda",
  "Elga",
  "Elsa",
  "Emilia",
  "Enrica",
  "Erminia",
  "Eufemia",
  "Evita",
  "Fatima",
  "Felicia",
  "Filomena",
  "Flaviana",
  "Fortunata",
  "Gelsomina",
  "Genziana",
  "Giacinta",
  "Gilda",
  "Giovanna",
  "Giulietta",
  "Grazia",
  "Guendalina",
  "Helga",
  "Ileana",
  "Ingrid",
  "Irene",
  "Isabel",
  "Isira",
  "Ivonne",
  "Jelena",
  "Jole",
  "Claudia",
  "Kayla",
  "Kristel",
  "Laura",
  "Lucia",
  "Lia",
  "Lidia",
  "Lisa",
  "Loredana",
  "Loretta",
  "Luce",
  "Lucrezia",
  "Luna",
  "Maika",
  "Marcella",
  "Maria",
  "Mariagiulia",
  "Marianita",
  "Mariapia",
  "Marieva",
  "Marina",
  "Maristella",
  "Maruska",
  "Matilde",
  "Mecren",
  "Mercedes",
  "Mietta",
  "Miriana",
  "Miriam",
  "Monia",
  "Morgana",
  "Naomi",
  "Nayade",
  "Nicoletta",
  "Ninfa",
  "Noemi",
  "Nunzia",
  "Olimpia",
  "Oretta",
  "Ortensia",
  "Penelope",
  "Piccarda",
  "Prisca",
  "Rebecca",
  "Rita",
  "Rosalba",
  "Rosaria",
  "Rosita",
  "Ruth",
  "Samira",
  "Sarita",
  "Selvaggia",
  "Shaira",
  "Sibilla",
  "Soriana",
  "Thea",
  "Tosca",
  "Ursula",
  "Vania",
  "Vera",
  "Vienna",
  "Violante",
  "Vitalba",
  "Zelida"
];

},{}],512:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.name = require("./name");

},{"./first_name":511,"./last_name":513,"./name":514,"./prefix":515,"./suffix":516}],513:[function(require,module,exports){
module["exports"] = [
  "Amato",
  "Barbieri",
  "Barone",
  "Basile",
  "Battaglia",
  "Bellini",
  "Benedetti",
  "Bernardi",
  "Bianc",
  "Bianchi",
  "Bruno",
  "Caputo",
  "Carbon",
  "Caruso",
  "Cattaneo",
  "Colombo",
  "Cont",
  "Conte",
  "Coppola",
  "Costa",
  "Costantin",
  "D'amico",
  "D'angelo",
  "Damico",
  "De Angelis",
  "De luca",
  "De rosa",
  "De Santis",
  "Donati",
  "Esposito",
  "Fabbri",
  "Farin",
  "Ferrara",
  "Ferrari",
  "Ferraro",
  "Ferretti",
  "Ferri",
  "Fior",
  "Fontana",
  "Galli",
  "Gallo",
  "Gatti",
  "Gentile",
  "Giordano",
  "Giuliani",
  "Grassi",
  "Grasso",
  "Greco",
  "Guerra",
  "Leone",
  "Lombardi",
  "Lombardo",
  "Longo",
  "Mancini",
  "Marchetti",
  "Marian",
  "Marini",
  "Marino",
  "Martinelli",
  "Martini",
  "Martino",
  "Mazza",
  "Messina",
  "Milani",
  "Montanari",
  "Monti",
  "Morelli",
  "Moretti",
  "Negri",
  "Neri",
  "Orlando",
  "Pagano",
  "Palmieri",
  "Palumbo",
  "Parisi",
  "Pellegrini",
  "Pellegrino",
  "Piras",
  "Ricci",
  "Rinaldi",
  "Riva",
  "Rizzi",
  "Rizzo",
  "Romano",
  "Ross",
  "Rossetti",
  "Ruggiero",
  "Russo",
  "Sala",
  "Sanna",
  "Santoro",
  "Sartori",
  "Serr",
  "Silvestri",
  "Sorrentino",
  "Testa",
  "Valentini",
  "Villa",
  "Vitale",
  "Vitali"
];

},{}],514:[function(require,module,exports){
arguments[4][479][0].apply(exports,arguments)
},{"dup":479}],515:[function(require,module,exports){
module["exports"] = [
  "Sig.",
  "Dott.",
  "Dr.",
  "Ing."
];

},{}],516:[function(require,module,exports){
module["exports"] = [];

},{}],517:[function(require,module,exports){
module["exports"] = [
  "+## ### ## ## ####",
  "+## ## #######",
  "+## ## ########",
  "+## ### #######",
  "+## ### ########",
  "+## #### #######",
  "+## #### ########",
  "0## ### ####",
  "+39 0## ### ###",
  "3## ### ###",
  "+39 3## ### ###"
];

},{}],518:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":517,"dup":85}],519:[function(require,module,exports){
module["exports"] = [
  "#{city_prefix}#{Name.first_name}#{city_suffix}",
  "#{Name.first_name}#{city_suffix}",
  "#{city_prefix}#{Name.last_name}#{city_suffix}",
  "#{Name.last_name}#{city_suffix}"
];

},{}],520:[function(require,module,exports){
module["exports"] = [
  "北",
  "東",
  "西",
  "南",
  "新",
  "湖",
  "港"
];

},{}],521:[function(require,module,exports){
module["exports"] = [
  "市",
  "区",
  "町",
  "村"
];

},{}],522:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.city = require("./city");
address.street_name = require("./street_name");

},{"./city":519,"./city_prefix":520,"./city_suffix":521,"./postcode":523,"./state":524,"./state_abbr":525,"./street_name":526}],523:[function(require,module,exports){
module["exports"] = [
  "###-####"
];

},{}],524:[function(require,module,exports){
module["exports"] = [
  "北海道",
  "青森県",
  "岩手県",
  "宮城県",
  "秋田県",
  "山形県",
  "福島県",
  "茨城県",
  "栃木県",
  "群馬県",
  "埼玉県",
  "千葉県",
  "東京都",
  "神奈川県",
  "新潟県",
  "富山県",
  "石川県",
  "福井県",
  "山梨県",
  "長野県",
  "岐阜県",
  "静岡県",
  "愛知県",
  "三重県",
  "滋賀県",
  "京都府",
  "大阪府",
  "兵庫県",
  "奈良県",
  "和歌山県",
  "鳥取県",
  "島根県",
  "岡山県",
  "広島県",
  "山口県",
  "徳島県",
  "香川県",
  "愛媛県",
  "高知県",
  "福岡県",
  "佐賀県",
  "長崎県",
  "熊本県",
  "大分県",
  "宮崎県",
  "鹿児島県",
  "沖縄県"
];

},{}],525:[function(require,module,exports){
module["exports"] = [
  "1",
  "2",
  "3",
  "4",
  "5",
  "6",
  "7",
  "8",
  "9",
  "10",
  "11",
  "12",
  "13",
  "14",
  "15",
  "16",
  "17",
  "18",
  "19",
  "20",
  "21",
  "22",
  "23",
  "24",
  "25",
  "26",
  "27",
  "28",
  "29",
  "30",
  "31",
  "32",
  "33",
  "34",
  "35",
  "36",
  "37",
  "38",
  "39",
  "40",
  "41",
  "42",
  "43",
  "44",
  "45",
  "46",
  "47"
];

},{}],526:[function(require,module,exports){
module["exports"] = [
  "#{Name.first_name}#{street_suffix}",
  "#{Name.last_name}#{street_suffix}"
];

},{}],527:[function(require,module,exports){
module["exports"] = [
  "090-####-####",
  "080-####-####",
  "070-####-####"
];

},{}],528:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"./formats":527,"dup":67}],529:[function(require,module,exports){
var ja = {};
module['exports'] = ja;
ja.title = "Japanese";
ja.address = require("./address");
ja.phone_number = require("./phone_number");
ja.cell_phone = require("./cell_phone");
ja.name = require("./name");

},{"./address":522,"./cell_phone":528,"./name":531,"./phone_number":535}],530:[function(require,module,exports){
module["exports"] = [
  "大翔",
  "蓮",
  "颯太",
  "樹",
  "大和",
  "陽翔",
  "陸斗",
  "太一",
  "海翔",
  "蒼空",
  "翼",
  "陽菜",
  "結愛",
  "結衣",
  "杏",
  "莉子",
  "美羽",
  "結菜",
  "心愛",
  "愛菜",
  "美咲"
];

},{}],531:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.last_name = require("./last_name");
name.first_name = require("./first_name");
name.name = require("./name");

},{"./first_name":530,"./last_name":532,"./name":533}],532:[function(require,module,exports){
module["exports"] = [
  "佐藤",
  "鈴木",
  "高橋",
  "田中",
  "渡辺",
  "伊藤",
  "山本",
  "中村",
  "小林",
  "加藤",
  "吉田",
  "山田",
  "佐々木",
  "山口",
  "斎藤",
  "松本",
  "井上",
  "木村",
  "林",
  "清水"
];

},{}],533:[function(require,module,exports){
module["exports"] = [
  "#{last_name} #{first_name}"
];

},{}],534:[function(require,module,exports){
module["exports"] = [
  "0####-#-####",
  "0###-##-####",
  "0##-###-####",
  "0#-####-####"
];

},{}],535:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":534,"dup":85}],536:[function(require,module,exports){
module["exports"] = [
  "#{city_name}#{city_suffix}"
];

},{}],537:[function(require,module,exports){
module["exports"] = [
  "강릉",
  "양양",
  "인제",
  "광주",
  "구리",
  "부천",
  "밀양",
  "통영",
  "창원",
  "거창",
  "고성",
  "양산",
  "김천",
  "구미",
  "영주",
  "광산",
  "남",
  "북",
  "고창",
  "군산",
  "남원",
  "동작",
  "마포",
  "송파",
  "용산",
  "부평",
  "강화",
  "수성"
];

},{}],538:[function(require,module,exports){
module["exports"] = [
  "구",
  "시",
  "군"
];

},{}],539:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city_suffix = require("./city_suffix");
address.city_name = require("./city_name");
address.city = require("./city");
address.street_root = require("./street_root");
address.street_suffix = require("./street_suffix");
address.street_name = require("./street_name");

},{"./city":536,"./city_name":537,"./city_suffix":538,"./postcode":540,"./state":541,"./state_abbr":542,"./street_name":543,"./street_root":544,"./street_suffix":545}],540:[function(require,module,exports){
module["exports"] = [
  "###-###"
];

},{}],541:[function(require,module,exports){
module["exports"] = [
  "강원",
  "경기",
  "경남",
  "경북",
  "광주",
  "대구",
  "대전",
  "부산",
  "서울",
  "울산",
  "인천",
  "전남",
  "전북",
  "제주",
  "충남",
  "충북",
  "세종"
];

},{}],542:[function(require,module,exports){
arguments[4][541][0].apply(exports,arguments)
},{"dup":541}],543:[function(require,module,exports){
module["exports"] = [
  "#{street_root}#{street_suffix}"
];

},{}],544:[function(require,module,exports){
module["exports"] = [
  "상계",
  "화곡",
  "신정",
  "목",
  "잠실",
  "면목",
  "주안",
  "안양",
  "중",
  "정왕",
  "구로",
  "신월",
  "연산",
  "부평",
  "창",
  "만수",
  "중계",
  "검단",
  "시흥",
  "상도",
  "방배",
  "장유",
  "상",
  "광명",
  "신길",
  "행신",
  "대명",
  "동탄"
];

},{}],545:[function(require,module,exports){
module["exports"] = [
  "읍",
  "면",
  "동"
];

},{}],546:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.prefix = require("./prefix");
company.name = require("./name");

},{"./name":547,"./prefix":548,"./suffix":549}],547:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{Name.first_name}",
  "#{Name.first_name} #{suffix}"
];

},{}],548:[function(require,module,exports){
module["exports"] = [
  "주식회사",
  "한국"
];

},{}],549:[function(require,module,exports){
module["exports"] = [
  "연구소",
  "게임즈",
  "그룹",
  "전자",
  "물산",
  "코리아"
];

},{}],550:[function(require,module,exports){
var ko = {};
module['exports'] = ko;
ko.title = "Korean";
ko.address = require("./address");
ko.phone_number = require("./phone_number");
ko.company = require("./company");
ko.internet = require("./internet");
ko.lorem = require("./lorem");
ko.name = require("./name");

},{"./address":539,"./company":546,"./internet":553,"./lorem":554,"./name":557,"./phone_number":561}],551:[function(require,module,exports){
module["exports"] = [
  "co.kr",
  "com",
  "biz",
  "info",
  "ne.kr",
  "net",
  "or.kr",
  "org"
];

},{}],552:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.co.kr",
  "hanmail.net",
  "naver.com"
];

},{}],553:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"./domain_suffix":551,"./free_email":552,"dup":75}],554:[function(require,module,exports){
arguments[4][76][0].apply(exports,arguments)
},{"./words":555,"dup":76}],555:[function(require,module,exports){
module["exports"] = [
  "국가는",
  "법률이",
  "정하는",
  "바에",
  "의하여",
  "재외국민을",
  "보호할",
  "의무를",
  "진다.",
  "모든",
  "국민은",
  "신체의",
  "자유를",
  "가진다.",
  "국가는",
  "전통문화의",
  "계승·발전과",
  "민족문화의",
  "창달에",
  "노력하여야",
  "한다.",
  "통신·방송의",
  "시설기준과",
  "신문의",
  "기능을",
  "보장하기",
  "위하여",
  "필요한",
  "사항은",
  "법률로",
  "정한다.",
  "헌법에",
  "의하여",
  "체결·공포된",
  "조약과",
  "일반적으로",
  "승인된",
  "국제법규는",
  "국내법과",
  "같은",
  "효력을",
  "가진다.",
  "다만,",
  "현행범인인",
  "경우와",
  "장기",
  "3년",
  "이상의",
  "형에",
  "해당하는",
  "죄를",
  "범하고",
  "도피",
  "또는",
  "증거인멸의",
  "염려가",
  "있을",
  "때에는",
  "사후에",
  "영장을",
  "청구할",
  "수",
  "있다.",
  "저작자·발명가·과학기술자와",
  "예술가의",
  "권리는",
  "법률로써",
  "보호한다.",
  "형사피고인은",
  "유죄의",
  "판결이",
  "확정될",
  "때까지는",
  "무죄로",
  "추정된다.",
  "모든",
  "국민은",
  "행위시의",
  "법률에",
  "의하여",
  "범죄를",
  "구성하지",
  "아니하는",
  "행위로",
  "소추되지",
  "아니하며,",
  "동일한",
  "범죄에",
  "대하여",
  "거듭",
  "처벌받지",
  "아니한다.",
  "국가는",
  "평생교육을",
  "진흥하여야",
  "한다.",
  "모든",
  "국민은",
  "사생활의",
  "비밀과",
  "자유를",
  "침해받지",
  "아니한다.",
  "의무교육은",
  "무상으로",
  "한다.",
  "저작자·발명가·과학기술자와",
  "예술가의",
  "권리는",
  "법률로써",
  "보호한다.",
  "국가는",
  "모성의",
  "보호를",
  "위하여",
  "노력하여야",
  "한다.",
  "헌법에",
  "의하여",
  "체결·공포된",
  "조약과",
  "일반적으로",
  "승인된",
  "국제법규는",
  "국내법과",
  "같은",
  "효력을",
  "가진다."
];

},{}],556:[function(require,module,exports){
module["exports"] = [
  "서연",
  "민서",
  "서현",
  "지우",
  "서윤",
  "지민",
  "수빈",
  "하은",
  "예은",
  "윤서",
  "민준",
  "지후",
  "지훈",
  "준서",
  "현우",
  "예준",
  "건우",
  "현준",
  "민재",
  "우진",
  "은주"
];

},{}],557:[function(require,module,exports){
arguments[4][531][0].apply(exports,arguments)
},{"./first_name":556,"./last_name":558,"./name":559,"dup":531}],558:[function(require,module,exports){
module["exports"] = [
  "김",
  "이",
  "박",
  "최",
  "정",
  "강",
  "조",
  "윤",
  "장",
  "임",
  "오",
  "한",
  "신",
  "서",
  "권",
  "황",
  "안",
  "송",
  "류",
  "홍"
];

},{}],559:[function(require,module,exports){
arguments[4][533][0].apply(exports,arguments)
},{"dup":533}],560:[function(require,module,exports){
module["exports"] = [
  "0#-#####-####",
  "0##-###-####",
  "0##-####-####"
];

},{}],561:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":560,"dup":85}],562:[function(require,module,exports){
module["exports"] = [
  "#",
  "##"
];

},{}],563:[function(require,module,exports){
module["exports"] = [
  "#{city_root}#{city_suffix}"
];

},{}],564:[function(require,module,exports){
module["exports"] = [
  "Fet",
  "Gjes",
  "Høy",
  "Inn",
  "Fager",
  "Lille",
  "Lo",
  "Mal",
  "Nord",
  "Nær",
  "Sand",
  "Sme",
  "Stav",
  "Stor",
  "Tand",
  "Ut",
  "Vest"
];

},{}],565:[function(require,module,exports){
module["exports"] = [
  "berg",
  "borg",
  "by",
  "bø",
  "dal",
  "eid",
  "fjell",
  "fjord",
  "foss",
  "grunn",
  "hamn",
  "havn",
  "helle",
  "mark",
  "nes",
  "odden",
  "sand",
  "sjøen",
  "stad",
  "strand",
  "strøm",
  "sund",
  "vik",
  "vær",
  "våg",
  "ø",
  "øy",
  "ås"
];

},{}],566:[function(require,module,exports){
module["exports"] = [
  "sgate",
  "svei",
  "s Gate",
  "s Vei",
  "gata",
  "veien"
];

},{}],567:[function(require,module,exports){
module["exports"] = [
  "Norge"
];

},{}],568:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_root = require("./city_root");
address.city_suffix = require("./city_suffix");
address.street_prefix = require("./street_prefix");
address.street_root = require("./street_root");
address.street_suffix = require("./street_suffix");
address.common_street_suffix = require("./common_street_suffix");
address.building_number = require("./building_number");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":562,"./city":563,"./city_root":564,"./city_suffix":565,"./common_street_suffix":566,"./default_country":567,"./postcode":569,"./secondary_address":570,"./state":571,"./street_address":572,"./street_name":573,"./street_prefix":574,"./street_root":575,"./street_suffix":576}],569:[function(require,module,exports){
module["exports"] = [
  "####",
  "####",
  "####",
  "0###"
];

},{}],570:[function(require,module,exports){
module["exports"] = [
  "Leil. ###",
  "Oppgang A",
  "Oppgang B"
];

},{}],571:[function(require,module,exports){
module["exports"] = [
  ""
];

},{}],572:[function(require,module,exports){
arguments[4][63][0].apply(exports,arguments)
},{"dup":63}],573:[function(require,module,exports){
module["exports"] = [
  "#{street_root}#{street_suffix}",
  "#{street_prefix} #{street_root}#{street_suffix}",
  "#{Name.first_name}#{common_street_suffix}",
  "#{Name.last_name}#{common_street_suffix}"
];

},{}],574:[function(require,module,exports){
module["exports"] = [
  "Øvre",
  "Nedre",
  "Søndre",
  "Gamle",
  "Østre",
  "Vestre"
];

},{}],575:[function(require,module,exports){
module["exports"] = [
  "Eike",
  "Bjørke",
  "Gran",
  "Vass",
  "Furu",
  "Litj",
  "Lille",
  "Høy",
  "Fosse",
  "Elve",
  "Ku",
  "Konvall",
  "Soldugg",
  "Hestemyr",
  "Granitt",
  "Hegge",
  "Rogne",
  "Fiol",
  "Sol",
  "Ting",
  "Malm",
  "Klokker",
  "Preste",
  "Dam",
  "Geiterygg",
  "Bekke",
  "Berg",
  "Kirke",
  "Kors",
  "Bru",
  "Blåveis",
  "Torg",
  "Sjø"
];

},{}],576:[function(require,module,exports){
module["exports"] = [
  "alléen",
  "bakken",
  "berget",
  "bråten",
  "eggen",
  "engen",
  "ekra",
  "faret",
  "flata",
  "gata",
  "gjerdet",
  "grenda",
  "gropa",
  "hagen",
  "haugen",
  "havna",
  "holtet",
  "høgda",
  "jordet",
  "kollen",
  "kroken",
  "lia",
  "lunden",
  "lyngen",
  "løkka",
  "marka",
  "moen",
  "myra",
  "plassen",
  "ringen",
  "roa",
  "røa",
  "skogen",
  "skrenten",
  "spranget",
  "stien",
  "stranda",
  "stubben",
  "stykket",
  "svingen",
  "tjernet",
  "toppen",
  "tunet",
  "vollen",
  "vika",
  "åsen"
];

},{}],577:[function(require,module,exports){
arguments[4][121][0].apply(exports,arguments)
},{"./name":578,"./suffix":579,"dup":121}],578:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name}-#{Name.last_name}",
  "#{Name.last_name}, #{Name.last_name} og #{Name.last_name}"
];

},{}],579:[function(require,module,exports){
module["exports"] = [
  "Gruppen",
  "AS",
  "ASA",
  "BA",
  "RFH",
  "og Sønner"
];

},{}],580:[function(require,module,exports){
var nb_NO = {};
module['exports'] = nb_NO;
nb_NO.title = "Norwegian";
nb_NO.address = require("./address");
nb_NO.company = require("./company");
nb_NO.internet = require("./internet");
nb_NO.name = require("./name");
nb_NO.phone_number = require("./phone_number");

},{"./address":568,"./company":577,"./internet":582,"./name":585,"./phone_number":592}],581:[function(require,module,exports){
module["exports"] = [
  "no",
  "com",
  "net",
  "org"
];

},{}],582:[function(require,module,exports){
arguments[4][126][0].apply(exports,arguments)
},{"./domain_suffix":581,"dup":126}],583:[function(require,module,exports){
module["exports"] = [
  "Emma",
  "Sara",
  "Thea",
  "Ida",
  "Julie",
  "Nora",
  "Emilie",
  "Ingrid",
  "Hanna",
  "Maria",
  "Sofie",
  "Anna",
  "Malin",
  "Amalie",
  "Vilde",
  "Frida",
  "Andrea",
  "Tuva",
  "Victoria",
  "Mia",
  "Karoline",
  "Mathilde",
  "Martine",
  "Linnea",
  "Marte",
  "Hedda",
  "Marie",
  "Helene",
  "Silje",
  "Leah",
  "Maja",
  "Elise",
  "Oda",
  "Kristine",
  "Aurora",
  "Kaja",
  "Camilla",
  "Mari",
  "Maren",
  "Mina",
  "Selma",
  "Jenny",
  "Celine",
  "Eline",
  "Sunniva",
  "Natalie",
  "Tiril",
  "Synne",
  "Sandra",
  "Madeleine"
];

},{}],584:[function(require,module,exports){
module["exports"] = [
  "Emma",
  "Sara",
  "Thea",
  "Ida",
  "Julie",
  "Nora",
  "Emilie",
  "Ingrid",
  "Hanna",
  "Maria",
  "Sofie",
  "Anna",
  "Malin",
  "Amalie",
  "Vilde",
  "Frida",
  "Andrea",
  "Tuva",
  "Victoria",
  "Mia",
  "Karoline",
  "Mathilde",
  "Martine",
  "Linnea",
  "Marte",
  "Hedda",
  "Marie",
  "Helene",
  "Silje",
  "Leah",
  "Maja",
  "Elise",
  "Oda",
  "Kristine",
  "Aurora",
  "Kaja",
  "Camilla",
  "Mari",
  "Maren",
  "Mina",
  "Selma",
  "Jenny",
  "Celine",
  "Eline",
  "Sunniva",
  "Natalie",
  "Tiril",
  "Synne",
  "Sandra",
  "Madeleine",
  "Markus",
  "Mathias",
  "Kristian",
  "Jonas",
  "Andreas",
  "Alexander",
  "Martin",
  "Sander",
  "Daniel",
  "Magnus",
  "Henrik",
  "Tobias",
  "Kristoffer",
  "Emil",
  "Adrian",
  "Sebastian",
  "Marius",
  "Elias",
  "Fredrik",
  "Thomas",
  "Sondre",
  "Benjamin",
  "Jakob",
  "Oliver",
  "Lucas",
  "Oskar",
  "Nikolai",
  "Filip",
  "Mats",
  "William",
  "Erik",
  "Simen",
  "Ole",
  "Eirik",
  "Isak",
  "Kasper",
  "Noah",
  "Lars",
  "Joakim",
  "Johannes",
  "Håkon",
  "Sindre",
  "Jørgen",
  "Herman",
  "Anders",
  "Jonathan",
  "Even",
  "Theodor",
  "Mikkel",
  "Aksel"
];

},{}],585:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.feminine_name = require("./feminine_name");
name.masculine_name = require("./masculine_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.name = require("./name");

},{"./feminine_name":583,"./first_name":584,"./last_name":586,"./masculine_name":587,"./name":588,"./prefix":589,"./suffix":590}],586:[function(require,module,exports){
module["exports"] = [
  "Johansen",
  "Hansen",
  "Andersen",
  "Kristiansen",
  "Larsen",
  "Olsen",
  "Solberg",
  "Andresen",
  "Pedersen",
  "Nilsen",
  "Berg",
  "Halvorsen",
  "Karlsen",
  "Svendsen",
  "Jensen",
  "Haugen",
  "Martinsen",
  "Eriksen",
  "Sørensen",
  "Johnsen",
  "Myhrer",
  "Johannessen",
  "Nielsen",
  "Hagen",
  "Pettersen",
  "Bakke",
  "Skuterud",
  "Løken",
  "Gundersen",
  "Strand",
  "Jørgensen",
  "Kvarme",
  "Røed",
  "Sæther",
  "Stensrud",
  "Moe",
  "Kristoffersen",
  "Jakobsen",
  "Holm",
  "Aas",
  "Lie",
  "Moen",
  "Andreassen",
  "Vedvik",
  "Nguyen",
  "Jacobsen",
  "Torgersen",
  "Ruud",
  "Krogh",
  "Christiansen",
  "Bjerke",
  "Aalerud",
  "Borge",
  "Sørlie",
  "Berge",
  "Østli",
  "Ødegård",
  "Torp",
  "Henriksen",
  "Haukelidsæter",
  "Fjeld",
  "Danielsen",
  "Aasen",
  "Fredriksen",
  "Dahl",
  "Berntsen",
  "Arnesen",
  "Wold",
  "Thoresen",
  "Solheim",
  "Skoglund",
  "Bakken",
  "Amundsen",
  "Solli",
  "Smogeli",
  "Kristensen",
  "Glosli",
  "Fossum",
  "Evensen",
  "Eide",
  "Carlsen",
  "Østby",
  "Vegge",
  "Tangen",
  "Smedsrud",
  "Olstad",
  "Lunde",
  "Kleven",
  "Huseby",
  "Bjørnstad",
  "Ryan",
  "Rasmussen",
  "Nygård",
  "Nordskaug",
  "Nordby",
  "Mathisen",
  "Hopland",
  "Gran",
  "Finstad",
  "Edvardsen"
];

},{}],587:[function(require,module,exports){
module["exports"] = [
  "Markus",
  "Mathias",
  "Kristian",
  "Jonas",
  "Andreas",
  "Alexander",
  "Martin",
  "Sander",
  "Daniel",
  "Magnus",
  "Henrik",
  "Tobias",
  "Kristoffer",
  "Emil",
  "Adrian",
  "Sebastian",
  "Marius",
  "Elias",
  "Fredrik",
  "Thomas",
  "Sondre",
  "Benjamin",
  "Jakob",
  "Oliver",
  "Lucas",
  "Oskar",
  "Nikolai",
  "Filip",
  "Mats",
  "William",
  "Erik",
  "Simen",
  "Ole",
  "Eirik",
  "Isak",
  "Kasper",
  "Noah",
  "Lars",
  "Joakim",
  "Johannes",
  "Håkon",
  "Sindre",
  "Jørgen",
  "Herman",
  "Anders",
  "Jonathan",
  "Even",
  "Theodor",
  "Mikkel",
  "Aksel"
];

},{}],588:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name}",
  "#{first_name} #{last_name} #{suffix}",
  "#{feminine_name} #{feminine_name} #{last_name}",
  "#{masculine_name} #{masculine_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name}"
];

},{}],589:[function(require,module,exports){
module["exports"] = [
  "Dr.",
  "Prof."
];

},{}],590:[function(require,module,exports){
module["exports"] = [
  "Jr.",
  "Sr.",
  "I",
  "II",
  "III",
  "IV",
  "V"
];

},{}],591:[function(require,module,exports){
module["exports"] = [
  "########",
  "## ## ## ##",
  "### ## ###",
  "+47 ## ## ## ##"
];

},{}],592:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":591,"dup":85}],593:[function(require,module,exports){
module["exports"] = [
  "Bhaktapur",
  "Biratnagar",
  "Birendranagar",
  "Birgunj",
  "Butwal",
  "Damak",
  "Dharan",
  "Gaur",
  "Gorkha",
  "Hetauda",
  "Itahari",
  "Janakpur",
  "Kathmandu",
  "Lahan",
  "Nepalgunj",
  "Pokhara"
];

},{}],594:[function(require,module,exports){
module["exports"] = [
  "Nepal"
];

},{}],595:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.postcode = require("./postcode");
address.state = require("./state");
address.city = require("./city");
address.default_country = require("./default_country");

},{"./city":593,"./default_country":594,"./postcode":596,"./state":597}],596:[function(require,module,exports){
module["exports"] = [
  0
];

},{}],597:[function(require,module,exports){
module["exports"] = [
  "Baglung",
  "Banke",
  "Bara",
  "Bardiya",
  "Bhaktapur",
  "Bhojupu",
  "Chitwan",
  "Dailekh",
  "Dang",
  "Dhading",
  "Dhankuta",
  "Dhanusa",
  "Dolakha",
  "Dolpha",
  "Gorkha",
  "Gulmi",
  "Humla",
  "Ilam",
  "Jajarkot",
  "Jhapa",
  "Jumla",
  "Kabhrepalanchok",
  "Kalikot",
  "Kapilvastu",
  "Kaski",
  "Kathmandu",
  "Lalitpur",
  "Lamjung",
  "Manang",
  "Mohottari",
  "Morang",
  "Mugu",
  "Mustang",
  "Myagdi",
  "Nawalparasi",
  "Nuwakot",
  "Palpa",
  "Parbat",
  "Parsa",
  "Ramechhap",
  "Rauswa",
  "Rautahat",
  "Rolpa",
  "Rupandehi",
  "Sankhuwasabha",
  "Sarlahi",
  "Sindhuli",
  "Sindhupalchok",
  "Sunsari",
  "Surket",
  "Syangja",
  "Tanahu",
  "Terhathum"
];

},{}],598:[function(require,module,exports){
arguments[4][221][0].apply(exports,arguments)
},{"./suffix":599,"dup":221}],599:[function(require,module,exports){
module["exports"] = [
  "Pvt Ltd",
  "Group",
  "Ltd",
  "Limited"
];

},{}],600:[function(require,module,exports){
var nep = {};
module['exports'] = nep;
nep.title = "Nepalese";
nep.name = require("./name");
nep.address = require("./address");
nep.internet = require("./internet");
nep.company = require("./company");
nep.phone_number = require("./phone_number");

},{"./address":595,"./company":598,"./internet":603,"./name":605,"./phone_number":608}],601:[function(require,module,exports){
module["exports"] = [
  "np",
  "com",
  "info",
  "net",
  "org"
];

},{}],602:[function(require,module,exports){
module["exports"] = [
  "worldlink.com.np",
  "gmail.com",
  "yahoo.com",
  "hotmail.com"
];

},{}],603:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"./domain_suffix":601,"./free_email":602,"dup":75}],604:[function(require,module,exports){
module["exports"] = [
  "Aarav",
  "Ajita",
  "Amit",
  "Amita",
  "Amrit",
  "Arijit",
  "Ashmi",
  "Asmita",
  "Bibek",
  "Bijay",
  "Bikash",
  "Bina",
  "Bishal",
  "Bishnu",
  "Buddha",
  "Deepika",
  "Dipendra",
  "Gagan",
  "Ganesh",
  "Khem",
  "Krishna",
  "Laxmi",
  "Manisha",
  "Nabin",
  "Nikita",
  "Niraj",
  "Nischal",
  "Padam",
  "Pooja",
  "Prabin",
  "Prakash",
  "Prashant",
  "Prem",
  "Purna",
  "Rajendra",
  "Rajina",
  "Raju",
  "Rakesh",
  "Ranjan",
  "Ratna",
  "Sagar",
  "Sandeep",
  "Sanjay",
  "Santosh",
  "Sarita",
  "Shilpa",
  "Shirisha",
  "Shristi",
  "Siddhartha",
  "Subash",
  "Sumeet",
  "Sunita",
  "Suraj",
  "Susan",
  "Sushant"
];

},{}],605:[function(require,module,exports){
arguments[4][227][0].apply(exports,arguments)
},{"./first_name":604,"./last_name":606,"dup":227}],606:[function(require,module,exports){
module["exports"] = [
  "Adhikari",
  "Aryal",
  "Baral",
  "Basnet",
  "Bastola",
  "Basynat",
  "Bhandari",
  "Bhattarai",
  "Chettri",
  "Devkota",
  "Dhakal",
  "Dongol",
  "Ghale",
  "Gurung",
  "Gyawali",
  "Hamal",
  "Jung",
  "KC",
  "Kafle",
  "Karki",
  "Khadka",
  "Koirala",
  "Lama",
  "Limbu",
  "Magar",
  "Maharjan",
  "Niroula",
  "Pandey",
  "Pradhan",
  "Rana",
  "Raut",
  "Sai",
  "Shai",
  "Shakya",
  "Sherpa",
  "Shrestha",
  "Subedi",
  "Tamang",
  "Thapa"
];

},{}],607:[function(require,module,exports){
module["exports"] = [
  "##-#######",
  "+977-#-#######",
  "+977########"
];

},{}],608:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":607,"dup":85}],609:[function(require,module,exports){
module["exports"] = [
  "#",
  "##",
  "###",
  "###a",
  "###b",
  "###c",
  "### I",
  "### II",
  "### III"
];

},{}],610:[function(require,module,exports){
module["exports"] = [
  "#{Name.first_name}#{city_suffix}",
  "#{Name.last_name}#{city_suffix}",
  "#{city_prefix} #{Name.first_name}#{city_suffix}",
  "#{city_prefix} #{Name.last_name}#{city_suffix}"
];

},{}],611:[function(require,module,exports){
module["exports"] = [
  "Noord",
  "Oost",
  "West",
  "Zuid",
  "Nieuw",
  "Oud"
];

},{}],612:[function(require,module,exports){
module["exports"] = [
  "dam",
  "berg",
  " aan de Rijn",
  " aan de IJssel",
  "swaerd",
  "endrecht",
  "recht",
  "ambacht",
  "enmaes",
  "wijk",
  "sland",
  "stroom",
  "sluus",
  "dijk",
  "dorp",
  "burg",
  "veld",
  "sluis",
  "koop",
  "lek",
  "hout",
  "geest",
  "kerk",
  "woude",
  "hoven",
  "hoten",
  "ingen",
  "plas",
  "meer"
];

},{}],613:[function(require,module,exports){
module["exports"] = [
  "Afghanistan",
  "Akrotiri",
  "Albanië",
  "Algerije",
  "Amerikaanse Maagdeneilanden",
  "Amerikaans-Samoa",
  "Andorra",
  "Angola",
  "Anguilla",
  "Antarctica",
  "Antigua en Barbuda",
  "Arctic Ocean",
  "Argentinië",
  "Armenië",
  "Aruba",
  "Ashmore and Cartier Islands",
  "Atlantic Ocean",
  "Australië",
  "Azerbeidzjan",
  "Bahama's",
  "Bahrein",
  "Bangladesh",
  "Barbados",
  "Belarus",
  "België",
  "Belize",
  "Benin",
  "Bermuda",
  "Bhutan",
  "Bolivië",
  "Bosnië-Herzegovina",
  "Botswana",
  "Bouvet Island",
  "Brazilië",
  "British Indian Ocean Territory",
  "Britse Maagdeneilanden",
  "Brunei",
  "Bulgarije",
  "Burkina Faso",
  "Burundi",
  "Cambodja",
  "Canada",
  "Caymaneilanden",
  "Centraal-Afrikaanse Republiek",
  "Chili",
  "China",
  "Christmas Island",
  "Clipperton Island",
  "Cocos (Keeling) Islands",
  "Colombia",
  "Comoren (Unie)",
  "Congo (Democratische Republiek)",
  "Congo (Volksrepubliek)",
  "Cook",
  "Coral Sea Islands",
  "Costa Rica",
  "Cuba",
  "Cyprus",
  "Denemarken",
  "Dhekelia",
  "Djibouti",
  "Dominica",
  "Dominicaanse Republiek",
  "Duitsland",
  "Ecuador",
  "Egypte",
  "El Salvador",
  "Equatoriaal-Guinea",
  "Eritrea",
  "Estland",
  "Ethiopië",
  "European Union",
  "Falkland",
  "Faroe Islands",
  "Fiji",
  "Filipijnen",
  "Finland",
  "Frankrijk",
  "Frans-Polynesië",
  "French Southern and Antarctic Lands",
  "Gabon",
  "Gambia",
  "Gaza Strip",
  "Georgië",
  "Ghana",
  "Gibraltar",
  "Grenada",
  "Griekenland",
  "Groenland",
  "Guam",
  "Guatemala",
  "Guernsey",
  "Guinea",
  "Guinee-Bissau",
  "Guyana",
  "Haïti",
  "Heard Island and McDonald Islands",
  "Heilige Stoel",
  "Honduras",
  "Hongarije",
  "Hongkong",
  "Ierland",
  "IJsland",
  "India",
  "Indian Ocean",
  "Indonesië",
  "Irak",
  "Iran",
  "Isle of Man",
  "Israël",
  "Italië",
  "Ivoorkust",
  "Jamaica",
  "Jan Mayen",
  "Japan",
  "Jemen",
  "Jersey",
  "Jordanië",
  "Kaapverdië",
  "Kameroen",
  "Kazachstan",
  "Kenia",
  "Kirgizstan",
  "Kiribati",
  "Koeweit",
  "Kroatië",
  "Laos",
  "Lesotho",
  "Letland",
  "Libanon",
  "Liberia",
  "Libië",
  "Liechtenstein",
  "Litouwen",
  "Luxemburg",
  "Macao",
  "Macedonië",
  "Madagaskar",
  "Malawi",
  "Maldiven",
  "Maleisië",
  "Mali",
  "Malta",
  "Marokko",
  "Marshall Islands",
  "Mauritanië",
  "Mauritius",
  "Mayotte",
  "Mexico",
  "Micronesia, Federated States of",
  "Moldavië",
  "Monaco",
  "Mongolië",
  "Montenegro",
  "Montserrat",
  "Mozambique",
  "Myanmar",
  "Namibië",
  "Nauru",
  "Navassa Island",
  "Nederland",
  "Nederlandse Antillen",
  "Nepal",
  "Ngwane",
  "Nicaragua",
  "Nieuw-Caledonië",
  "Nieuw-Zeeland",
  "Niger",
  "Nigeria",
  "Niue",
  "Noordelijke Marianen",
  "Noord-Korea",
  "Noorwegen",
  "Norfolk Island",
  "Oekraïne",
  "Oezbekistan",
  "Oman",
  "Oostenrijk",
  "Pacific Ocean",
  "Pakistan",
  "Palau",
  "Panama",
  "Papoea-Nieuw-Guinea",
  "Paracel Islands",
  "Paraguay",
  "Peru",
  "Pitcairn",
  "Polen",
  "Portugal",
  "Puerto Rico",
  "Qatar",
  "Roemenië",
  "Rusland",
  "Rwanda",
  "Saint Helena",
  "Saint Lucia",
  "Saint Vincent en de Grenadines",
  "Saint-Pierre en Miquelon",
  "Salomon",
  "Samoa",
  "San Marino",
  "São Tomé en Principe",
  "Saudi-Arabië",
  "Senegal",
  "Servië",
  "Seychellen",
  "Sierra Leone",
  "Singapore",
  "Sint-Kitts en Nevis",
  "Slovenië",
  "Slowakije",
  "Soedan",
  "Somalië",
  "South Georgia and the South Sandwich Islands",
  "Southern Ocean",
  "Spanje",
  "Spratly Islands",
  "Sri Lanka",
  "Suriname",
  "Svalbard",
  "Syrië",
  "Tadzjikistan",
  "Taiwan",
  "Tanzania",
  "Thailand",
  "Timor Leste",
  "Togo",
  "Tokelau",
  "Tonga",
  "Trinidad en Tobago",
  "Tsjaad",
  "Tsjechië",
  "Tunesië",
  "Turkije",
  "Turkmenistan",
  "Turks-en Caicoseilanden",
  "Tuvalu",
  "Uganda",
  "Uruguay",
  "Vanuatu",
  "Venezuela",
  "Verenigd Koninkrijk",
  "Verenigde Arabische Emiraten",
  "Verenigde Staten van Amerika",
  "Vietnam",
  "Wake Island",
  "Wallis en Futuna",
  "Wereld",
  "West Bank",
  "Westelijke Sahara",
  "Zambia",
  "Zimbabwe",
  "Zuid-Afrika",
  "Zuid-Korea",
  "Zweden",
  "Zwitserland"
];

},{}],614:[function(require,module,exports){
module["exports"] = [
  "Nederland"
];

},{}],615:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.city = require("./city");
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.default_country = require("./default_country");

},{"./building_number":609,"./city":610,"./city_prefix":611,"./city_suffix":612,"./country":613,"./default_country":614,"./postcode":616,"./secondary_address":617,"./state":618,"./street_address":619,"./street_name":620,"./street_suffix":621}],616:[function(require,module,exports){
module["exports"] = [
  "#### ??"
];

},{}],617:[function(require,module,exports){
module["exports"] = [
  "1 hoog",
  "2 hoog",
  "3 hoog"
];

},{}],618:[function(require,module,exports){
module["exports"] = [
  "Noord-Holland",
  "Zuid-Holland",
  "Utrecht",
  "Zeeland",
  "Overijssel",
  "Gelderland",
  "Drenthe",
  "Friesland",
  "Groningen",
  "Noord-Brabant",
  "Limburg",
  "Flevoland"
];

},{}],619:[function(require,module,exports){
arguments[4][63][0].apply(exports,arguments)
},{"dup":63}],620:[function(require,module,exports){
arguments[4][526][0].apply(exports,arguments)
},{"dup":526}],621:[function(require,module,exports){
module["exports"] = [
  "straat",
  "laan",
  "weg",
  "plantsoen",
  "park"
];

},{}],622:[function(require,module,exports){
arguments[4][221][0].apply(exports,arguments)
},{"./suffix":623,"dup":221}],623:[function(require,module,exports){
module["exports"] = [
  "BV",
  "V.O.F.",
  "Group",
  "en Zonen"
];

},{}],624:[function(require,module,exports){
var nl = {};
module['exports'] = nl;
nl.title = "Dutch";
nl.address = require("./address");
nl.company = require("./company");
nl.internet = require("./internet");
nl.lorem = require("./lorem");
nl.name = require("./name");
nl.phone_number = require("./phone_number");

},{"./address":615,"./company":622,"./internet":627,"./lorem":628,"./name":632,"./phone_number":639}],625:[function(require,module,exports){
module["exports"] = [
  "nl",
  "com",
  "net",
  "org"
];

},{}],626:[function(require,module,exports){
arguments[4][74][0].apply(exports,arguments)
},{"dup":74}],627:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"./domain_suffix":625,"./free_email":626,"dup":75}],628:[function(require,module,exports){
arguments[4][199][0].apply(exports,arguments)
},{"./supplemental":629,"./words":630,"dup":199}],629:[function(require,module,exports){
arguments[4][200][0].apply(exports,arguments)
},{"dup":200}],630:[function(require,module,exports){
arguments[4][77][0].apply(exports,arguments)
},{"dup":77}],631:[function(require,module,exports){
module["exports"] = [
  "Amber",
  "Anna",
  "Anne",
  "Anouk",
  "Bas",
  "Bram",
  "Britt",
  "Daan",
  "Emma",
  "Eva",
  "Femke",
  "Finn",
  "Fleur",
  "Iris",
  "Isa",
  "Jan",
  "Jasper",
  "Jayden",
  "Jesse",
  "Johannes",
  "Julia",
  "Julian",
  "Kevin",
  "Lars",
  "Lieke",
  "Lisa",
  "Lotte",
  "Lucas",
  "Luuk",
  "Maud",
  "Max",
  "Mike",
  "Milan",
  "Nick",
  "Niels",
  "Noa",
  "Rick",
  "Roos",
  "Ruben",
  "Sander",
  "Sanne",
  "Sem",
  "Sophie",
  "Stijn",
  "Sven",
  "Thijs",
  "Thijs",
  "Thomas",
  "Tim",
  "Tom"
];

},{}],632:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.tussenvoegsel = require("./tussenvoegsel");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.name = require("./name");

},{"./first_name":631,"./last_name":633,"./name":634,"./prefix":635,"./suffix":636,"./tussenvoegsel":637}],633:[function(require,module,exports){
module["exports"] = [
  "Bakker",
  "Beek",
  "Berg",
  "Boer",
  "Bos",
  "Bosch",
  "Brink",
  "Broek",
  "Brouwer",
  "Bruin",
  "Dam",
  "Dekker",
  "Dijk",
  "Dijkstra",
  "Graaf",
  "Groot",
  "Haan",
  "Hendriks",
  "Heuvel",
  "Hoek",
  "Jacobs",
  "Jansen",
  "Janssen",
  "Jong",
  "Klein",
  "Kok",
  "Koning",
  "Koster",
  "Leeuwen",
  "Linden",
  "Maas",
  "Meer",
  "Meijer",
  "Mulder",
  "Peters",
  "Ruiter",
  "Schouten",
  "Smit",
  "Smits",
  "Stichting",
  "Veen",
  "Ven",
  "Vermeulen",
  "Visser",
  "Vliet",
  "Vos",
  "Vries",
  "Wal",
  "Willems",
  "Wit"
];

},{}],634:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{first_name} #{last_name}",
  "#{first_name} #{last_name} #{suffix}",
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name}",
  "#{first_name} #{tussenvoegsel} #{last_name}",
  "#{first_name} #{tussenvoegsel} #{last_name}"
];

},{}],635:[function(require,module,exports){
module["exports"] = [
  "Dhr.",
  "Mevr. Dr.",
  "Bsc",
  "Msc",
  "Prof."
];

},{}],636:[function(require,module,exports){
arguments[4][590][0].apply(exports,arguments)
},{"dup":590}],637:[function(require,module,exports){
module["exports"] = [
  "van",
  "van de",
  "van den",
  "van 't",
  "van het",
  "de",
  "den"
];

},{}],638:[function(require,module,exports){
module["exports"] = [
  "(####) ######",
  "##########",
  "06########",
  "06 #### ####"
];

},{}],639:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":638,"dup":85}],640:[function(require,module,exports){
arguments[4][129][0].apply(exports,arguments)
},{"dup":129}],641:[function(require,module,exports){
arguments[4][87][0].apply(exports,arguments)
},{"dup":87}],642:[function(require,module,exports){
module["exports"] = [
  "Aleksandrów Kujawski",
  "Aleksandrów Łódzki",
  "Alwernia",
  "Andrychów",
  "Annopol",
  "Augustów",
  "Babimost",
  "Baborów",
  "Baranów Sandomierski",
  "Barcin",
  "Barczewo",
  "Bardo",
  "Barlinek",
  "Bartoszyce",
  "Barwice",
  "Bełchatów",
  "Bełżyce",
  "Będzin",
  "Biała",
  "Biała Piska",
  "Biała Podlaska",
  "Biała Rawska",
  "Białobrzegi",
  "Białogard",
  "Biały Bór",
  "Białystok",
  "Biecz",
  "Bielawa",
  "Bielsk Podlaski",
  "Bielsko-Biała",
  "Bieruń",
  "Bierutów",
  "Bieżuń",
  "Biłgoraj",
  "Biskupiec",
  "Bisztynek",
  "Blachownia",
  "Błaszki",
  "Błażowa",
  "Błonie",
  "Bobolice",
  "Bobowa",
  "Bochnia",
  "Bodzentyn",
  "Bogatynia",
  "Boguchwała",
  "Boguszów-Gorce",
  "Bojanowo",
  "Bolesławiec",
  "Bolków",
  "Borek Wielkopolski",
  "Borne Sulinowo",
  "Braniewo",
  "Brańsk",
  "Brodnica",
  "Brok",
  "Brusy",
  "Brwinów",
  "Brzeg",
  "Brzeg Dolny",
  "Brzesko",
  "Brzeszcze",
  "Brześć Kujawski",
  "Brzeziny",
  "Brzostek",
  "Brzozów",
  "Buk",
  "Bukowno",
  "Busko-Zdrój",
  "Bychawa",
  "Byczyna",
  "Bydgoszcz",
  "Bystrzyca Kłodzka",
  "Bytom",
  "Bytom Odrzański",
  "Bytów",
  "Cedynia",
  "Chełm",
  "Chełmek",
  "Chełmno",
  "Chełmża",
  "Chęciny",
  "Chmielnik",
  "Chocianów",
  "Chociwel",
  "Chodecz",
  "Chodzież",
  "Chojna",
  "Chojnice",
  "Chojnów",
  "Choroszcz",
  "Chorzele",
  "Chorzów",
  "Choszczno",
  "Chrzanów",
  "Ciechanowiec",
  "Ciechanów",
  "Ciechocinek",
  "Cieszanów",
  "Cieszyn",
  "Ciężkowice",
  "Cybinka",
  "Czaplinek",
  "Czarna Białostocka",
  "Czarna Woda",
  "Czarne",
  "Czarnków",
  "Czchów",
  "Czechowice-Dziedzice",
  "Czeladź",
  "Czempiń",
  "Czerniejewo",
  "Czersk",
  "Czerwieńsk",
  "Czerwionka-Leszczyny",
  "Częstochowa",
  "Człopa",
  "Człuchów",
  "Czyżew",
  "Ćmielów",
  "Daleszyce",
  "Darłowo",
  "Dąbie",
  "Dąbrowa Białostocka",
  "Dąbrowa Górnicza",
  "Dąbrowa Tarnowska",
  "Debrzno",
  "Dębica",
  "Dęblin",
  "Dębno",
  "Dobczyce",
  "Dobiegniew",
  "Dobra (powiat łobeski)",
  "Dobra (powiat turecki)",
  "Dobre Miasto",
  "Dobrodzień",
  "Dobrzany",
  "Dobrzyń nad Wisłą",
  "Dolsk",
  "Drawno",
  "Drawsko Pomorskie",
  "Drezdenko",
  "Drobin",
  "Drohiczyn",
  "Drzewica",
  "Dukla",
  "Duszniki-Zdrój",
  "Dynów",
  "Działdowo",
  "Działoszyce",
  "Działoszyn",
  "Dzierzgoń",
  "Dzierżoniów",
  "Dziwnów",
  "Elbląg",
  "Ełk",
  "Frampol",
  "Frombork",
  "Garwolin",
  "Gąbin",
  "Gdańsk",
  "Gdynia",
  "Giżycko",
  "Glinojeck",
  "Gliwice",
  "Głogów",
  "Głogów Małopolski",
  "Głogówek",
  "Głowno",
  "Głubczyce",
  "Głuchołazy",
  "Głuszyca",
  "Gniew",
  "Gniewkowo",
  "Gniezno",
  "Gogolin",
  "Golczewo",
  "Goleniów",
  "Golina",
  "Golub-Dobrzyń",
  "Gołańcz",
  "Gołdap",
  "Goniądz",
  "Gorlice",
  "Gorzów Śląski",
  "Gorzów Wielkopolski",
  "Gostynin",
  "Gostyń",
  "Gościno",
  "Gozdnica",
  "Góra",
  "Góra Kalwaria",
  "Górowo Iławeckie",
  "Górzno",
  "Grabów nad Prosną",
  "Grajewo",
  "Grodków",
  "Grodzisk Mazowiecki",
  "Grodzisk Wielkopolski",
  "Grójec",
  "Grudziądz",
  "Grybów",
  "Gryfice",
  "Gryfino",
  "Gryfów Śląski",
  "Gubin",
  "Hajnówka",
  "Halinów",
  "Hel",
  "Hrubieszów",
  "Iława",
  "Iłowa",
  "Iłża",
  "Imielin",
  "Inowrocław",
  "Ińsko",
  "Iwonicz-Zdrój",
  "Izbica Kujawska",
  "Jabłonowo Pomorskie",
  "Janikowo",
  "Janowiec Wielkopolski",
  "Janów Lubelski",
  "Jarocin",
  "Jarosław",
  "Jasień",
  "Jasło",
  "Jastarnia",
  "Jastrowie",
  "Jastrzębie-Zdrój",
  "Jawor",
  "Jaworzno",
  "Jaworzyna Śląska",
  "Jedlicze",
  "Jedlina-Zdrój",
  "Jedwabne",
  "Jelcz-Laskowice",
  "Jelenia Góra",
  "Jeziorany",
  "Jędrzejów",
  "Jordanów",
  "Józefów (powiat biłgorajski)",
  "Józefów (powiat otwocki)",
  "Jutrosin",
  "Kalety",
  "Kalisz",
  "Kalisz Pomorski",
  "Kalwaria Zebrzydowska",
  "Kałuszyn",
  "Kamienna Góra",
  "Kamień Krajeński",
  "Kamień Pomorski",
  "Kamieńsk",
  "Kańczuga",
  "Karczew",
  "Kargowa",
  "Karlino",
  "Karpacz",
  "Kartuzy",
  "Katowice",
  "Kazimierz Dolny",
  "Kazimierza Wielka",
  "Kąty Wrocławskie",
  "Kcynia",
  "Kędzierzyn-Koźle",
  "Kępice",
  "Kępno",
  "Kętrzyn",
  "Kęty",
  "Kielce",
  "Kietrz",
  "Kisielice",
  "Kleczew",
  "Kleszczele",
  "Kluczbork",
  "Kłecko",
  "Kłobuck",
  "Kłodawa",
  "Kłodzko",
  "Knurów",
  "Knyszyn",
  "Kobylin",
  "Kobyłka",
  "Kock",
  "Kolbuszowa",
  "Kolno",
  "Kolonowskie",
  "Koluszki",
  "Kołaczyce",
  "Koło",
  "Kołobrzeg",
  "Koniecpol",
  "Konin",
  "Konstancin-Jeziorna",
  "Konstantynów Łódzki",
  "Końskie",
  "Koprzywnica",
  "Korfantów",
  "Koronowo",
  "Korsze",
  "Kosów Lacki",
  "Kostrzyn",
  "Kostrzyn nad Odrą",
  "Koszalin",
  "Kościan",
  "Kościerzyna",
  "Kowal",
  "Kowalewo Pomorskie",
  "Kowary",
  "Koziegłowy",
  "Kozienice",
  "Koźmin Wielkopolski",
  "Kożuchów",
  "Kórnik",
  "Krajenka",
  "Kraków",
  "Krapkowice",
  "Krasnobród",
  "Krasnystaw",
  "Kraśnik",
  "Krobia",
  "Krosno",
  "Krosno Odrzańskie",
  "Krośniewice",
  "Krotoszyn",
  "Kruszwica",
  "Krynica Morska",
  "Krynica-Zdrój",
  "Krynki",
  "Krzanowice",
  "Krzepice",
  "Krzeszowice",
  "Krzywiń",
  "Krzyż Wielkopolski",
  "Książ Wielkopolski",
  "Kudowa-Zdrój",
  "Kunów",
  "Kutno",
  "Kuźnia Raciborska",
  "Kwidzyn",
  "Lądek-Zdrój",
  "Legionowo",
  "Legnica",
  "Lesko",
  "Leszno",
  "Leśna",
  "Leśnica",
  "Lewin Brzeski",
  "Leżajsk",
  "Lębork",
  "Lędziny",
  "Libiąż",
  "Lidzbark",
  "Lidzbark Warmiński",
  "Limanowa",
  "Lipiany",
  "Lipno",
  "Lipsk",
  "Lipsko",
  "Lubaczów",
  "Lubań",
  "Lubartów",
  "Lubawa",
  "Lubawka",
  "Lubień Kujawski",
  "Lubin",
  "Lublin",
  "Lubliniec",
  "Lubniewice",
  "Lubomierz",
  "Luboń",
  "Lubraniec",
  "Lubsko",
  "Lwówek",
  "Lwówek Śląski",
  "Łabiszyn",
  "Łańcut",
  "Łapy",
  "Łasin",
  "Łask",
  "Łaskarzew",
  "Łaszczów",
  "Łaziska Górne",
  "Łazy",
  "Łeba",
  "Łęczna",
  "Łęczyca",
  "Łęknica",
  "Łobez",
  "Łobżenica",
  "Łochów",
  "Łomianki",
  "Łomża",
  "Łosice",
  "Łowicz",
  "Łódź",
  "Łuków",
  "Maków Mazowiecki",
  "Maków Podhalański",
  "Malbork",
  "Małogoszcz",
  "Małomice",
  "Margonin",
  "Marki",
  "Maszewo",
  "Miasteczko Śląskie",
  "Miastko",
  "Michałowo",
  "Miechów",
  "Miejska Górka",
  "Mielec",
  "Mieroszów",
  "Mieszkowice",
  "Międzybórz",
  "Międzychód",
  "Międzylesie",
  "Międzyrzec Podlaski",
  "Międzyrzecz",
  "Międzyzdroje",
  "Mikołajki",
  "Mikołów",
  "Mikstat",
  "Milanówek",
  "Milicz",
  "Miłakowo",
  "Miłomłyn",
  "Miłosław",
  "Mińsk Mazowiecki",
  "Mirosławiec",
  "Mirsk",
  "Mława",
  "Młynary",
  "Mogielnica",
  "Mogilno",
  "Mońki",
  "Morąg",
  "Mordy",
  "Moryń",
  "Mosina",
  "Mrągowo",
  "Mrocza",
  "Mszana Dolna",
  "Mszczonów",
  "Murowana Goślina",
  "Muszyna",
  "Mysłowice",
  "Myszków",
  "Myszyniec",
  "Myślenice",
  "Myślibórz",
  "Nakło nad Notecią",
  "Nałęczów",
  "Namysłów",
  "Narol",
  "Nasielsk",
  "Nekla",
  "Nidzica",
  "Niemcza",
  "Niemodlin",
  "Niepołomice",
  "Nieszawa",
  "Nisko",
  "Nowa Dęba",
  "Nowa Ruda",
  "Nowa Sarzyna",
  "Nowa Sól",
  "Nowe",
  "Nowe Brzesko",
  "Nowe Miasteczko",
  "Nowe Miasto Lubawskie",
  "Nowe Miasto nad Pilicą",
  "Nowe Skalmierzyce",
  "Nowe Warpno",
  "Nowogard",
  "Nowogrodziec",
  "Nowogród",
  "Nowogród Bobrzański",
  "Nowy Dwór Gdański",
  "Nowy Dwór Mazowiecki",
  "Nowy Sącz",
  "Nowy Staw",
  "Nowy Targ",
  "Nowy Tomyśl",
  "Nowy Wiśnicz",
  "Nysa",
  "Oborniki",
  "Oborniki Śląskie",
  "Obrzycko",
  "Odolanów",
  "Ogrodzieniec",
  "Okonek",
  "Olecko",
  "Olesno",
  "Oleszyce",
  "Oleśnica",
  "Olkusz",
  "Olsztyn",
  "Olsztynek",
  "Olszyna",
  "Oława",
  "Opalenica",
  "Opatów",
  "Opoczno",
  "Opole",
  "Opole Lubelskie",
  "Orneta",
  "Orzesze",
  "Orzysz",
  "Osieczna",
  "Osiek",
  "Ostrołęka",
  "Ostroróg",
  "Ostrowiec Świętokrzyski",
  "Ostróda",
  "Ostrów Lubelski",
  "Ostrów Mazowiecka",
  "Ostrów Wielkopolski",
  "Ostrzeszów",
  "Ośno Lubuskie",
  "Oświęcim",
  "Otmuchów",
  "Otwock",
  "Ozimek",
  "Ozorków",
  "Ożarów",
  "Ożarów Mazowiecki",
  "Pabianice",
  "Paczków",
  "Pajęczno",
  "Pakość",
  "Parczew",
  "Pasłęk",
  "Pasym",
  "Pelplin",
  "Pełczyce",
  "Piaseczno",
  "Piaski",
  "Piastów",
  "Piechowice",
  "Piekary Śląskie",
  "Pieniężno",
  "Pieńsk",
  "Pieszyce",
  "Pilawa",
  "Pilica",
  "Pilzno",
  "Piła",
  "Piława Górna",
  "Pińczów",
  "Pionki",
  "Piotrków Kujawski",
  "Piotrków Trybunalski",
  "Pisz",
  "Piwniczna-Zdrój",
  "Pleszew",
  "Płock",
  "Płońsk",
  "Płoty",
  "Pniewy",
  "Pobiedziska",
  "Poddębice",
  "Podkowa Leśna",
  "Pogorzela",
  "Polanica-Zdrój",
  "Polanów",
  "Police",
  "Polkowice",
  "Połaniec",
  "Połczyn-Zdrój",
  "Poniatowa",
  "Poniec",
  "Poręba",
  "Poznań",
  "Prabuty",
  "Praszka",
  "Prochowice",
  "Proszowice",
  "Prószków",
  "Pruchnik",
  "Prudnik",
  "Prusice",
  "Pruszcz Gdański",
  "Pruszków",
  "Przasnysz",
  "Przecław",
  "Przedbórz",
  "Przedecz",
  "Przemków",
  "Przemyśl",
  "Przeworsk",
  "Przysucha",
  "Pszczyna",
  "Pszów",
  "Puck",
  "Puławy",
  "Pułtusk",
  "Puszczykowo",
  "Pyrzyce",
  "Pyskowice",
  "Pyzdry",
  "Rabka-Zdrój",
  "Raciąż",
  "Racibórz",
  "Radków",
  "Radlin",
  "Radłów",
  "Radom",
  "Radomsko",
  "Radomyśl Wielki",
  "Radymno",
  "Radziejów",
  "Radzionków",
  "Radzymin",
  "Radzyń Chełmiński",
  "Radzyń Podlaski",
  "Rajgród",
  "Rakoniewice",
  "Raszków",
  "Rawa Mazowiecka",
  "Rawicz",
  "Recz",
  "Reda",
  "Rejowiec Fabryczny",
  "Resko",
  "Reszel",
  "Rogoźno",
  "Ropczyce",
  "Różan",
  "Ruciane-Nida",
  "Ruda Śląska",
  "Rudnik nad Sanem",
  "Rumia",
  "Rybnik",
  "Rychwał",
  "Rydułtowy",
  "Rydzyna",
  "Ryglice",
  "Ryki",
  "Rymanów",
  "Ryn",
  "Rypin",
  "Rzepin",
  "Rzeszów",
  "Rzgów",
  "Sandomierz",
  "Sanok",
  "Sejny",
  "Serock",
  "Sędziszów",
  "Sędziszów Małopolski",
  "Sępopol",
  "Sępólno Krajeńskie",
  "Sianów",
  "Siechnice",
  "Siedlce",
  "Siemianowice Śląskie",
  "Siemiatycze",
  "Sieniawa",
  "Sieradz",
  "Sieraków",
  "Sierpc",
  "Siewierz",
  "Skalbmierz",
  "Skała",
  "Skarszewy",
  "Skaryszew",
  "Skarżysko-Kamienna",
  "Skawina",
  "Skępe",
  "Skierniewice",
  "Skoczów",
  "Skoki",
  "Skórcz",
  "Skwierzyna",
  "Sława",
  "Sławków",
  "Sławno",
  "Słomniki",
  "Słubice",
  "Słupca",
  "Słupsk",
  "Sobótka",
  "Sochaczew",
  "Sokołów Małopolski",
  "Sokołów Podlaski",
  "Sokółka",
  "Solec Kujawski",
  "Sompolno",
  "Sopot",
  "Sosnowiec",
  "Sośnicowice",
  "Stalowa Wola",
  "Starachowice",
  "Stargard Szczeciński",
  "Starogard Gdański",
  "Stary Sącz",
  "Staszów",
  "Stawiski",
  "Stawiszyn",
  "Stąporków",
  "Stęszew",
  "Stoczek Łukowski",
  "Stronie Śląskie",
  "Strumień",
  "Stryków",
  "Strzegom",
  "Strzelce Krajeńskie",
  "Strzelce Opolskie",
  "Strzelin",
  "Strzelno",
  "Strzyżów",
  "Sucha Beskidzka",
  "Suchań",
  "Suchedniów",
  "Suchowola",
  "Sulechów",
  "Sulejów",
  "Sulejówek",
  "Sulęcin",
  "Sulmierzyce",
  "Sułkowice",
  "Supraśl",
  "Suraż",
  "Susz",
  "Suwałki",
  "Swarzędz",
  "Syców",
  "Szadek",
  "Szamocin",
  "Szamotuły",
  "Szczawnica",
  "Szczawno-Zdrój",
  "Szczebrzeszyn",
  "Szczecin",
  "Szczecinek",
  "Szczekociny",
  "Szczucin",
  "Szczuczyn",
  "Szczyrk",
  "Szczytna",
  "Szczytno",
  "Szepietowo",
  "Szklarska Poręba",
  "Szlichtyngowa",
  "Szprotawa",
  "Sztum",
  "Szubin",
  "Szydłowiec",
  "Ścinawa",
  "Ślesin",
  "Śmigiel",
  "Śrem",
  "Środa Śląska",
  "Środa Wielkopolska",
  "Świątniki Górne",
  "Świdnica",
  "Świdnik",
  "Świdwin",
  "Świebodzice",
  "Świebodzin",
  "Świecie",
  "Świeradów-Zdrój",
  "Świerzawa",
  "Świętochłowice",
  "Świnoujście",
  "Tarczyn",
  "Tarnobrzeg",
  "Tarnogród",
  "Tarnowskie Góry",
  "Tarnów",
  "Tczew",
  "Terespol",
  "Tłuszcz",
  "Tolkmicko",
  "Tomaszów Lubelski",
  "Tomaszów Mazowiecki",
  "Toruń",
  "Torzym",
  "Toszek",
  "Trzcianka",
  "Trzciel",
  "Trzcińsko-Zdrój",
  "Trzebiatów",
  "Trzebinia",
  "Trzebnica",
  "Trzemeszno",
  "Tuchola",
  "Tuchów",
  "Tuczno",
  "Tuliszków",
  "Turek",
  "Tuszyn",
  "Twardogóra",
  "Tychowo",
  "Tychy",
  "Tyczyn",
  "Tykocin",
  "Tyszowce",
  "Ujazd",
  "Ujście",
  "Ulanów",
  "Uniejów",
  "Ustka",
  "Ustroń",
  "Ustrzyki Dolne",
  "Wadowice",
  "Wałbrzych",
  "Wałcz",
  "Warka",
  "Warszawa",
  "Warta",
  "Wasilków",
  "Wąbrzeźno",
  "Wąchock",
  "Wągrowiec",
  "Wąsosz",
  "Wejherowo",
  "Węgliniec",
  "Węgorzewo",
  "Węgorzyno",
  "Węgrów",
  "Wiązów",
  "Wieleń",
  "Wielichowo",
  "Wieliczka",
  "Wieluń",
  "Wieruszów",
  "Więcbork",
  "Wilamowice",
  "Wisła",
  "Witkowo",
  "Witnica",
  "Wleń",
  "Władysławowo",
  "Włocławek",
  "Włodawa",
  "Włoszczowa",
  "Wodzisław Śląski",
  "Wojcieszów",
  "Wojkowice",
  "Wojnicz",
  "Wolbórz",
  "Wolbrom",
  "Wolin",
  "Wolsztyn",
  "Wołczyn",
  "Wołomin",
  "Wołów",
  "Woźniki",
  "Wrocław",
  "Wronki",
  "Września",
  "Wschowa",
  "Wyrzysk",
  "Wysoka",
  "Wysokie Mazowieckie",
  "Wyszków",
  "Wyszogród",
  "Wyśmierzyce",
  "Zabłudów",
  "Zabrze",
  "Zagórów",
  "Zagórz",
  "Zakliczyn",
  "Zakopane",
  "Zakroczym",
  "Zalewo",
  "Zambrów",
  "Zamość",
  "Zator",
  "Zawadzkie",
  "Zawichost",
  "Zawidów",
  "Zawiercie",
  "Ząbki",
  "Ząbkowice Śląskie",
  "Zbąszynek",
  "Zbąszyń",
  "Zduny",
  "Zduńska Wola",
  "Zdzieszowice",
  "Zelów",
  "Zgierz",
  "Zgorzelec",
  "Zielona Góra",
  "Zielonka",
  "Ziębice",
  "Złocieniec",
  "Złoczew",
  "Złotoryja",
  "Złotów",
  "Złoty Stok",
  "Zwierzyniec",
  "Zwoleń",
  "Żabno",
  "Żagań",
  "Żarki",
  "Żarów",
  "Żary",
  "Żelechów",
  "Żerków",
  "Żmigród",
  "Żnin",
  "Żory",
  "Żukowo",
  "Żuromin",
  "Żychlin",
  "Żyrardów",
  "Żywiec"
];

},{}],643:[function(require,module,exports){
module["exports"] = [
  "Afganistan",
  "Albania",
  "Algieria",
  "Andora",
  "Angola",
  "Antigua i Barbuda",
  "Arabia Saudyjska",
  "Argentyna",
  "Armenia",
  "Australia",
  "Austria",
  "Azerbejdżan",
  "Bahamy",
  "Bahrajn",
  "Bangladesz",
  "Barbados",
  "Belgia",
  "Belize",
  "Benin",
  "Bhutan",
  "Białoruś",
  "Birma",
  "Boliwia",
  "Sucre",
  "Bośnia i Hercegowina",
  "Botswana",
  "Brazylia",
  "Brunei",
  "Bułgaria",
  "Burkina Faso",
  "Burundi",
  "Chile",
  "Chiny",
  "Chorwacja",
  "Cypr",
  "Czad",
  "Czarnogóra",
  "Czechy",
  "Dania",
  "Demokratyczna Republika Konga",
  "Dominika",
  "Dominikana",
  "Dżibuti",
  "Egipt",
  "Ekwador",
  "Erytrea",
  "Estonia",
  "Etiopia",
  "Fidżi",
  "Filipiny",
  "Finlandia",
  "Francja",
  "Gabon",
  "Gambia",
  "Ghana",
  "Grecja",
  "Grenada",
  "Gruzja",
  "Gujana",
  "Gwatemala",
  "Gwinea",
  "Gwinea Bissau",
  "Gwinea Równikowa",
  "Haiti",
  "Hiszpania",
  "Holandia",
  "Haga",
  "Honduras",
  "Indie",
  "Indonezja",
  "Irak",
  "Iran",
  "Irlandia",
  "Islandia",
  "Izrael",
  "Jamajka",
  "Japonia",
  "Jemen",
  "Jordania",
  "Kambodża",
  "Kamerun",
  "Kanada",
  "Katar",
  "Kazachstan",
  "Kenia",
  "Kirgistan",
  "Kiribati",
  "Kolumbia",
  "Komory",
  "Kongo",
  "Korea Południowa",
  "Korea Północna",
  "Kostaryka",
  "Kuba",
  "Kuwejt",
  "Laos",
  "Lesotho",
  "Liban",
  "Liberia",
  "Libia",
  "Liechtenstein",
  "Litwa",
  "Luksemburg",
  "Łotwa",
  "Macedonia",
  "Madagaskar",
  "Malawi",
  "Malediwy",
  "Malezja",
  "Mali",
  "Malta",
  "Maroko",
  "Mauretania",
  "Mauritius",
  "Meksyk",
  "Mikronezja",
  "Mołdawia",
  "Monako",
  "Mongolia",
  "Mozambik",
  "Namibia",
  "Nauru",
  "Nepal",
  "Niemcy",
  "Niger",
  "Nigeria",
  "Nikaragua",
  "Norwegia",
  "Nowa Zelandia",
  "Oman",
  "Pakistan",
  "Palau",
  "Panama",
  "Papua-Nowa Gwinea",
  "Paragwaj",
  "Peru",
  "Polska",
  "322 575",
  "Portugalia",
  "Republika Południowej Afryki",
  "Republika Środkowoafrykańska",
  "Republika Zielonego Przylądka",
  "Rosja",
  "Rumunia",
  "Rwanda",
  "Saint Kitts i Nevis",
  "Saint Lucia",
  "Saint Vincent i Grenadyny",
  "Salwador",
  "Samoa",
  "San Marino",
  "Senegal",
  "Serbia",
  "Seszele",
  "Sierra Leone",
  "Singapur",
  "Słowacja",
  "Słowenia",
  "Somalia",
  "Sri Lanka",
  "Stany Zjednoczone",
  "Suazi",
  "Sudan",
  "Sudan Południowy",
  "Surinam",
  "Syria",
  "Szwajcaria",
  "Szwecja",
  "Tadżykistan",
  "Tajlandia",
  "Tanzania",
  "Timor Wschodni",
  "Togo",
  "Tonga",
  "Trynidad i Tobago",
  "Tunezja",
  "Turcja",
  "Turkmenistan",
  "Tuvalu",
  "Funafuti",
  "Uganda",
  "Ukraina",
  "Urugwaj",
  2008,
  "Uzbekistan",
  "Vanuatu",
  "Watykan",
  "Wenezuela",
  "Węgry",
  "Wielka Brytania",
  "Wietnam",
  "Włochy",
  "Wybrzeże Kości Słoniowej",
  "Wyspy Marshalla",
  "Wyspy Salomona",
  "Wyspy Świętego Tomasza i Książęca",
  "Zambia",
  "Zimbabwe",
  "Zjednoczone Emiraty Arabskie"
];

},{}],644:[function(require,module,exports){
module["exports"] = [
  "Polska"
];

},{}],645:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.country = require("./country");
address.building_number = require("./building_number");
address.street_prefix = require("./street_prefix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city_name = require("./city_name");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":640,"./city":641,"./city_name":642,"./country":643,"./default_country":644,"./postcode":646,"./secondary_address":647,"./state":648,"./state_abbr":649,"./street_address":650,"./street_name":651,"./street_prefix":652}],646:[function(require,module,exports){
module["exports"] = [
  "##-###"
];

},{}],647:[function(require,module,exports){
arguments[4][140][0].apply(exports,arguments)
},{"dup":140}],648:[function(require,module,exports){
module["exports"] = [
  "Dolnośląskie",
  "Kujawsko-pomorskie",
  "Lubelskie",
  "Lubuskie",
  "Łódzkie",
  "Małopolskie",
  "Mazowieckie",
  "Opolskie",
  "Podkarpackie",
  "Podlaskie",
  "Pomorskie",
  "Śląskie",
  "Świętokrzyskie",
  "Warmińsko-mazurskie",
  "Wielkopolskie",
  "Zachodniopomorskie"
];

},{}],649:[function(require,module,exports){
module["exports"] = [
  "DŚ",
  "KP",
  "LB",
  "LS",
  "ŁD",
  "MP",
  "MZ",
  "OP",
  "PK",
  "PL",
  "PM",
  "ŚL",
  "ŚK",
  "WM",
  "WP",
  "ZP"
];

},{}],650:[function(require,module,exports){
arguments[4][63][0].apply(exports,arguments)
},{"dup":63}],651:[function(require,module,exports){
module["exports"] = [
  "#{street_prefix} #{Name.last_name}"
];

},{}],652:[function(require,module,exports){
module["exports"] = [
  "ul.",
  "al."
];

},{}],653:[function(require,module,exports){
module["exports"] = [
  "50-###-##-##",
  "51-###-##-##",
  "53-###-##-##",
  "57-###-##-##",
  "60-###-##-##",
  "66-###-##-##",
  "69-###-##-##",
  "72-###-##-##",
  "73-###-##-##",
  "78-###-##-##",
  "79-###-##-##",
  "88-###-##-##"
];

},{}],654:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"./formats":653,"dup":67}],655:[function(require,module,exports){
arguments[4][161][0].apply(exports,arguments)
},{"dup":161}],656:[function(require,module,exports){
arguments[4][162][0].apply(exports,arguments)
},{"dup":162}],657:[function(require,module,exports){
arguments[4][163][0].apply(exports,arguments)
},{"dup":163}],658:[function(require,module,exports){
arguments[4][164][0].apply(exports,arguments)
},{"dup":164}],659:[function(require,module,exports){
arguments[4][165][0].apply(exports,arguments)
},{"dup":165}],660:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.adjetive = require("./adjetive");
company.descriptor = require("./descriptor");
company.noun = require("./noun");
company.bs_verb = require("./bs_verb");
company.bs_adjective = require("./bs_adjective");
company.bs_noun = require("./bs_noun");
company.name = require("./name");

},{"./adjetive":655,"./bs_adjective":656,"./bs_noun":657,"./bs_verb":658,"./descriptor":659,"./name":661,"./noun":662,"./suffix":663}],661:[function(require,module,exports){
arguments[4][167][0].apply(exports,arguments)
},{"dup":167}],662:[function(require,module,exports){
arguments[4][168][0].apply(exports,arguments)
},{"dup":168}],663:[function(require,module,exports){
arguments[4][169][0].apply(exports,arguments)
},{"dup":169}],664:[function(require,module,exports){
var pl = {};
module['exports'] = pl;
pl.title = "Polish";
pl.name = require("./name");
pl.address = require("./address");
pl.company = require("./company");
pl.internet = require("./internet");
pl.lorem = require("./lorem");
pl.phone_number = require("./phone_number");
pl.cell_phone = require("./cell_phone");

},{"./address":645,"./cell_phone":654,"./company":660,"./internet":667,"./lorem":668,"./name":672,"./phone_number":678}],665:[function(require,module,exports){
module["exports"] = [
  "com",
  "pl",
  "com.pl",
  "net",
  "org"
];

},{}],666:[function(require,module,exports){
arguments[4][74][0].apply(exports,arguments)
},{"dup":74}],667:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"./domain_suffix":665,"./free_email":666,"dup":75}],668:[function(require,module,exports){
arguments[4][199][0].apply(exports,arguments)
},{"./supplemental":669,"./words":670,"dup":199}],669:[function(require,module,exports){
arguments[4][200][0].apply(exports,arguments)
},{"dup":200}],670:[function(require,module,exports){
arguments[4][77][0].apply(exports,arguments)
},{"dup":77}],671:[function(require,module,exports){
module["exports"] = [
  "Aaron",
  "Abraham",
  "Adam",
  "Adrian",
  "Atanazy",
  "Agaton",
  "Alan",
  "Albert",
  "Aleksander",
  "Aleksy",
  "Alfred",
  "Alwar",
  "Ambroży",
  "Anatol",
  "Andrzej",
  "Antoni",
  "Apollinary",
  "Apollo",
  "Arkady",
  "Arkadiusz",
  "Archibald",
  "Arystarch",
  "Arnold",
  "Arseniusz",
  "Artur",
  "August",
  "Baldwin",
  "Bazyli",
  "Benedykt",
  "Beniamin",
  "Bernard",
  "Bertrand",
  "Bertram",
  "Borys",
  "Brajan",
  "Bruno",
  "Cezary",
  "Cecyliusz",
  "Karol",
  "Krystian",
  "Krzysztof",
  "Klarencjusz",
  "Klaudiusz",
  "Klemens",
  "Konrad",
  "Konstanty",
  "Konstantyn",
  "Kornel",
  "Korneliusz",
  "Korneli",
  "Cyryl",
  "Cyrus",
  "Damian",
  "Daniel",
  "Dariusz",
  "Dawid",
  "Dionizy",
  "Demetriusz",
  "Dominik",
  "Donald",
  "Dorian",
  "Edgar",
  "Edmund",
  "Edward",
  "Edwin",
  "Efrem",
  "Efraim",
  "Eliasz",
  "Eleazar",
  "Emil",
  "Emanuel",
  "Erast",
  "Ernest",
  "Eugeniusz",
  "Eustracjusz",
  "Fabian",
  "Feliks",
  "Florian",
  "Franciszek",
  "Fryderyk",
  "Gabriel",
  "Gedeon",
  "Galfryd",
  "Jerzy",
  "Gerald",
  "Gerazym",
  "Gilbert",
  "Gonsalwy",
  "Grzegorz",
  "Gwido",
  "Harald",
  "Henryk",
  "Herbert",
  "Herman",
  "Hilary",
  "Horacy",
  "Hubert",
  "Hugo",
  "Ignacy",
  "Igor",
  "Hilarion",
  "Innocenty",
  "Hipolit",
  "Ireneusz",
  "Erwin",
  "Izaak",
  "Izajasz",
  "Izydor",
  "Jakub",
  "Jeremi",
  "Jeremiasz",
  "Hieronim",
  "Gerald",
  "Joachim",
  "Jan",
  "Janusz",
  "Jonatan",
  "Józef",
  "Jozue",
  "Julian",
  "Juliusz",
  "Justyn",
  "Kalistrat",
  "Kazimierz",
  "Wawrzyniec",
  "Laurenty",
  "Laurencjusz",
  "Łazarz",
  "Leon",
  "Leonard",
  "Leonid",
  "Leon",
  "Ludwik",
  "Łukasz",
  "Lucjan",
  "Magnus",
  "Makary",
  "Marceli",
  "Marek",
  "Marcin",
  "Mateusz",
  "Maurycy",
  "Maksym",
  "Maksymilian",
  "Michał",
  "Miron",
  "Modest",
  "Mojżesz",
  "Natan",
  "Natanael",
  "Nazariusz",
  "Nazary",
  "Nestor",
  "Mikołaj",
  "Nikodem",
  "Olaf",
  "Oleg",
  "Oliwier",
  "Onufry",
  "Orestes",
  "Oskar",
  "Ansgary",
  "Osmund",
  "Pankracy",
  "Pantaleon",
  "Patryk",
  "Patrycjusz",
  "Patrycy",
  "Paweł",
  "Piotr",
  "Filemon",
  "Filip",
  "Platon",
  "Polikarp",
  "Porfiry",
  "Porfiriusz",
  "Prokles",
  "Prokul",
  "Prokop",
  "Kwintyn",
  "Randolf",
  "Rafał",
  "Rajmund",
  "Reginald",
  "Rajnold",
  "Ryszard",
  "Robert",
  "Roderyk",
  "Roger",
  "Roland",
  "Roman",
  "Romeo",
  "Reginald",
  "Rudolf",
  "Samson",
  "Samuel",
  "Salwator",
  "Sebastian",
  "Serafin",
  "Sergiusz",
  "Seweryn",
  "Zygmunt",
  "Sylwester",
  "Szymon",
  "Salomon",
  "Spirydion",
  "Stanisław",
  "Szczepan",
  "Stefan",
  "Terencjusz",
  "Teodor",
  "Tomasz",
  "Tymoteusz",
  "Tobiasz",
  "Walenty",
  "Walentyn",
  "Walerian",
  "Walery",
  "Wiktor",
  "Wincenty",
  "Witalis",
  "Włodzimierz",
  "Władysław",
  "Błażej",
  "Walter",
  "Walgierz",
  "Wacław",
  "Wilfryd",
  "Wilhelm",
  "Ksawery",
  "Ksenofont",
  "Jerzy",
  "Zachariasz",
  "Zachary",
  "Ada",
  "Adelajda",
  "Agata",
  "Agnieszka",
  "Agrypina",
  "Aida",
  "Aleksandra",
  "Alicja",
  "Alina",
  "Amanda",
  "Anastazja",
  "Angela",
  "Andżelika",
  "Angelina",
  "Anna",
  "Hanna",
  "—",
  "Antonina",
  "Ariadna",
  "Aurora",
  "Barbara",
  "Beatrycze",
  "Berta",
  "Brygida",
  "Kamila",
  "Karolina",
  "Karolina",
  "Kornelia",
  "Katarzyna",
  "Cecylia",
  "Karolina",
  "Chloe",
  "Krystyna",
  "Klara",
  "Klaudia",
  "Klementyna",
  "Konstancja",
  "Koralia",
  "Daria",
  "Diana",
  "Dina",
  "Dorota",
  "Edyta",
  "Eleonora",
  "Eliza",
  "Elżbieta",
  "Izabela",
  "Elwira",
  "Emilia",
  "Estera",
  "Eudoksja",
  "Eudokia",
  "Eugenia",
  "Ewa",
  "Ewelina",
  "Ferdynanda",
  "Florencja",
  "Franciszka",
  "Gabriela",
  "Gertruda",
  "Gloria",
  "Gracja",
  "Jadwiga",
  "Helena",
  "Henryka",
  "Nadzieja",
  "Ida",
  "Ilona",
  "Helena",
  "Irena",
  "Irma",
  "Izabela",
  "Izolda",
  "Jakubina",
  "Joanna",
  "Janina",
  "Żaneta",
  "Joanna",
  "Ginewra",
  "Józefina",
  "Judyta",
  "Julia",
  "Julia",
  "Julita",
  "Justyna",
  "Kira",
  "Cyra",
  "Kleopatra",
  "Larysa",
  "Laura",
  "Laurencja",
  "Laurentyna",
  "Lea",
  "Leila",
  "Eleonora",
  "Liliana",
  "Lilianna",
  "Lilia",
  "Lilla",
  "Liza",
  "Eliza",
  "Laura",
  "Ludwika",
  "Luiza",
  "Łucja",
  "Lucja",
  "Lidia",
  "Amabela",
  "Magdalena",
  "Malwina",
  "Małgorzata",
  "Greta",
  "Marianna",
  "Maryna",
  "Marta",
  "Martyna",
  "Maria",
  "Matylda",
  "Maja",
  "Maja",
  "Melania",
  "Michalina",
  "Monika",
  "Nadzieja",
  "Noemi",
  "Natalia",
  "Nikola",
  "Nina",
  "Olga",
  "Olimpia",
  "Oliwia",
  "Ofelia",
  "Patrycja",
  "Paula",
  "Pelagia",
  "Penelopa",
  "Filipa",
  "Paulina",
  "Rachela",
  "Rebeka",
  "Regina",
  "Renata",
  "Rozalia",
  "Róża",
  "Roksana",
  "Rufina",
  "Ruta",
  "Sabina",
  "Sara",
  "Serafina",
  "Sybilla",
  "Sylwia",
  "Zofia",
  "Stella",
  "Stefania",
  "Zuzanna",
  "Tamara",
  "Tacjana",
  "Tekla",
  "Teodora",
  "Teresa",
  "Walentyna",
  "Waleria",
  "Wanesa",
  "Wiara",
  "Weronika",
  "Wiktoria",
  "Wirginia",
  "Bibiana",
  "Bibianna",
  "Wanda",
  "Wilhelmina",
  "Ksawera",
  "Ksenia",
  "Zoe"
];

},{}],672:[function(require,module,exports){
arguments[4][434][0].apply(exports,arguments)
},{"./first_name":671,"./last_name":673,"./name":674,"./prefix":675,"./title":676,"dup":434}],673:[function(require,module,exports){
module["exports"] = [
  "Adamczak",
  "Adamczyk",
  "Adamek",
  "Adamiak",
  "Adamiec",
  "Adamowicz",
  "Adamski",
  "Adamus",
  "Aleksandrowicz",
  "Andrzejczak",
  "Andrzejewski",
  "Antczak",
  "Augustyn",
  "Augustyniak",
  "Bagiński",
  "Balcerzak",
  "Banach",
  "Banasiak",
  "Banasik",
  "Banaś",
  "Baran",
  "Baranowski",
  "Barański",
  "Bartczak",
  "Bartkowiak",
  "Bartnik",
  "Bartosik",
  "Bednarczyk",
  "Bednarek",
  "Bednarski",
  "Bednarz",
  "Białas",
  "Białek",
  "Białkowski",
  "Bielak",
  "Bielawski",
  "Bielecki",
  "Bielski",
  "Bieniek",
  "Biernacki",
  "Biernat",
  "Bieńkowski",
  "Bilski",
  "Bober",
  "Bochenek",
  "Bogucki",
  "Bogusz",
  "Borek",
  "Borkowski",
  "Borowiec",
  "Borowski",
  "Bożek",
  "Broda",
  "Brzeziński",
  "Brzozowski",
  "Buczek",
  "Buczkowski",
  "Buczyński",
  "Budziński",
  "Budzyński",
  "Bujak",
  "Bukowski",
  "Burzyński",
  "Bąk",
  "Bąkowski",
  "Błaszczak",
  "Błaszczyk",
  "Cebula",
  "Chmiel",
  "Chmielewski",
  "Chmura",
  "Chojnacki",
  "Chojnowski",
  "Cholewa",
  "Chrzanowski",
  "Chudzik",
  "Cichocki",
  "Cichoń",
  "Cichy",
  "Ciesielski",
  "Cieśla",
  "Cieślak",
  "Cieślik",
  "Ciszewski",
  "Cybulski",
  "Cygan",
  "Czaja",
  "Czajka",
  "Czajkowski",
  "Czapla",
  "Czarnecki",
  "Czech",
  "Czechowski",
  "Czekaj",
  "Czerniak",
  "Czerwiński",
  "Czyż",
  "Czyżewski",
  "Dec",
  "Dobosz",
  "Dobrowolski",
  "Dobrzyński",
  "Domagała",
  "Domański",
  "Dominiak",
  "Drabik",
  "Drozd",
  "Drozdowski",
  "Drzewiecki",
  "Dróżdż",
  "Dubiel",
  "Duda",
  "Dudek",
  "Dudziak",
  "Dudzik",
  "Dudziński",
  "Duszyński",
  "Dziedzic",
  "Dziuba",
  "Dąbek",
  "Dąbkowski",
  "Dąbrowski",
  "Dębowski",
  "Dębski",
  "Długosz",
  "Falkowski",
  "Fijałkowski",
  "Filipek",
  "Filipiak",
  "Filipowicz",
  "Flak",
  "Flis",
  "Florczak",
  "Florek",
  "Frankowski",
  "Frąckowiak",
  "Frączek",
  "Frątczak",
  "Furman",
  "Gadomski",
  "Gajda",
  "Gajewski",
  "Gaweł",
  "Gawlik",
  "Gawron",
  "Gawroński",
  "Gałka",
  "Gałązka",
  "Gil",
  "Godlewski",
  "Golec",
  "Gołąb",
  "Gołębiewski",
  "Gołębiowski",
  "Grabowski",
  "Graczyk",
  "Grochowski",
  "Grudzień",
  "Gruszczyński",
  "Gruszka",
  "Grzegorczyk",
  "Grzelak",
  "Grzesiak",
  "Grzesik",
  "Grześkowiak",
  "Grzyb",
  "Grzybowski",
  "Grzywacz",
  "Gutowski",
  "Guzik",
  "Gwóźdź",
  "Góra",
  "Góral",
  "Górecki",
  "Górka",
  "Górniak",
  "Górny",
  "Górski",
  "Gąsior",
  "Gąsiorowski",
  "Głogowski",
  "Głowacki",
  "Głąb",
  "Hajduk",
  "Herman",
  "Iwański",
  "Izdebski",
  "Jabłoński",
  "Jackowski",
  "Jagielski",
  "Jagiełło",
  "Jagodziński",
  "Jakubiak",
  "Jakubowski",
  "Janas",
  "Janiak",
  "Janicki",
  "Janik",
  "Janiszewski",
  "Jankowiak",
  "Jankowski",
  "Janowski",
  "Janus",
  "Janusz",
  "Januszewski",
  "Jaros",
  "Jarosz",
  "Jarząbek",
  "Jasiński",
  "Jastrzębski",
  "Jaworski",
  "Jaśkiewicz",
  "Jezierski",
  "Jurek",
  "Jurkiewicz",
  "Jurkowski",
  "Juszczak",
  "Jóźwiak",
  "Jóźwik",
  "Jędrzejczak",
  "Jędrzejczyk",
  "Jędrzejewski",
  "Kacprzak",
  "Kaczmarczyk",
  "Kaczmarek",
  "Kaczmarski",
  "Kaczor",
  "Kaczorowski",
  "Kaczyński",
  "Kaleta",
  "Kalinowski",
  "Kalisz",
  "Kamiński",
  "Kania",
  "Kaniewski",
  "Kapusta",
  "Karaś",
  "Karczewski",
  "Karpiński",
  "Karwowski",
  "Kasperek",
  "Kasprzak",
  "Kasprzyk",
  "Kaszuba",
  "Kawa",
  "Kawecki",
  "Kałuża",
  "Kaźmierczak",
  "Kiełbasa",
  "Kisiel",
  "Kita",
  "Klimczak",
  "Klimek",
  "Kmiecik",
  "Kmieć",
  "Knapik",
  "Kobus",
  "Kogut",
  "Kolasa",
  "Komorowski",
  "Konieczna",
  "Konieczny",
  "Konopka",
  "Kopczyński",
  "Koper",
  "Kopeć",
  "Korzeniowski",
  "Kos",
  "Kosiński",
  "Kosowski",
  "Kostecki",
  "Kostrzewa",
  "Kot",
  "Kotowski",
  "Kowal",
  "Kowalczuk",
  "Kowalczyk",
  "Kowalewski",
  "Kowalik",
  "Kowalski",
  "Koza",
  "Kozak",
  "Kozieł",
  "Kozioł",
  "Kozłowski",
  "Kołakowski",
  "Kołodziej",
  "Kołodziejczyk",
  "Kołodziejski",
  "Krajewski",
  "Krakowiak",
  "Krawczyk",
  "Krawiec",
  "Kruk",
  "Krukowski",
  "Krupa",
  "Krupiński",
  "Kruszewski",
  "Krysiak",
  "Krzemiński",
  "Krzyżanowski",
  "Król",
  "Królikowski",
  "Książek",
  "Kubacki",
  "Kubiak",
  "Kubica",
  "Kubicki",
  "Kubik",
  "Kuc",
  "Kucharczyk",
  "Kucharski",
  "Kuchta",
  "Kuciński",
  "Kuczyński",
  "Kujawa",
  "Kujawski",
  "Kula",
  "Kulesza",
  "Kulig",
  "Kulik",
  "Kuliński",
  "Kurek",
  "Kurowski",
  "Kuś",
  "Kwaśniewski",
  "Kwiatkowski",
  "Kwiecień",
  "Kwieciński",
  "Kędzierski",
  "Kędziora",
  "Kępa",
  "Kłos",
  "Kłosowski",
  "Lach",
  "Laskowski",
  "Lasota",
  "Lech",
  "Lenart",
  "Lesiak",
  "Leszczyński",
  "Lewandowski",
  "Lewicki",
  "Leśniak",
  "Leśniewski",
  "Lipiński",
  "Lipka",
  "Lipski",
  "Lis",
  "Lisiecki",
  "Lisowski",
  "Maciejewski",
  "Maciąg",
  "Mackiewicz",
  "Madej",
  "Maj",
  "Majcher",
  "Majchrzak",
  "Majewski",
  "Majka",
  "Makowski",
  "Malec",
  "Malicki",
  "Malinowski",
  "Maliszewski",
  "Marchewka",
  "Marciniak",
  "Marcinkowski",
  "Marczak",
  "Marek",
  "Markiewicz",
  "Markowski",
  "Marszałek",
  "Marzec",
  "Masłowski",
  "Matusiak",
  "Matuszak",
  "Matuszewski",
  "Matysiak",
  "Mazur",
  "Mazurek",
  "Mazurkiewicz",
  "Maćkowiak",
  "Małecki",
  "Małek",
  "Maślanka",
  "Michalak",
  "Michalczyk",
  "Michalik",
  "Michalski",
  "Michałek",
  "Michałowski",
  "Mielczarek",
  "Mierzejewski",
  "Mika",
  "Mikołajczak",
  "Mikołajczyk",
  "Mikulski",
  "Milczarek",
  "Milewski",
  "Miller",
  "Misiak",
  "Misztal",
  "Miśkiewicz",
  "Modzelewski",
  "Molenda",
  "Morawski",
  "Motyka",
  "Mroczek",
  "Mroczkowski",
  "Mrozek",
  "Mróz",
  "Mucha",
  "Murawski",
  "Musiał",
  "Muszyński",
  "Młynarczyk",
  "Napierała",
  "Nawrocki",
  "Nawrot",
  "Niedziela",
  "Niedzielski",
  "Niedźwiecki",
  "Niemczyk",
  "Niemiec",
  "Niewiadomski",
  "Noga",
  "Nowacki",
  "Nowaczyk",
  "Nowak",
  "Nowakowski",
  "Nowicki",
  "Nowiński",
  "Olczak",
  "Olejniczak",
  "Olejnik",
  "Olszewski",
  "Orzechowski",
  "Orłowski",
  "Osiński",
  "Ossowski",
  "Ostrowski",
  "Owczarek",
  "Paczkowski",
  "Pająk",
  "Pakuła",
  "Paluch",
  "Panek",
  "Partyka",
  "Pasternak",
  "Paszkowski",
  "Pawelec",
  "Pawlak",
  "Pawlicki",
  "Pawlik",
  "Pawlikowski",
  "Pawłowski",
  "Pałka",
  "Piasecki",
  "Piechota",
  "Piekarski",
  "Pietras",
  "Pietruszka",
  "Pietrzak",
  "Pietrzyk",
  "Pilarski",
  "Pilch",
  "Piotrowicz",
  "Piotrowski",
  "Piwowarczyk",
  "Piórkowski",
  "Piątek",
  "Piątkowski",
  "Piłat",
  "Pluta",
  "Podgórski",
  "Polak",
  "Popławski",
  "Porębski",
  "Prokop",
  "Prus",
  "Przybylski",
  "Przybysz",
  "Przybył",
  "Przybyła",
  "Ptak",
  "Puchalski",
  "Pytel",
  "Płonka",
  "Raczyński",
  "Radecki",
  "Radomski",
  "Rak",
  "Rakowski",
  "Ratajczak",
  "Robak",
  "Rogala",
  "Rogalski",
  "Rogowski",
  "Rojek",
  "Romanowski",
  "Rosa",
  "Rosiak",
  "Rosiński",
  "Ruciński",
  "Rudnicki",
  "Rudziński",
  "Rudzki",
  "Rusin",
  "Rutkowski",
  "Rybak",
  "Rybarczyk",
  "Rybicki",
  "Rzepka",
  "Różański",
  "Różycki",
  "Sadowski",
  "Sawicki",
  "Serafin",
  "Siedlecki",
  "Sienkiewicz",
  "Sieradzki",
  "Sikora",
  "Sikorski",
  "Sitek",
  "Siwek",
  "Skalski",
  "Skiba",
  "Skibiński",
  "Skoczylas",
  "Skowron",
  "Skowronek",
  "Skowroński",
  "Skrzypczak",
  "Skrzypek",
  "Skóra",
  "Smoliński",
  "Sobczak",
  "Sobczyk",
  "Sobieraj",
  "Sobolewski",
  "Socha",
  "Sochacki",
  "Sokołowski",
  "Sokół",
  "Sosnowski",
  "Sowa",
  "Sowiński",
  "Sołtys",
  "Sołtysiak",
  "Sroka",
  "Stachowiak",
  "Stachowicz",
  "Stachura",
  "Stachurski",
  "Stanek",
  "Staniszewski",
  "Stanisławski",
  "Stankiewicz",
  "Stasiak",
  "Staszewski",
  "Stawicki",
  "Stec",
  "Stefaniak",
  "Stefański",
  "Stelmach",
  "Stolarczyk",
  "Stolarski",
  "Strzelczyk",
  "Strzelecki",
  "Stępień",
  "Stępniak",
  "Surma",
  "Suski",
  "Szafrański",
  "Szatkowski",
  "Szczepaniak",
  "Szczepanik",
  "Szczepański",
  "Szczerba",
  "Szcześniak",
  "Szczygieł",
  "Szczęsna",
  "Szczęsny",
  "Szeląg",
  "Szewczyk",
  "Szostak",
  "Szulc",
  "Szwarc",
  "Szwed",
  "Szydłowski",
  "Szymański",
  "Szymczak",
  "Szymczyk",
  "Szymkowiak",
  "Szyszka",
  "Sławiński",
  "Słowik",
  "Słowiński",
  "Tarnowski",
  "Tkaczyk",
  "Tokarski",
  "Tomala",
  "Tomaszewski",
  "Tomczak",
  "Tomczyk",
  "Tracz",
  "Trojanowski",
  "Trzciński",
  "Trzeciak",
  "Turek",
  "Twardowski",
  "Urban",
  "Urbanek",
  "Urbaniak",
  "Urbanowicz",
  "Urbańczyk",
  "Urbański",
  "Walczak",
  "Walkowiak",
  "Warchoł",
  "Wasiak",
  "Wasilewski",
  "Wawrzyniak",
  "Wesołowski",
  "Wieczorek",
  "Wierzbicki",
  "Wilczek",
  "Wilczyński",
  "Wilk",
  "Winiarski",
  "Witczak",
  "Witek",
  "Witkowski",
  "Wiącek",
  "Więcek",
  "Więckowski",
  "Wiśniewski",
  "Wnuk",
  "Wojciechowski",
  "Wojtas",
  "Wojtasik",
  "Wojtczak",
  "Wojtkowiak",
  "Wolak",
  "Woliński",
  "Wolny",
  "Wolski",
  "Woś",
  "Woźniak",
  "Wrona",
  "Wroński",
  "Wróbel",
  "Wróblewski",
  "Wypych",
  "Wysocki",
  "Wyszyński",
  "Wójcicki",
  "Wójcik",
  "Wójtowicz",
  "Wąsik",
  "Węgrzyn",
  "Włodarczyk",
  "Włodarski",
  "Zaborowski",
  "Zabłocki",
  "Zagórski",
  "Zając",
  "Zajączkowski",
  "Zakrzewski",
  "Zalewski",
  "Zaremba",
  "Zarzycki",
  "Zaręba",
  "Zawada",
  "Zawadzki",
  "Zdunek",
  "Zieliński",
  "Zielonka",
  "Ziółkowski",
  "Zięba",
  "Ziętek",
  "Zwoliński",
  "Zych",
  "Zygmunt",
  "Łapiński",
  "Łuczak",
  "Łukasiewicz",
  "Łukasik",
  "Łukaszewski",
  "Śliwa",
  "Śliwiński",
  "Ślusarczyk",
  "Świderski",
  "Świerczyński",
  "Świątek",
  "Żak",
  "Żebrowski",
  "Żmuda",
  "Żuk",
  "Żukowski",
  "Żurawski",
  "Żurek",
  "Żyła"
];

},{}],674:[function(require,module,exports){
arguments[4][479][0].apply(exports,arguments)
},{"dup":479}],675:[function(require,module,exports){
module["exports"] = [
  "Pan",
  "Pani"
];

},{}],676:[function(require,module,exports){
arguments[4][208][0].apply(exports,arguments)
},{"dup":208}],677:[function(require,module,exports){
module["exports"] = [
  "12-###-##-##",
  "13-###-##-##",
  "14-###-##-##",
  "15-###-##-##",
  "16-###-##-##",
  "17-###-##-##",
  "18-###-##-##",
  "22-###-##-##",
  "23-###-##-##",
  "24-###-##-##",
  "25-###-##-##",
  "29-###-##-##",
  "32-###-##-##",
  "33-###-##-##",
  "34-###-##-##",
  "41-###-##-##",
  "42-###-##-##",
  "43-###-##-##",
  "44-###-##-##",
  "46-###-##-##",
  "48-###-##-##",
  "52-###-##-##",
  "54-###-##-##",
  "55-###-##-##",
  "56-###-##-##",
  "58-###-##-##",
  "59-###-##-##",
  "61-###-##-##",
  "62-###-##-##",
  "63-###-##-##",
  "65-###-##-##",
  "67-###-##-##",
  "68-###-##-##",
  "71-###-##-##",
  "74-###-##-##",
  "75-###-##-##",
  "76-###-##-##",
  "77-###-##-##",
  "81-###-##-##",
  "82-###-##-##",
  "83-###-##-##",
  "84-###-##-##",
  "85-###-##-##",
  "86-###-##-##",
  "87-###-##-##",
  "89-###-##-##",
  "91-###-##-##",
  "94-###-##-##",
  "95-###-##-##"
];

},{}],678:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":677,"dup":85}],679:[function(require,module,exports){
arguments[4][129][0].apply(exports,arguments)
},{"dup":129}],680:[function(require,module,exports){
module["exports"] = [
  "Nova",
  "Velha",
  "Grande",
  "Vila",
  "Município de"
];

},{}],681:[function(require,module,exports){
module["exports"] = [
  "do Descoberto",
  "de Nossa Senhora",
  "do Norte",
  "do Sul"
];

},{}],682:[function(require,module,exports){
module["exports"] = [
  "Afeganistão",
  "Albânia",
  "Algéria",
  "Samoa",
  "Andorra",
  "Angola",
  "Anguilla",
  "Antigua and Barbada",
  "Argentina",
  "Armênia",
  "Aruba",
  "Austrália",
  "Áustria",
  "Alzerbajão",
  "Bahamas",
  "Barém",
  "Bangladesh",
  "Barbado",
  "Belgrado",
  "Bélgica",
  "Belize",
  "Benin",
  "Bermuda",
  "Bhutan",
  "Bolívia",
  "Bôsnia",
  "Botuasuna",
  "Bouvetoia",
  "Brasil",
  "Arquipélago de Chagos",
  "Ilhas Virgens",
  "Brunei",
  "Bulgária",
  "Burkina Faso",
  "Burundi",
  "Cambójia",
  "Camarões",
  "Canadá",
  "Cabo Verde",
  "Ilhas Caiman",
  "República da África Central",
  "Chad",
  "Chile",
  "China",
  "Ilhas Natal",
  "Ilhas Cocos",
  "Colômbia",
  "Comoros",
  "Congo",
  "Ilhas Cook",
  "Costa Rica",
  "Costa do Marfim",
  "Croácia",
  "Cuba",
  "Cyprus",
  "República Tcheca",
  "Dinamarca",
  "Djibouti",
  "Dominica",
  "República Dominicana",
  "Equador",
  "Egito",
  "El Salvador",
  "Guiné Equatorial",
  "Eritrea",
  "Estônia",
  "Etiópia",
  "Ilhas Faroe",
  "Malvinas",
  "Fiji",
  "Finlândia",
  "França",
  "Guiné Francesa",
  "Polinésia Francesa",
  "Gabão",
  "Gâmbia",
  "Georgia",
  "Alemanha",
  "Gana",
  "Gibraltar",
  "Grécia",
  "Groelândia",
  "Granada",
  "Guadalupe",
  "Guano",
  "Guatemala",
  "Guernsey",
  "Guiné",
  "Guiné-Bissau",
  "Guiana",
  "Haiti",
  "Heard Island and McDonald Islands",
  "Vaticano",
  "Honduras",
  "Hong Kong",
  "Hungria",
  "Iceland",
  "Índia",
  "Indonésia",
  "Irã",
  "Iraque",
  "Irlanda",
  "Ilha de Man",
  "Israel",
  "Itália",
  "Jamaica",
  "Japão",
  "Jersey",
  "Jordânia",
  "Cazaquistão",
  "Quênia",
  "Kiribati",
  "Coreia do Norte",
  "Coreia do Sul",
  "Kuwait",
  "Kyrgyz Republic",
  "República Democrática de Lao People",
  "Latvia",
  "Líbano",
  "Lesotho",
  "Libéria",
  "Libyan Arab Jamahiriya",
  "Liechtenstein",
  "Lituânia",
  "Luxemburgo",
  "Macao",
  "Macedônia",
  "Madagascar",
  "Malawi",
  "Malásia",
  "Maldives",
  "Mali",
  "Malta",
  "Ilhas Marshall",
  "Martinica",
  "Mauritânia",
  "Mauritius",
  "Mayotte",
  "México",
  "Micronésia",
  "Moldova",
  "Mônaco",
  "Mongólia",
  "Montenegro",
  "Montserrat",
  "Marrocos",
  "Moçambique",
  "Myanmar",
  "Namibia",
  "Nauru",
  "Nepal",
  "Antilhas Holandesas",
  "Holanda",
  "Nova Caledonia",
  "Nova Zelândia",
  "Nicarágua",
  "Nigéria",
  "Niue",
  "Ilha Norfolk",
  "Northern Mariana Islands",
  "Noruega",
  "Oman",
  "Paquistão",
  "Palau",
  "Território da Palestina",
  "Panamá",
  "Nova Guiné Papua",
  "Paraguai",
  "Peru",
  "Filipinas",
  "Polônia",
  "Portugal",
  "Puerto Rico",
  "Qatar",
  "Romênia",
  "Rússia",
  "Ruanda",
  "São Bartolomeu",
  "Santa Helena",
  "Santa Lúcia",
  "Saint Martin",
  "Saint Pierre and Miquelon",
  "Saint Vincent and the Grenadines",
  "Samoa",
  "San Marino",
  "Sao Tomé e Príncipe",
  "Arábia Saudita",
  "Senegal",
  "Sérvia",
  "Seychelles",
  "Serra Leoa",
  "Singapura",
  "Eslováquia",
  "Eslovênia",
  "Ilhas Salomão",
  "Somália",
  "África do Sul",
  "South Georgia and the South Sandwich Islands",
  "Spanha",
  "Sri Lanka",
  "Sudão",
  "Suriname",
  "Svalbard & Jan Mayen Islands",
  "Swaziland",
  "Suécia",
  "Suíça",
  "Síria",
  "Taiwan",
  "Tajiquistão",
  "Tanzânia",
  "Tailândia",
  "Timor-Leste",
  "Togo",
  "Tokelau",
  "Tonga",
  "Trinidá e Tobago",
  "Tunísia",
  "Turquia",
  "Turcomenistão",
  "Turks and Caicos Islands",
  "Tuvalu",
  "Uganda",
  "Ucrânia",
  "Emirados Árabes Unidos",
  "Reino Unido",
  "Estados Unidos da América",
  "Estados Unidos das Ilhas Virgens",
  "Uruguai",
  "Uzbequistão",
  "Vanuatu",
  "Venezuela",
  "Vietnã",
  "Wallis and Futuna",
  "Sahara",
  "Yemen",
  "Zâmbia",
  "Zimbábue"
];

},{}],683:[function(require,module,exports){
module["exports"] = [
  "Brasil"
];

},{}],684:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.default_country = require("./default_country");

},{"./building_number":679,"./city_prefix":680,"./city_suffix":681,"./country":682,"./default_country":683,"./postcode":685,"./secondary_address":686,"./state":687,"./state_abbr":688,"./street_suffix":689}],685:[function(require,module,exports){
module["exports"] = [
  "#####",
  "#####-###"
];

},{}],686:[function(require,module,exports){
module["exports"] = [
  "Apto. ###",
  "Sobrado ##",
  "Casa #",
  "Lote ##",
  "Quadra ##"
];

},{}],687:[function(require,module,exports){
module["exports"] = [
  "Acre",
  "Alagoas",
  "Amapá",
  "Amazonas",
  "Bahia",
  "Ceará",
  "Distrito Federal",
  "Espírito Santo",
  "Goiás",
  "Maranhão",
  "Mato Grosso",
  "Mato Grosso do Sul",
  "Minas Gerais",
  "Pará",
  "Paraíba",
  "Paraná",
  "Pernambuco",
  "Piauí",
  "Rio de Janeiro",
  "Rio Grande do Norte",
  "Rio Grande do Sul",
  "Rondônia",
  "Roraima",
  "Santa Catarina",
  "São Paulo",
  "Sergipe",
  "Tocantins"
];

},{}],688:[function(require,module,exports){
module["exports"] = [
  "AC",
  "AL",
  "AP",
  "AM",
  "BA",
  "CE",
  "DF",
  "ES",
  "GO",
  "MA",
  "MT",
  "MS",
  "PA",
  "PB",
  "PR",
  "PE",
  "PI",
  "RJ",
  "RN",
  "RS",
  "RO",
  "RR",
  "SC",
  "SP"
];

},{}],689:[function(require,module,exports){
module["exports"] = [
  "Rua",
  "Avenida",
  "Travessa",
  "Ponte",
  "Alameda",
  "Marginal",
  "Viela",
  "Rodovia"
];

},{}],690:[function(require,module,exports){
arguments[4][121][0].apply(exports,arguments)
},{"./name":691,"./suffix":692,"dup":121}],691:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name}-#{Name.last_name}",
  "#{Name.last_name}, #{Name.last_name} e #{Name.last_name}"
];

},{}],692:[function(require,module,exports){
module["exports"] = [
  "S.A.",
  "LTDA",
  "e Associados",
  "Comércio"
];

},{}],693:[function(require,module,exports){
var pt_BR = {};
module['exports'] = pt_BR;
pt_BR.title = "Portuguese (Brazil)";
pt_BR.address = require("./address");
pt_BR.company = require("./company");
pt_BR.internet = require("./internet");
pt_BR.lorem = require("./lorem");
pt_BR.name = require("./name");
pt_BR.phone_number = require("./phone_number");

},{"./address":684,"./company":690,"./internet":696,"./lorem":697,"./name":700,"./phone_number":705}],694:[function(require,module,exports){
module["exports"] = [
  "br",
  "com",
  "biz",
  "info",
  "name",
  "net",
  "org"
];

},{}],695:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "yahoo.com",
  "hotmail.com",
  "live.com",
  "bol.com.br"
];

},{}],696:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"./domain_suffix":694,"./free_email":695,"dup":75}],697:[function(require,module,exports){
arguments[4][76][0].apply(exports,arguments)
},{"./words":698,"dup":76}],698:[function(require,module,exports){
arguments[4][77][0].apply(exports,arguments)
},{"dup":77}],699:[function(require,module,exports){
module["exports"] = [
  "Alessandro",
  "Alessandra",
  "Alexandre",
  "Aline",
  "Antônio",
  "Breno",
  "Bruna",
  "Carlos",
  "Carla",
  "Célia",
  "Cecília",
  "César",
  "Danilo",
  "Dalila",
  "Deneval",
  "Eduardo",
  "Eduarda",
  "Esther",
  "Elísio",
  "Fábio",
  "Fabrício",
  "Fabrícia",
  "Félix",
  "Felícia",
  "Feliciano",
  "Frederico",
  "Fabiano",
  "Gustavo",
  "Guilherme",
  "Gúbio",
  "Heitor",
  "Hélio",
  "Hugo",
  "Isabel",
  "Isabela",
  "Ígor",
  "João",
  "Joana",
  "Júlio César",
  "Júlio",
  "Júlia",
  "Janaína",
  "Karla",
  "Kléber",
  "Lucas",
  "Lorena",
  "Lorraine",
  "Larissa",
  "Ladislau",
  "Marcos",
  "Meire",
  "Marcelo",
  "Marcela",
  "Margarida",
  "Mércia",
  "Márcia",
  "Marli",
  "Morgana",
  "Maria",
  "Norberto",
  "Natália",
  "Nataniel",
  "Núbia",
  "Ofélia",
  "Paulo",
  "Paula",
  "Pablo",
  "Pedro",
  "Raul",
  "Rafael",
  "Rafaela",
  "Ricardo",
  "Roberto",
  "Roberta",
  "Sílvia",
  "Sílvia",
  "Silas",
  "Suélen",
  "Sara",
  "Salvador",
  "Sirineu",
  "Talita",
  "Tertuliano",
  "Vicente",
  "Víctor",
  "Vitória",
  "Yango",
  "Yago",
  "Yuri",
  "Washington",
  "Warley"
];

},{}],700:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");

},{"./first_name":699,"./last_name":701,"./prefix":702,"./suffix":703}],701:[function(require,module,exports){
module["exports"] = [
  "Silva",
  "Souza",
  "Carvalho",
  "Santos",
  "Reis",
  "Xavier",
  "Franco",
  "Braga",
  "Macedo",
  "Batista",
  "Barros",
  "Moraes",
  "Costa",
  "Pereira",
  "Carvalho",
  "Melo",
  "Saraiva",
  "Nogueira",
  "Oliveira",
  "Martins",
  "Moreira",
  "Albuquerque"
];

},{}],702:[function(require,module,exports){
module["exports"] = [
  "Sr.",
  "Sra.",
  "Srta.",
  "Dr."
];

},{}],703:[function(require,module,exports){
module["exports"] = [
  "Jr.",
  "Neto",
  "Filho"
];

},{}],704:[function(require,module,exports){
module["exports"] = [
  "(##) ####-####",
  "+55 (##) ####-####",
  "(##) #####-####"
];

},{}],705:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":704,"dup":85}],706:[function(require,module,exports){
module["exports"] = [
  "###"
];

},{}],707:[function(require,module,exports){
module["exports"] = [
  "#{Address.city_name}"
];

},{}],708:[function(require,module,exports){
module["exports"] = [
  "Москва",
  "Владимир",
  "Санкт-Петербург",
  "Новосибирск",
  "Екатеринбург",
  "Нижний Новгород",
  "Самара",
  "Казань",
  "Омск",
  "Челябинск",
  "Ростов-на-Дону",
  "Уфа",
  "Волгоград",
  "Пермь",
  "Красноярск",
  "Воронеж",
  "Саратов",
  "Краснодар",
  "Тольятти",
  "Ижевск",
  "Барнаул",
  "Ульяновск",
  "Тюмень",
  "Иркутск",
  "Владивосток",
  "Ярославль",
  "Хабаровск",
  "Махачкала",
  "Оренбург",
  "Новокузнецк",
  "Томск",
  "Кемерово",
  "Рязань",
  "Астрахань",
  "Пенза",
  "Липецк",
  "Тула",
  "Киров",
  "Чебоксары",
  "Курск",
  "Брянскm Магнитогорск",
  "Иваново",
  "Тверь",
  "Ставрополь",
  "Белгород",
  "Сочи"
];

},{}],709:[function(require,module,exports){
module["exports"] = [
  "Австралия",
  "Австрия",
  "Азербайджан",
  "Албания",
  "Алжир",
  "Американское Самоа (не признана)",
  "Ангилья",
  "Ангола",
  "Андорра",
  "Антарктика (не признана)",
  "Антигуа и Барбуда",
  "Антильские Острова (не признана)",
  "Аомынь (не признана)",
  "Аргентина",
  "Армения",
  "Афганистан",
  "Багамские Острова",
  "Бангладеш",
  "Барбадос",
  "Бахрейн",
  "Беларусь",
  "Белиз",
  "Бельгия",
  "Бенин",
  "Болгария",
  "Боливия",
  "Босния и Герцеговина",
  "Ботсвана",
  "Бразилия",
  "Бруней",
  "Буркина-Фасо",
  "Бурунди",
  "Бутан",
  "Вануату",
  "Ватикан",
  "Великобритания",
  "Венгрия",
  "Венесуэла",
  "Восточный Тимор",
  "Вьетнам",
  "Габон",
  "Гаити",
  "Гайана",
  "Гамбия",
  "Гана",
  "Гваделупа (не признана)",
  "Гватемала",
  "Гвиана (не признана)",
  "Гвинея",
  "Гвинея-Бисау",
  "Германия",
  "Гондурас",
  "Гренада",
  "Греция",
  "Грузия",
  "Дания",
  "Джибути",
  "Доминика",
  "Доминиканская Республика",
  "Египет",
  "Замбия",
  "Зимбабве",
  "Израиль",
  "Индия",
  "Индонезия",
  "Иордания",
  "Ирак",
  "Иран",
  "Ирландия",
  "Исландия",
  "Испания",
  "Италия",
  "Йемен",
  "Кабо-Верде",
  "Казахстан",
  "Камбоджа",
  "Камерун",
  "Канада",
  "Катар",
  "Кения",
  "Кипр",
  "Кирибати",
  "Китай",
  "Колумбия",
  "Коморские Острова",
  "Конго",
  "Демократическая Республика",
  "Корея (Северная)",
  "Корея (Южная)",
  "Косово",
  "Коста-Рика",
  "Кот-д'Ивуар",
  "Куба",
  "Кувейт",
  "Кука острова",
  "Кыргызстан",
  "Лаос",
  "Латвия",
  "Лесото",
  "Либерия",
  "Ливан",
  "Ливия",
  "Литва",
  "Лихтенштейн",
  "Люксембург",
  "Маврикий",
  "Мавритания",
  "Мадагаскар",
  "Македония",
  "Малави",
  "Малайзия",
  "Мали",
  "Мальдивы",
  "Мальта",
  "Маршалловы Острова",
  "Мексика",
  "Микронезия",
  "Мозамбик",
  "Молдова",
  "Монако",
  "Монголия",
  "Марокко",
  "Мьянма",
  "Намибия",
  "Науру",
  "Непал",
  "Нигер",
  "Нигерия",
  "Нидерланды",
  "Никарагуа",
  "Новая Зеландия",
  "Норвегия",
  "Объединенные Арабские Эмираты",
  "Оман",
  "Пакистан",
  "Палау",
  "Панама",
  "Папуа — Новая Гвинея",
  "Парагвай",
  "Перу",
  "Польша",
  "Португалия",
  "Республика Конго",
  "Россия",
  "Руанда",
  "Румыния",
  "Сальвадор",
  "Самоа",
  "Сан-Марино",
  "Сан-Томе и Принсипи",
  "Саудовская Аравия",
  "Свазиленд",
  "Сейшельские острова",
  "Сенегал",
  "Сент-Винсент и Гренадины",
  "Сент-Киттс и Невис",
  "Сент-Люсия",
  "Сербия",
  "Сингапур",
  "Сирия",
  "Словакия",
  "Словения",
  "Соединенные Штаты Америки",
  "Соломоновы Острова",
  "Сомали",
  "Судан",
  "Суринам",
  "Сьерра-Леоне",
  "Таджикистан",
  "Таиланд",
  "Тайвань (не признана)",
  "Тамил-Илам (не признана)",
  "Танзания",
  "Тёркс и Кайкос (не признана)",
  "Того",
  "Токелау (не признана)",
  "Тонга",
  "Тринидад и Тобаго",
  "Тувалу",
  "Тунис",
  "Турецкая Республика Северного Кипра (не признана)",
  "Туркменистан",
  "Турция",
  "Уганда",
  "Узбекистан",
  "Украина",
  "Уругвай",
  "Фарерские Острова (не признана)",
  "Фиджи",
  "Филиппины",
  "Финляндия",
  "Франция",
  "Французская Полинезия (не признана)",
  "Хорватия",
  "Центральноафриканская Республика",
  "Чад",
  "Черногория",
  "Чехия",
  "Чили",
  "Швейцария",
  "Швеция",
  "Шри-Ланка",
  "Эквадор",
  "Экваториальная Гвинея",
  "Эритрея",
  "Эстония",
  "Эфиопия",
  "Южно-Африканская Республика",
  "Ямайка",
  "Япония"
];

},{}],710:[function(require,module,exports){
module["exports"] = [
  "Россия"
];

},{}],711:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.country = require("./country");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.street_title = require("./street_title");
address.city_name = require("./city_name");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":706,"./city":707,"./city_name":708,"./country":709,"./default_country":710,"./postcode":712,"./secondary_address":713,"./state":714,"./street_address":715,"./street_name":716,"./street_suffix":717,"./street_title":718}],712:[function(require,module,exports){
module["exports"] = [
  "######"
];

},{}],713:[function(require,module,exports){
module["exports"] = [
  "кв. ###"
];

},{}],714:[function(require,module,exports){
module["exports"] = [
  "Республика Адыгея",
  "Республика Башкортостан",
  "Республика Бурятия",
  "Республика Алтай Республика Дагестан",
  "Республика Ингушетия",
  "Кабардино-Балкарская Республика",
  "Республика Калмыкия",
  "Республика Карачаево-Черкессия",
  "Республика Карелия",
  "Республика Коми",
  "Республика Марий Эл",
  "Республика Мордовия",
  "Республика Саха (Якутия)",
  "Республика Северная Осетия-Алания",
  "Республика Татарстан",
  "Республика Тыва",
  "Удмуртская Республика",
  "Республика Хакасия",
  "Чувашская Республика",
  "Алтайский край",
  "Краснодарский край",
  "Красноярский край",
  "Приморский край",
  "Ставропольский край",
  "Хабаровский край",
  "Амурская область",
  "Архангельская область",
  "Астраханская область",
  "Белгородская область",
  "Брянская область",
  "Владимирская область",
  "Волгоградская область",
  "Вологодская область",
  "Воронежская область",
  "Ивановская область",
  "Иркутская область",
  "Калиниградская область",
  "Калужская область",
  "Камчатская область",
  "Кемеровская область",
  "Кировская область",
  "Костромская область",
  "Курганская область",
  "Курская область",
  "Ленинградская область",
  "Липецкая область",
  "Магаданская область",
  "Московская область",
  "Мурманская область",
  "Нижегородская область",
  "Новгородская область",
  "Новосибирская область",
  "Омская область",
  "Оренбургская область",
  "Орловская область",
  "Пензенская область",
  "Пермская область",
  "Псковская область",
  "Ростовская область",
  "Рязанская область",
  "Самарская область",
  "Саратовская область",
  "Сахалинская область",
  "Свердловская область",
  "Смоленская область",
  "Тамбовская область",
  "Тверская область",
  "Томская область",
  "Тульская область",
  "Тюменская область",
  "Ульяновская область",
  "Челябинская область",
  "Читинская область",
  "Ярославская область",
  "Еврейская автономная область",
  "Агинский Бурятский авт. округ",
  "Коми-Пермяцкий автономный округ",
  "Корякский автономный округ",
  "Ненецкий автономный округ",
  "Таймырский (Долгано-Ненецкий) автономный округ",
  "Усть-Ордынский Бурятский автономный округ",
  "Ханты-Мансийский автономный округ",
  "Чукотский автономный округ",
  "Эвенкийский автономный округ",
  "Ямало-Ненецкий автономный округ",
  "Чеченская Республика"
];

},{}],715:[function(require,module,exports){
module["exports"] = [
  "#{street_name}, #{building_number}"
];

},{}],716:[function(require,module,exports){
module["exports"] = [
  "#{street_suffix} #{Address.street_title}",
  "#{Address.street_title} #{street_suffix}"
];

},{}],717:[function(require,module,exports){
module["exports"] = [
  "ул.",
  "улица",
  "проспект",
  "пр.",
  "площадь",
  "пл."
];

},{}],718:[function(require,module,exports){
module["exports"] = [
  "Советская",
  "Молодежная",
  "Центральная",
  "Школьная",
  "Новая",
  "Садовая",
  "Лесная",
  "Набережная",
  "Ленина",
  "Мира",
  "Октябрьская",
  "Зеленая",
  "Комсомольская",
  "Заречная",
  "Первомайская",
  "Гагарина",
  "Полевая",
  "Луговая",
  "Пионерская",
  "Кирова",
  "Юбилейная",
  "Северная",
  "Пролетарская",
  "Степная",
  "Пушкина",
  "Калинина",
  "Южная",
  "Колхозная",
  "Рабочая",
  "Солнечная",
  "Железнодорожная",
  "Восточная",
  "Заводская",
  "Чапаева",
  "Нагорная",
  "Строителей",
  "Береговая",
  "Победы",
  "Горького",
  "Кооперативная",
  "Красноармейская",
  "Совхозная",
  "Речная",
  "Школьный",
  "Спортивная",
  "Озерная",
  "Строительная",
  "Парковая",
  "Чкалова",
  "Мичурина",
  "речень улиц",
  "Подгорная",
  "Дружбы",
  "Почтовая",
  "Партизанская",
  "Вокзальная",
  "Лермонтова",
  "Свободы",
  "Дорожная",
  "Дачная",
  "Маяковского",
  "Западная",
  "Фрунзе",
  "Дзержинского",
  "Московская",
  "Свердлова",
  "Некрасова",
  "Гоголя",
  "Красная",
  "Трудовая",
  "Шоссейная",
  "Чехова",
  "Коммунистическая",
  "Труда",
  "Комарова",
  "Матросова",
  "Островского",
  "Сосновая",
  "Клубная",
  "Куйбышева",
  "Крупской",
  "Березовая",
  "Карла Маркса",
  "8 Марта",
  "Больничная",
  "Садовый",
  "Интернациональная",
  "Суворова",
  "Цветочная",
  "Трактовая",
  "Ломоносова",
  "Горная",
  "Космонавтов",
  "Энергетиков",
  "Шевченко",
  "Весенняя",
  "Механизаторов",
  "Коммунальная",
  "Лесной",
  "40 лет Победы",
  "Майская"
];

},{}],719:[function(require,module,exports){
module["exports"] = [
  "красный",
  "зеленый",
  "синий",
  "желтый",
  "багровый",
  "мятный",
  "зеленовато-голубой",
  "белый",
  "черный",
  "оранжевый",
  "розовый",
  "серый",
  "красно-коричневый",
  "фиолетовый",
  "бирюзовый",
  "желто-коричневый",
  "небесно голубой",
  "оранжево-розовый",
  "темно-фиолетовый",
  "орхидный",
  "оливковый",
  "пурпурный",
  "лимонный",
  "кремовый",
  "сине-фиолетовый",
  "золотой",
  "красно-пурпурный",
  "голубой",
  "лазурный",
  "лиловый",
  "серебряный"
];

},{}],720:[function(require,module,exports){
module["exports"] = [
  "Книги",
  "Фильмы",
  "музыка",
  "игры",
  "Электроника",
  "компьютеры",
  "Дом",
  "садинструмент",
  "Бакалея",
  "здоровье",
  "красота",
  "Игрушки",
  "детское",
  "для малышей",
  "Одежда",
  "обувь",
  "украшения",
  "Спорт",
  "туризм",
  "Автомобильное",
  "промышленное"
];

},{}],721:[function(require,module,exports){
arguments[4][159][0].apply(exports,arguments)
},{"./color":719,"./department":720,"./product_name":722,"dup":159}],722:[function(require,module,exports){
module["exports"] = {
  "adjective": [
    "Маленький",
    "Эргономичный",
    "Грубый",
    "Интеллектуальный",
    "Великолепный",
    "Невероятный",
    "Фантастический",
    "Практчиный",
    "Лоснящийся",
    "Потрясающий"
  ],
  "material": [
    "Стальной",
    "Деревянный",
    "Бетонный",
    "Пластиковый",
    "Хлопковый",
    "Гранитный",
    "Резиновый"
  ],
  "product": [
    "Стул",
    "Автомобиль",
    "Компьютер",
    "Берет",
    "Кулон",
    "Стол",
    "Свитер",
    "Ремень",
    "Ботинок"
  ]
};

},{}],723:[function(require,module,exports){
arguments[4][468][0].apply(exports,arguments)
},{"./name":724,"./prefix":725,"./suffix":726,"dup":468}],724:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{Name.female_first_name}",
  "#{prefix} #{Name.male_first_name}",
  "#{prefix} #{Name.male_last_name}",
  "#{prefix} #{suffix}#{suffix}",
  "#{prefix} #{suffix}#{suffix}#{suffix}",
  "#{prefix} #{Address.city_name}#{suffix}",
  "#{prefix} #{Address.city_name}#{suffix}#{suffix}",
  "#{prefix} #{Address.city_name}#{suffix}#{suffix}#{suffix}"
];

},{}],725:[function(require,module,exports){
module["exports"] = [
  "ИП",
  "ООО",
  "ЗАО",
  "ОАО",
  "НКО",
  "ТСЖ",
  "ОП"
];

},{}],726:[function(require,module,exports){
module["exports"] = [
  "Снаб",
  "Торг",
  "Пром",
  "Трейд",
  "Сбыт"
];

},{}],727:[function(require,module,exports){
arguments[4][181][0].apply(exports,arguments)
},{"./month":728,"./weekday":729,"dup":181}],728:[function(require,module,exports){
// source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/ru.xml#L1734
module["exports"] = {
  wide: [
    "январь",
    "февраль",
    "март",
    "апрель",
    "май",
    "июнь",
    "июль",
    "август",
    "сентябрь",
    "октябрь",
    "ноябрь",
    "декабрь"
  ],
  wide_context: [
    "января",
    "февраля",
    "марта",
    "апреля",
    "мая",
    "июня",
    "июля",
    "августа",
    "сентября",
    "октября",
    "ноября",
    "декабря"
  ],
  abbr: [
    "янв.",
    "февр.",
    "март",
    "апр.",
    "май",
    "июнь",
    "июль",
    "авг.",
    "сент.",
    "окт.",
    "нояб.",
    "дек."
  ],
  abbr_context: [
    "янв.",
    "февр.",
    "марта",
    "апр.",
    "мая",
    "июня",
    "июля",
    "авг.",
    "сент.",
    "окт.",
    "нояб.",
    "дек."
  ]
};

},{}],729:[function(require,module,exports){
// source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/ru.xml#L1825
module["exports"] = {
  wide: [
    "Воскресенье",
    "Понедельник",
    "Вторник",
    "Среда",
    "Четверг",
    "Пятница",
    "Суббота"
  ],
  wide_context: [
    "воскресенье",
    "понедельник",
    "вторник",
    "среда",
    "четверг",
    "пятница",
    "суббота"
  ],
  abbr: [
    "Вс",
    "Пн",
    "Вт",
    "Ср",
    "Чт",
    "Пт",
    "Сб"
  ],
  abbr_context: [
    "вс",
    "пн",
    "вт",
    "ср",
    "чт",
    "пт",
    "сб"
  ]
};

},{}],730:[function(require,module,exports){
var ru = {};
module['exports'] = ru;
ru.title = "Russian";
ru.separator = " и ";
ru.address = require("./address");
ru.internet = require("./internet");
ru.name = require("./name");
ru.phone_number = require("./phone_number");
ru.commerce = require("./commerce");
ru.company = require("./company");
ru.date = require("./date");

},{"./address":711,"./commerce":721,"./company":723,"./date":727,"./internet":733,"./name":737,"./phone_number":745}],731:[function(require,module,exports){
module["exports"] = [
  "com",
  "ru",
  "info",
  "рф",
  "net",
  "org"
];

},{}],732:[function(require,module,exports){
module["exports"] = [
  "yandex.ru",
  "ya.ru",
  "mail.ru",
  "gmail.com",
  "yahoo.com",
  "hotmail.com"
];

},{}],733:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"./domain_suffix":731,"./free_email":732,"dup":75}],734:[function(require,module,exports){
module["exports"] = [
  "Анна",
  "Алёна",
  "Алевтина",
  "Александра",
  "Алина",
  "Алла",
  "Анастасия",
  "Ангелина",
  "Анжела",
  "Анжелика",
  "Антонида",
  "Антонина",
  "Анфиса",
  "Арина",
  "Валентина",
  "Валерия",
  "Варвара",
  "Василиса",
  "Вера",
  "Вероника",
  "Виктория",
  "Галина",
  "Дарья",
  "Евгения",
  "Екатерина",
  "Елена",
  "Елизавета",
  "Жанна",
  "Зинаида",
  "Зоя",
  "Ирина",
  "Кира",
  "Клавдия",
  "Ксения",
  "Лариса",
  "Лидия",
  "Любовь",
  "Людмила",
  "Маргарита",
  "Марина",
  "Мария",
  "Надежда",
  "Наталья",
  "Нина",
  "Оксана",
  "Ольга",
  "Раиса",
  "Регина",
  "Римма",
  "Светлана",
  "София",
  "Таисия",
  "Тамара",
  "Татьяна",
  "Ульяна",
  "Юлия"
];

},{}],735:[function(require,module,exports){
module["exports"] = [
  "Смирнова",
  "Иванова",
  "Кузнецова",
  "Попова",
  "Соколова",
  "Лебедева",
  "Козлова",
  "Новикова",
  "Морозова",
  "Петрова",
  "Волкова",
  "Соловьева",
  "Васильева",
  "Зайцева",
  "Павлова",
  "Семенова",
  "Голубева",
  "Виноградова",
  "Богданова",
  "Воробьева",
  "Федорова",
  "Михайлова",
  "Беляева",
  "Тарасова",
  "Белова",
  "Комарова",
  "Орлова",
  "Киселева",
  "Макарова",
  "Андреева",
  "Ковалева",
  "Ильина",
  "Гусева",
  "Титова",
  "Кузьмина",
  "Кудрявцева",
  "Баранова",
  "Куликова",
  "Алексеева",
  "Степанова",
  "Яковлева",
  "Сорокина",
  "Сергеева",
  "Романова",
  "Захарова",
  "Борисова",
  "Королева",
  "Герасимова",
  "Пономарева",
  "Григорьева",
  "Лазарева",
  "Медведева",
  "Ершова",
  "Никитина",
  "Соболева",
  "Рябова",
  "Полякова",
  "Цветкова",
  "Данилова",
  "Жукова",
  "Фролова",
  "Журавлева",
  "Николаева",
  "Крылова",
  "Максимова",
  "Сидорова",
  "Осипова",
  "Белоусова",
  "Федотова",
  "Дорофеева",
  "Егорова",
  "Матвеева",
  "Боброва",
  "Дмитриева",
  "Калинина",
  "Анисимова",
  "Петухова",
  "Антонова",
  "Тимофеева",
  "Никифорова",
  "Веселова",
  "Филиппова",
  "Маркова",
  "Большакова",
  "Суханова",
  "Миронова",
  "Ширяева",
  "Александрова",
  "Коновалова",
  "Шестакова",
  "Казакова",
  "Ефимова",
  "Денисова",
  "Громова",
  "Фомина",
  "Давыдова",
  "Мельникова",
  "Щербакова",
  "Блинова",
  "Колесникова",
  "Карпова",
  "Афанасьева",
  "Власова",
  "Маслова",
  "Исакова",
  "Тихонова",
  "Аксенова",
  "Гаврилова",
  "Родионова",
  "Котова",
  "Горбунова",
  "Кудряшова",
  "Быкова",
  "Зуева",
  "Третьякова",
  "Савельева",
  "Панова",
  "Рыбакова",
  "Суворова",
  "Абрамова",
  "Воронова",
  "Мухина",
  "Архипова",
  "Трофимова",
  "Мартынова",
  "Емельянова",
  "Горшкова",
  "Чернова",
  "Овчинникова",
  "Селезнева",
  "Панфилова",
  "Копылова",
  "Михеева",
  "Галкина",
  "Назарова",
  "Лобанова",
  "Лукина",
  "Белякова",
  "Потапова",
  "Некрасова",
  "Хохлова",
  "Жданова",
  "Наумова",
  "Шилова",
  "Воронцова",
  "Ермакова",
  "Дроздова",
  "Игнатьева",
  "Савина",
  "Логинова",
  "Сафонова",
  "Капустина",
  "Кириллова",
  "Моисеева",
  "Елисеева",
  "Кошелева",
  "Костина",
  "Горбачева",
  "Орехова",
  "Ефремова",
  "Исаева",
  "Евдокимова",
  "Калашникова",
  "Кабанова",
  "Носкова",
  "Юдина",
  "Кулагина",
  "Лапина",
  "Прохорова",
  "Нестерова",
  "Харитонова",
  "Агафонова",
  "Муравьева",
  "Ларионова",
  "Федосеева",
  "Зимина",
  "Пахомова",
  "Шубина",
  "Игнатова",
  "Филатова",
  "Крюкова",
  "Рогова",
  "Кулакова",
  "Терентьева",
  "Молчанова",
  "Владимирова",
  "Артемьева",
  "Гурьева",
  "Зиновьева",
  "Гришина",
  "Кононова",
  "Дементьева",
  "Ситникова",
  "Симонова",
  "Мишина",
  "Фадеева",
  "Комиссарова",
  "Мамонтова",
  "Носова",
  "Гуляева",
  "Шарова",
  "Устинова",
  "Вишнякова",
  "Евсеева",
  "Лаврентьева",
  "Брагина",
  "Константинова",
  "Корнилова",
  "Авдеева",
  "Зыкова",
  "Бирюкова",
  "Шарапова",
  "Никонова",
  "Щукина",
  "Дьячкова",
  "Одинцова",
  "Сазонова",
  "Якушева",
  "Красильникова",
  "Гордеева",
  "Самойлова",
  "Князева",
  "Беспалова",
  "Уварова",
  "Шашкова",
  "Бобылева",
  "Доронина",
  "Белозерова",
  "Рожкова",
  "Самсонова",
  "Мясникова",
  "Лихачева",
  "Бурова",
  "Сысоева",
  "Фомичева",
  "Русакова",
  "Стрелкова",
  "Гущина",
  "Тетерина",
  "Колобова",
  "Субботина",
  "Фокина",
  "Блохина",
  "Селиверстова",
  "Пестова",
  "Кондратьева",
  "Силина",
  "Меркушева",
  "Лыткина",
  "Турова"
];

},{}],736:[function(require,module,exports){
module["exports"] = [
  "Александровна",
  "Алексеевна",
  "Альбертовна",
  "Анатольевна",
  "Андреевна",
  "Антоновна",
  "Аркадьевна",
  "Арсеньевна",
  "Артёмовна",
  "Борисовна",
  "Вадимовна",
  "Валентиновна",
  "Валерьевна",
  "Васильевна",
  "Викторовна",
  "Витальевна",
  "Владимировна",
  "Владиславовна",
  "Вячеславовна",
  "Геннадьевна",
  "Георгиевна",
  "Германовна",
  "Григорьевна",
  "Данииловна",
  "Денисовна",
  "Дмитриевна",
  "Евгеньевна",
  "Егоровна",
  "Ивановна",
  "Игнатьевна",
  "Игоревна",
  "Ильинична",
  "Константиновна",
  "Лаврентьевна",
  "Леонидовна",
  "Макаровна",
  "Максимовна",
  "Матвеевна",
  "Михайловна",
  "Никитична",
  "Николаевна",
  "Олеговна",
  "Романовна",
  "Семёновна",
  "Сергеевна",
  "Станиславовна",
  "Степановна",
  "Фёдоровна",
  "Эдуардовна",
  "Юрьевна",
  "Ярославовна"
];

},{}],737:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.male_first_name = require("./male_first_name");
name.male_middle_name = require("./male_middle_name");
name.male_last_name = require("./male_last_name");
name.female_first_name = require("./female_first_name");
name.female_middle_name = require("./female_middle_name");
name.female_last_name = require("./female_last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.name = require("./name");

},{"./female_first_name":734,"./female_last_name":735,"./female_middle_name":736,"./male_first_name":738,"./male_last_name":739,"./male_middle_name":740,"./name":741,"./prefix":742,"./suffix":743}],738:[function(require,module,exports){
module["exports"] = [
  "Александр",
  "Алексей",
  "Альберт",
  "Анатолий",
  "Андрей",
  "Антон",
  "Аркадий",
  "Арсений",
  "Артём",
  "Борис",
  "Вадим",
  "Валентин",
  "Валерий",
  "Василий",
  "Виктор",
  "Виталий",
  "Владимир",
  "Владислав",
  "Вячеслав",
  "Геннадий",
  "Георгий",
  "Герман",
  "Григорий",
  "Даниил",
  "Денис",
  "Дмитрий",
  "Евгений",
  "Егор",
  "Иван",
  "Игнатий",
  "Игорь",
  "Илья",
  "Константин",
  "Лаврентий",
  "Леонид",
  "Лука",
  "Макар",
  "Максим",
  "Матвей",
  "Михаил",
  "Никита",
  "Николай",
  "Олег",
  "Роман",
  "Семён",
  "Сергей",
  "Станислав",
  "Степан",
  "Фёдор",
  "Эдуард",
  "Юрий",
  "Ярослав"
];

},{}],739:[function(require,module,exports){
module["exports"] = [
  "Смирнов",
  "Иванов",
  "Кузнецов",
  "Попов",
  "Соколов",
  "Лебедев",
  "Козлов",
  "Новиков",
  "Морозов",
  "Петров",
  "Волков",
  "Соловьев",
  "Васильев",
  "Зайцев",
  "Павлов",
  "Семенов",
  "Голубев",
  "Виноградов",
  "Богданов",
  "Воробьев",
  "Федоров",
  "Михайлов",
  "Беляев",
  "Тарасов",
  "Белов",
  "Комаров",
  "Орлов",
  "Киселев",
  "Макаров",
  "Андреев",
  "Ковалев",
  "Ильин",
  "Гусев",
  "Титов",
  "Кузьмин",
  "Кудрявцев",
  "Баранов",
  "Куликов",
  "Алексеев",
  "Степанов",
  "Яковлев",
  "Сорокин",
  "Сергеев",
  "Романов",
  "Захаров",
  "Борисов",
  "Королев",
  "Герасимов",
  "Пономарев",
  "Григорьев",
  "Лазарев",
  "Медведев",
  "Ершов",
  "Никитин",
  "Соболев",
  "Рябов",
  "Поляков",
  "Цветков",
  "Данилов",
  "Жуков",
  "Фролов",
  "Журавлев",
  "Николаев",
  "Крылов",
  "Максимов",
  "Сидоров",
  "Осипов",
  "Белоусов",
  "Федотов",
  "Дорофеев",
  "Егоров",
  "Матвеев",
  "Бобров",
  "Дмитриев",
  "Калинин",
  "Анисимов",
  "Петухов",
  "Антонов",
  "Тимофеев",
  "Никифоров",
  "Веселов",
  "Филиппов",
  "Марков",
  "Большаков",
  "Суханов",
  "Миронов",
  "Ширяев",
  "Александров",
  "Коновалов",
  "Шестаков",
  "Казаков",
  "Ефимов",
  "Денисов",
  "Громов",
  "Фомин",
  "Давыдов",
  "Мельников",
  "Щербаков",
  "Блинов",
  "Колесников",
  "Карпов",
  "Афанасьев",
  "Власов",
  "Маслов",
  "Исаков",
  "Тихонов",
  "Аксенов",
  "Гаврилов",
  "Родионов",
  "Котов",
  "Горбунов",
  "Кудряшов",
  "Быков",
  "Зуев",
  "Третьяков",
  "Савельев",
  "Панов",
  "Рыбаков",
  "Суворов",
  "Абрамов",
  "Воронов",
  "Мухин",
  "Архипов",
  "Трофимов",
  "Мартынов",
  "Емельянов",
  "Горшков",
  "Чернов",
  "Овчинников",
  "Селезнев",
  "Панфилов",
  "Копылов",
  "Михеев",
  "Галкин",
  "Назаров",
  "Лобанов",
  "Лукин",
  "Беляков",
  "Потапов",
  "Некрасов",
  "Хохлов",
  "Жданов",
  "Наумов",
  "Шилов",
  "Воронцов",
  "Ермаков",
  "Дроздов",
  "Игнатьев",
  "Савин",
  "Логинов",
  "Сафонов",
  "Капустин",
  "Кириллов",
  "Моисеев",
  "Елисеев",
  "Кошелев",
  "Костин",
  "Горбачев",
  "Орехов",
  "Ефремов",
  "Исаев",
  "Евдокимов",
  "Калашников",
  "Кабанов",
  "Носков",
  "Юдин",
  "Кулагин",
  "Лапин",
  "Прохоров",
  "Нестеров",
  "Харитонов",
  "Агафонов",
  "Муравьев",
  "Ларионов",
  "Федосеев",
  "Зимин",
  "Пахомов",
  "Шубин",
  "Игнатов",
  "Филатов",
  "Крюков",
  "Рогов",
  "Кулаков",
  "Терентьев",
  "Молчанов",
  "Владимиров",
  "Артемьев",
  "Гурьев",
  "Зиновьев",
  "Гришин",
  "Кононов",
  "Дементьев",
  "Ситников",
  "Симонов",
  "Мишин",
  "Фадеев",
  "Комиссаров",
  "Мамонтов",
  "Носов",
  "Гуляев",
  "Шаров",
  "Устинов",
  "Вишняков",
  "Евсеев",
  "Лаврентьев",
  "Брагин",
  "Константинов",
  "Корнилов",
  "Авдеев",
  "Зыков",
  "Бирюков",
  "Шарапов",
  "Никонов",
  "Щукин",
  "Дьячков",
  "Одинцов",
  "Сазонов",
  "Якушев",
  "Красильников",
  "Гордеев",
  "Самойлов",
  "Князев",
  "Беспалов",
  "Уваров",
  "Шашков",
  "Бобылев",
  "Доронин",
  "Белозеров",
  "Рожков",
  "Самсонов",
  "Мясников",
  "Лихачев",
  "Буров",
  "Сысоев",
  "Фомичев",
  "Русаков",
  "Стрелков",
  "Гущин",
  "Тетерин",
  "Колобов",
  "Субботин",
  "Фокин",
  "Блохин",
  "Селиверстов",
  "Пестов",
  "Кондратьев",
  "Силин",
  "Меркушев",
  "Лыткин",
  "Туров"
];

},{}],740:[function(require,module,exports){
module["exports"] = [
  "Александрович",
  "Алексеевич",
  "Альбертович",
  "Анатольевич",
  "Андреевич",
  "Антонович",
  "Аркадьевич",
  "Арсеньевич",
  "Артёмович",
  "Борисович",
  "Вадимович",
  "Валентинович",
  "Валерьевич",
  "Васильевич",
  "Викторович",
  "Витальевич",
  "Владимирович",
  "Владиславович",
  "Вячеславович",
  "Геннадьевич",
  "Георгиевич",
  "Германович",
  "Григорьевич",
  "Даниилович",
  "Денисович",
  "Дмитриевич",
  "Евгеньевич",
  "Егорович",
  "Иванович",
  "Игнатьевич",
  "Игоревич",
  "Ильич",
  "Константинович",
  "Лаврентьевич",
  "Леонидович",
  "Лукич",
  "Макарович",
  "Максимович",
  "Матвеевич",
  "Михайлович",
  "Никитич",
  "Николаевич",
  "Олегович",
  "Романович",
  "Семёнович",
  "Сергеевич",
  "Станиславович",
  "Степанович",
  "Фёдорович",
  "Эдуардович",
  "Юрьевич",
  "Ярославович"
];

},{}],741:[function(require,module,exports){
module["exports"] = [
  "#{male_first_name} #{male_last_name}",
  "#{male_last_name} #{male_first_name}",
  "#{male_first_name} #{male_middle_name} #{male_last_name}",
  "#{male_last_name} #{male_first_name} #{male_middle_name}",
  "#{female_first_name} #{female_last_name}",
  "#{female_last_name} #{female_first_name}",
  "#{female_first_name} #{female_middle_name} #{female_last_name}",
  "#{female_last_name} #{female_first_name} #{female_middle_name}"
];

},{}],742:[function(require,module,exports){
arguments[4][516][0].apply(exports,arguments)
},{"dup":516}],743:[function(require,module,exports){
arguments[4][516][0].apply(exports,arguments)
},{"dup":516}],744:[function(require,module,exports){
module["exports"] = [
  "(9##)###-##-##"
];

},{}],745:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":744,"dup":85}],746:[function(require,module,exports){
module["exports"] = [
  "#",
  "##",
  "###"
];

},{}],747:[function(require,module,exports){
arguments[4][87][0].apply(exports,arguments)
},{"dup":87}],748:[function(require,module,exports){
module["exports"] = [
  "Bánovce nad Bebravou",
  "Banská Bystrica",
  "Banská Štiavnica",
  "Bardejov",
  "Bratislava I",
  "Bratislava II",
  "Bratislava III",
  "Bratislava IV",
  "Bratislava V",
  "Brezno",
  "Bytča",
  "Čadca",
  "Detva",
  "Dolný Kubín",
  "Dunajská Streda",
  "Galanta",
  "Gelnica",
  "Hlohovec",
  "Humenné",
  "Ilava",
  "Kežmarok",
  "Komárno",
  "Košice I",
  "Košice II",
  "Košice III",
  "Košice IV",
  "Košice-okolie",
  "Krupina",
  "Kysucké Nové Mesto",
  "Levice",
  "Levoča",
  "Liptovský Mikuláš",
  "Lučenec",
  "Malacky",
  "Martin",
  "Medzilaborce",
  "Michalovce",
  "Myjava",
  "Námestovo",
  "Nitra",
  "Nové Mesto n.Váhom",
  "Nové Zámky",
  "Partizánske",
  "Pezinok",
  "Piešťany",
  "Poltár",
  "Poprad",
  "Považská Bystrica",
  "Prešov",
  "Prievidza",
  "Púchov",
  "Revúca",
  "Rimavská Sobota",
  "Rožňava",
  "Ružomberok",
  "Sabinov",
  "Šaľa",
  "Senec",
  "Senica",
  "Skalica",
  "Snina",
  "Sobrance",
  "Spišská Nová Ves",
  "Stará Ľubovňa",
  "Stropkov",
  "Svidník",
  "Topoľčany",
  "Trebišov",
  "Trenčín",
  "Trnava",
  "Turčianske Teplice",
  "Tvrdošín",
  "Veľký Krtíš",
  "Vranov nad Topľou",
  "Žarnovica",
  "Žiar nad Hronom",
  "Žilina",
  "Zlaté Moravce",
  "Zvolen"
];

},{}],749:[function(require,module,exports){
arguments[4][131][0].apply(exports,arguments)
},{"dup":131}],750:[function(require,module,exports){
arguments[4][132][0].apply(exports,arguments)
},{"dup":132}],751:[function(require,module,exports){
module["exports"] = [
  "Afganistan",
  "Afgánsky islamský štát",
  "Albánsko",
  "Albánska republika",
  "Alžírsko",
  "Alžírska demokratická ľudová republika",
  "Andorra",
  "Andorrské kniežatsvo",
  "Angola",
  "Angolská republika",
  "Antigua a Barbuda",
  "Antigua a Barbuda",
  "Argentína",
  "Argentínska republika",
  "Arménsko",
  "Arménska republika",
  "Austrália",
  "Austrálsky zväz",
  "Azerbajdžan",
  "Azerbajdžanská republika",
  "Bahamy",
  "Bahamské spoločenstvo",
  "Bahrajn",
  "Bahrajnské kráľovstvo",
  "Bangladéš",
  "Bangladéšska ľudová republika",
  "Barbados",
  "Barbados",
  "Belgicko",
  "Belgické kráľovstvo",
  "Belize",
  "Belize",
  "Benin",
  "Beninská republika",
  "Bhután",
  "Bhutánske kráľovstvo",
  "Bielorusko",
  "Bieloruská republika",
  "Bolívia",
  "Bolívijská republika",
  "Bosna a Hercegovina",
  "Republika Bosny a Hercegoviny",
  "Botswana",
  "Botswanská republika",
  "Brazília",
  "Brazílska federatívna republika",
  "Brunej",
  "Brunejský sultanát",
  "Bulharsko",
  "Bulharská republika",
  "Burkina Faso",
  "Burkina Faso",
  "Burundi",
  "Burundská republika",
  "Cyprus",
  "Cyperská republika",
  "Čad",
  "Republika Čad",
  "Česko",
  "Česká republika",
  "Čína",
  "Čínska ľudová republika",
  "Dánsko",
  "Dánsko kráľovstvo",
  "Dominika",
  "Spoločenstvo Dominika",
  "Dominikánska republika",
  "Dominikánska republika",
  "Džibutsko",
  "Džibutská republika",
  "Egypt",
  "Egyptská arabská republika",
  "Ekvádor",
  "Ekvádorská republika",
  "Eritrea",
  "Eritrejský štát",
  "Estónsko",
  "Estónska republika",
  "Etiópia",
  "Etiópska federatívna demokratická republika",
  "Fidži",
  "Republika ostrovy Fidži",
  "Filipíny",
  "Filipínska republika",
  "Fínsko",
  "Fínska republika",
  "Francúzsko",
  "Francúzska republika",
  "Gabon",
  "Gabonská republika",
  "Gambia",
  "Gambijská republika",
  "Ghana",
  "Ghanská republika",
  "Grécko",
  "Helénska republika",
  "Grenada",
  "Grenada",
  "Gruzínsko",
  "Gruzínsko",
  "Guatemala",
  "Guatemalská republika",
  "Guinea",
  "Guinejská republika",
  "Guinea-Bissau",
  "Republika Guinea-Bissau",
  "Guayana",
  "Guayanská republika",
  "Haiti",
  "Republika Haiti",
  "Holandsko",
  "Holandské kráľovstvo",
  "Honduras",
  "Honduraská republika",
  "Chile",
  "Čílska republika",
  "Chorvátsko",
  "Chorvátska republika",
  "India",
  "Indická republika",
  "Indonézia",
  "Indonézska republika",
  "Irak",
  "Iracká republika",
  "Irán",
  "Iránska islamská republika",
  "Island",
  "Islandská republika",
  "Izrael",
  "Štát Izrael",
  "Írsko",
  "Írska republika",
  "Jamajka",
  "Jamajka",
  "Japonsko",
  "Japonsko",
  "Jemen",
  "Jemenská republika",
  "Jordánsko",
  "Jordánske hášimovské kráľovstvo",
  "Južná Afrika",
  "Juhoafrická republika",
  "Kambodža",
  "Kambodžské kráľovstvo",
  "Kamerun",
  "Kamerunská republika",
  "Kanada",
  "Kanada",
  "Kapverdy",
  "Kapverdská republika",
  "Katar",
  "Štát Katar",
  "Kazachstan",
  "Kazašská republika",
  "Keňa",
  "Kenská republika",
  "Kirgizsko",
  "Kirgizská republika",
  "Kiribati",
  "Kiribatská republika",
  "Kolumbia",
  "Kolumbijská republika",
  "Komory",
  "Komorská únia",
  "Kongo",
  "Konžská demokratická republika",
  "Kongo (\"Brazzaville\")",
  "Konžská republika",
  "Kórea (\"Južná\")",
  "Kórejská republika",
  "Kórea (\"Severná\")",
  "Kórejská ľudovodemokratická republika",
  "Kostarika",
  "Kostarická republika",
  "Kuba",
  "Kubánska republika",
  "Kuvajt",
  "Kuvajtský štát",
  "Laos",
  "Laoská ľudovodemokratická republika",
  "Lesotho",
  "Lesothské kráľovstvo",
  "Libanon",
  "Libanonská republika",
  "Libéria",
  "Libérijská republika",
  "Líbya",
  "Líbyjská arabská ľudová socialistická džamáhírija",
  "Lichtenštajnsko",
  "Lichtenštajnské kniežatstvo",
  "Litva",
  "Litovská republika",
  "Lotyšsko",
  "Lotyšská republika",
  "Luxembursko",
  "Luxemburské veľkovojvodstvo",
  "Macedónsko",
  "Macedónska republika",
  "Madagaskar",
  "Madagaskarská republika",
  "Maďarsko",
  "Maďarská republika",
  "Malajzia",
  "Malajzia",
  "Malawi",
  "Malawijská republika",
  "Maldivy",
  "Maldivská republika",
  "Mali",
  "Malijská republika",
  "Malta",
  "Malta",
  "Maroko",
  "Marocké kráľovstvo",
  "Marshallove ostrovy",
  "Republika Marshallových ostrovy",
  "Mauritánia",
  "Mauritánska islamská republika",
  "Maurícius",
  "Maurícijská republika",
  "Mexiko",
  "Spojené štáty mexické",
  "Mikronézia",
  "Mikronézske federatívne štáty",
  "Mjanmarsko",
  "Mjanmarský zväz",
  "Moldavsko",
  "Moldavská republika",
  "Monako",
  "Monacké kniežatstvo",
  "Mongolsko",
  "Mongolsko",
  "Mozambik",
  "Mozambická republika",
  "Namíbia",
  "Namíbijská republika",
  "Nauru",
  "Naurská republika",
  "Nemecko",
  "Nemecká spolková republika",
  "Nepál",
  "Nepálske kráľovstvo",
  "Niger",
  "Nigerská republika",
  "Nigéria",
  "Nigérijská federatívna republika",
  "Nikaragua",
  "Nikaragujská republika",
  "Nový Zéland",
  "Nový Zéland",
  "Nórsko",
  "Nórske kráľovstvo",
  "Omán",
  "Ománsky sultanát",
  "Pakistan",
  "Pakistanská islamská republika",
  "Palau",
  "Palauská republika",
  "Panama",
  "Panamská republika",
  "Papua-Nová Guinea",
  "Nezávislý štát Papua-Nová Guinea",
  "Paraguaj",
  "Paraguajská republika",
  "Peru",
  "Peruánska republika",
  "Pobrežie Slonoviny",
  "Republika Pobrežie Slonoviny",
  "Poľsko",
  "Poľská republika",
  "Portugalsko",
  "Portugalská republika",
  "Rakúsko",
  "Rakúska republika",
  "Rovníková Guinea",
  "Republika Rovníková Guinea",
  "Rumunsko",
  "Rumunsko",
  "Rusko",
  "Ruská federácia",
  "Rwanda",
  "Rwandská republika",
  "Salvádor",
  "Salvádorská republika",
  "Samoa",
  "Nezávislý štát Samoa",
  "San Maríno",
  "Sanmarínska republika",
  "Saudská Arábia",
  "Kráľovstvo Saudskej Arábie",
  "Senegal",
  "Senegalská republika",
  "Seychely",
  "Seychelská republika",
  "Sierra Leone",
  "Republika Sierra Leone",
  "Singapur",
  "Singapurska republika",
  "Slovensko",
  "Slovenská republika",
  "Slovinsko",
  "Slovinská republika",
  "Somálsko",
  "Somálska demokratická republika",
  "Spojené arabské emiráty",
  "Spojené arabské emiráty",
  "Spojené štáty americké",
  "Spojené štáty americké",
  "Srbsko a Čierna Hora",
  "Srbsko a Čierna Hora",
  "Srí Lanka",
  "Demokratická socialistická republika Srí Lanka",
  "Stredoafrická republika",
  "Stredoafrická republika",
  "Sudán",
  "Sudánska republika",
  "Surinam",
  "Surinamská republika",
  "Svazijsko",
  "Svazijské kráľovstvo",
  "Svätá Lucia",
  "Svätá Lucia",
  "Svätý Krištof a Nevis",
  "Federácia Svätý Krištof a Nevis",
  "Sv. Tomáš a Princov Ostrov",
  "Demokratická republika Svätý Tomáš a Princov Ostrov",
  "Sv. Vincent a Grenadíny",
  "Svätý Vincent a Grenadíny",
  "Sýria",
  "Sýrska arabská republika",
  "Šalamúnove ostrovy",
  "Šalamúnove ostrovy",
  "Španielsko",
  "Španielske kráľovstvo",
  "Švajčiarsko",
  "Švajčiarska konfederácia",
  "Švédsko",
  "Švédske kráľovstvo",
  "Tadžikistan",
  "Tadžická republika",
  "Taliansko",
  "Talianska republika",
  "Tanzánia",
  "Tanzánijská zjednotená republika",
  "Thajsko",
  "Thajské kráľovstvo",
  "Togo",
  "Tožská republika",
  "Tonga",
  "Tonžské kráľovstvo",
  "Trinidad a Tobago",
  "Republika Trinidad a Tobago",
  "Tunisko",
  "Tuniská republika",
  "Turecko",
  "Turecká republika",
  "Turkménsko",
  "Turkménsko",
  "Tuvalu",
  "Tuvalu",
  "Uganda",
  "Ugandská republika",
  "Ukrajina",
  "Uruguaj",
  "Uruguajská východná republika",
  "Uzbekistan",
  "Vanuatu",
  "Vanuatská republika",
  "Vatikán",
  "Svätá Stolica",
  "Veľká Británia",
  "Spojené kráľovstvo Veľkej Británie a Severného Írska",
  "Venezuela",
  "Venezuelská bolívarovská republika",
  "Vietnam",
  "Vietnamská socialistická republika",
  "Východný Timor",
  "Demokratická republika Východný Timor",
  "Zambia",
  "Zambijská republika",
  "Zimbabwe",
  "Zimbabwianska republika"
];

},{}],752:[function(require,module,exports){
module["exports"] = [
  "Slovensko"
];

},{}],753:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.country = require("./country");
address.building_number = require("./building_number");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.time_zone = require("./time_zone");
address.city_name = require("./city_name");
address.city = require("./city");
address.street = require("./street");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":746,"./city":747,"./city_name":748,"./city_prefix":749,"./city_suffix":750,"./country":751,"./default_country":752,"./postcode":754,"./secondary_address":755,"./state":756,"./state_abbr":757,"./street":758,"./street_address":759,"./street_name":760,"./time_zone":761}],754:[function(require,module,exports){
module["exports"] = [
  "#####",
  "### ##",
  "## ###"
];

},{}],755:[function(require,module,exports){
arguments[4][140][0].apply(exports,arguments)
},{"dup":140}],756:[function(require,module,exports){
arguments[4][516][0].apply(exports,arguments)
},{"dup":516}],757:[function(require,module,exports){
arguments[4][516][0].apply(exports,arguments)
},{"dup":516}],758:[function(require,module,exports){
module["exports"] = [
  "Adámiho",
  "Ahoj",
  "Albína Brunovského",
  "Albrechtova",
  "Alejová",
  "Alešova",
  "Alibernetová",
  "Alžbetínska",
  "Alžbety Gwerkovej",
  "Ambroseho",
  "Ambrušova",
  "Americká",
  "Americké námestie",
  "Americké námestie",
  "Andreja Mráza",
  "Andreja Plávku",
  "Andrusovova",
  "Anenská",
  "Anenská",
  "Antolská",
  "Astronomická",
  "Astrová",
  "Azalková",
  "Azovská",
  "Babuškova",
  "Bachova",
  "Bajkalská",
  "Bajkalská",
  "Bajkalská",
  "Bajkalská",
  "Bajkalská",
  "Bajkalská",
  "Bajzova",
  "Bancíkovej",
  "Banícka",
  "Baníkova",
  "Banskobystrická",
  "Banšelova",
  "Bardejovská",
  "Bartókova",
  "Bartoňova",
  "Bartoškova",
  "Baštová",
  "Bazová",
  "Bažantia",
  "Beblavého",
  "Beckovská",
  "Bedľová",
  "Belániková",
  "Belehradská",
  "Belinského",
  "Belopotockého",
  "Beňadická",
  "Bencúrova",
  "Benediktiho",
  "Beniakova",
  "Bernolákova",
  "Beskydská",
  "Betliarska",
  "Bezručova",
  "Biela",
  "Bielkova",
  "Björnsonova",
  "Blagoevova",
  "Blatnická",
  "Blumentálska",
  "Blyskáčová",
  "Bočná",
  "Bohrova",
  "Bohúňova",
  "Bojnická",
  "Borodáčova",
  "Borská",
  "Bosákova",
  "Botanická",
  "Bottova",
  "Boženy Němcovej",
  "Bôrik",
  "Bradáčova",
  "Bradlianska",
  "Brančská",
  "Bratská",
  "Brestová",
  "Brezovská",
  "Briežky",
  "Brnianska",
  "Brodná",
  "Brodská",
  "Broskyňová",
  "Břeclavská",
  "Budatínska",
  "Budatínska",
  "Budatínska",
  "Búdkova  cesta",
  "Budovateľská",
  "Budyšínska",
  "Budyšínska",
  "Buková",
  "Bukureštská",
  "Bulharská",
  "Bulíkova",
  "Bystrého",
  "Bzovícka",
  "Cablkova",
  "Cesta na Červený most",
  "Cesta na Červený most",
  "Cesta na Senec",
  "Cikkerova",
  "Cintorínska",
  "Cintulova",
  "Cukrová",
  "Cyrilova",
  "Čajakova",
  "Čajkovského",
  "Čaklovská",
  "Čalovská",
  "Čapajevova",
  "Čapkova",
  "Čárskeho",
  "Čavojského",
  "Čečinová",
  "Čelakovského",
  "Čerešňová",
  "Černyševského",
  "Červeňova",
  "Česká",
  "Československých par",
  "Čipkárska",
  "Čmelíkova",
  "Čmeľovec",
  "Čulenova",
  "Daliborovo námestie",
  "Dankovského",
  "Dargovská",
  "Ďatelinová",
  "Daxnerovo námestie",
  "Devínska cesta",
  "Dlhé diely I.",
  "Dlhé diely II.",
  "Dlhé diely III.",
  "Dobrovičova",
  "Dobrovičova",
  "Dobrovského",
  "Dobšinského",
  "Dohnalova",
  "Dohnányho",
  "Doležalova",
  "Dolná",
  "Dolnozemská cesta",
  "Domkárska",
  "Domové role",
  "Donnerova",
  "Donovalova",
  "Dostojevského rad",
  "Dr. Vladimíra Clemen",
  "Drevená",
  "Drieňová",
  "Drieňová",
  "Drieňová",
  "Drotárska cesta",
  "Drotárska cesta",
  "Drotárska cesta",
  "Družicová",
  "Družstevná",
  "Dubnická",
  "Dubová",
  "Dúbravská cesta",
  "Dudova",
  "Dulovo námestie",
  "Dulovo námestie",
  "Dunajská",
  "Dvořákovo nábrežie",
  "Edisonova",
  "Einsteinova",
  "Elektrárenská",
  "Exnárova",
  "F. Kostku",
  "Fadruszova",
  "Fajnorovo nábrežie",
  "Fándlyho",
  "Farebná",
  "Farská",
  "Farského",
  "Fazuľová",
  "Fedinova",
  "Ferienčíkova",
  "Fialkové údolie",
  "Fibichova",
  "Filiálne nádražie",
  "Flöglova",
  "Floriánske námestie",
  "Fraňa Kráľa",
  "Francisciho",
  "Francúzskych partizá",
  "Františkánska",
  "Františkánske námest",
  "Furdekova",
  "Furdekova",
  "Gabčíkova",
  "Gagarinova",
  "Gagarinova",
  "Gagarinova",
  "Gajova",
  "Galaktická",
  "Galandova",
  "Gallova",
  "Galvaniho",
  "Gašparíkova",
  "Gaštanová",
  "Gavlovičova",
  "Gemerská",
  "Gercenova",
  "Gessayova",
  "Gettingová",
  "Godrova",
  "Gogoľova",
  "Goláňova",
  "Gondova",
  "Goralská",
  "Gorazdova",
  "Gorkého",
  "Gregorovej",
  "Grösslingova",
  "Gruzínska",
  "Gunduličova",
  "Gusevova",
  "Haanova",
  "Haburská",
  "Halašova",
  "Hálkova",
  "Hálova",
  "Hamuliakova",
  "Hanácka",
  "Handlovská",
  "Hany Meličkovej",
  "Harmanecká",
  "Hasičská",
  "Hattalova",
  "Havlíčkova",
  "Havrania",
  "Haydnova",
  "Herlianska",
  "Herlianska",
  "Heydukova",
  "Hlaváčikova",
  "Hlavatého",
  "Hlavné námestie",
  "Hlboká cesta",
  "Hlboká cesta",
  "Hlivová",
  "Hlučínska",
  "Hodálova",
  "Hodžovo námestie",
  "Holekova",
  "Holíčska",
  "Hollého",
  "Holubyho",
  "Hontianska",
  "Horárska",
  "Horné Židiny",
  "Horská",
  "Horská",
  "Hrad",
  "Hradné údolie",
  "Hrachová",
  "Hraničná",
  "Hrebendova",
  "Hríbová",
  "Hriňovská",
  "Hrobákova",
  "Hrobárska",
  "Hroboňova",
  "Hudecova",
  "Humenské námestie",
  "Hummelova",
  "Hurbanovo námestie",
  "Hurbanovo námestie",
  "Hviezdoslavovo námes",
  "Hýrošova",
  "Chalupkova",
  "Chemická",
  "Chlumeckého",
  "Chorvátska",
  "Chorvátska",
  "Iľjušinova",
  "Ilkovičova",
  "Inovecká",
  "Inovecká",
  "Iskerníková",
  "Ivana Horvátha",
  "Ivánska cesta",
  "J.C.Hronského",
  "Jabloňová",
  "Jadrová",
  "Jakabova",
  "Jakubovo námestie",
  "Jamnického",
  "Jána Stanislava",
  "Janáčkova",
  "Jančova",
  "Janíkove role",
  "Jankolova",
  "Jánošíkova",
  "Jánoškova",
  "Janotova",
  "Jánska",
  "Jantárová cesta",
  "Jarabinková",
  "Jarná",
  "Jaroslavova",
  "Jarošova",
  "Jaseňová",
  "Jasná",
  "Jasovská",
  "Jastrabia",
  "Jašíkova",
  "Javorinská",
  "Javorová",
  "Jazdecká",
  "Jedlíkova",
  "Jégého",
  "Jelačičova",
  "Jelenia",
  "Jesenná",
  "Jesenského",
  "Jiráskova",
  "Jiskrova",
  "Jozefská",
  "Junácka",
  "Jungmannova",
  "Jurigovo námestie",
  "Jurovského",
  "Jurská",
  "Justičná",
  "K lomu",
  "K Železnej studienke",
  "Kalinčiakova",
  "Kamenárska",
  "Kamenné námestie",
  "Kapicova",
  "Kapitulská",
  "Kapitulský dvor",
  "Kapucínska",
  "Kapušianska",
  "Karadžičova",
  "Karadžičova",
  "Karadžičova",
  "Karadžičova",
  "Karloveská",
  "Karloveské rameno",
  "Karpatská",
  "Kašmírska",
  "Kaštielska",
  "Kaukazská",
  "Kempelenova",
  "Kežmarské námestie",
  "Kladnianska",
  "Klariská",
  "Kláštorská",
  "Klatovská",
  "Klatovská",
  "Klemensova",
  "Klincová",
  "Klobučnícka",
  "Klokočova",
  "Kľukatá",
  "Kmeťovo námestie",
  "Koceľova",
  "Kočánkova",
  "Kohútova",
  "Kolárska",
  "Kolískova",
  "Kollárovo námestie",
  "Kollárovo námestie",
  "Kolmá",
  "Komárňanská",
  "Komárnická",
  "Komárnická",
  "Komenského námestie",
  "Kominárska",
  "Komonicová",
  "Konopná",
  "Konvalinková",
  "Konventná",
  "Kopanice",
  "Kopčianska",
  "Koperníkova",
  "Korabinského",
  "Koreničova",
  "Kostlivého",
  "Kostolná",
  "Košická",
  "Košická",
  "Košická",
  "Kováčska",
  "Kovorobotnícka",
  "Kozia",
  "Koziarka",
  "Kozmonautická",
  "Krajná",
  "Krakovská",
  "Kráľovské údolie",
  "Krasinského",
  "Kraskova",
  "Krásna",
  "Krásnohorská",
  "Krasovského",
  "Krátka",
  "Krčméryho",
  "Kremnická",
  "Kresánkova",
  "Krivá",
  "Križkova",
  "Krížna",
  "Krížna",
  "Krížna",
  "Krížna",
  "Krmanova",
  "Krompašská",
  "Krupinská",
  "Krupkova",
  "Kubániho",
  "Kubínska",
  "Kuklovská",
  "Kukučínova",
  "Kukuričná",
  "Kulíškova",
  "Kultúrna",
  "Kupeckého",
  "Kúpeľná",
  "Kutlíkova",
  "Kutuzovova",
  "Kuzmányho",
  "Kvačalova",
  "Kvetná",
  "Kýčerského",
  "Kyjevská",
  "Kysucká",
  "Laborecká",
  "Lackova",
  "Ladislava Sáru",
  "Ľadová",
  "Lachova",
  "Ľaliová",
  "Lamačská cesta",
  "Lamačská cesta",
  "Lamanského",
  "Landererova",
  "Langsfeldova",
  "Ľanová",
  "Laskomerského",
  "Laučekova",
  "Laurinská",
  "Lazaretská",
  "Lazaretská",
  "Legerského",
  "Legionárska",
  "Legionárska",
  "Lehockého",
  "Lehockého",
  "Lenardova",
  "Lermontovova",
  "Lesná",
  "Leškova",
  "Letecká",
  "Letisko M.R.Štefánik",
  "Letná",
  "Levárska",
  "Levická",
  "Levočská",
  "Lidická",
  "Lietavská",
  "Lichardova",
  "Lipová",
  "Lipovinová",
  "Liptovská",
  "Listová",
  "Líščie nivy",
  "Líščie údolie",
  "Litovská",
  "Lodná",
  "Lombardiniho",
  "Lomonosovova",
  "Lopenícka",
  "Lovinského",
  "Ľubietovská",
  "Ľubinská",
  "Ľubľanská",
  "Ľubochnianska",
  "Ľubovnianska",
  "Lúčna",
  "Ľudové námestie",
  "Ľudovíta Fullu",
  "Luhačovická",
  "Lužická",
  "Lužná",
  "Lýcejná",
  "Lykovcová",
  "M. Hella",
  "Magnetová",
  "Macharova",
  "Majakovského",
  "Majerníkova",
  "Májkova",
  "Májová",
  "Makovického",
  "Malá",
  "Malé pálenisko",
  "Malinová",
  "Malý Draždiak",
  "Malý trh",
  "Mamateyova",
  "Mamateyova",
  "Mánesovo námestie",
  "Mariánska",
  "Marie Curie-Sklodows",
  "Márie Medveďovej",
  "Markova",
  "Marótyho",
  "Martákovej",
  "Martinčekova",
  "Martinčekova",
  "Martinengova",
  "Martinská",
  "Mateja Bela",
  "Matejkova",
  "Matičná",
  "Matúšova",
  "Medená",
  "Medzierka",
  "Medzilaborecká",
  "Merlotová",
  "Mesačná",
  "Mestská",
  "Meteorová",
  "Metodova",
  "Mickiewiczova",
  "Mierová",
  "Michalská",
  "Mikovíniho",
  "Mikulášska",
  "Miletičova",
  "Miletičova",
  "Mišíkova",
  "Mišíkova",
  "Mišíkova",
  "Mliekárenská",
  "Mlynarovičova",
  "Mlynská dolina",
  "Mlynská dolina",
  "Mlynská dolina",
  "Mlynské luhy",
  "Mlynské nivy",
  "Mlynské nivy",
  "Mlynské nivy",
  "Mlynské nivy",
  "Mlynské nivy",
  "Mlyny",
  "Modranská",
  "Mojmírova",
  "Mokráň záhon",
  "Mokrohájska cesta",
  "Moldavská",
  "Molecova",
  "Moravská",
  "Moskovská",
  "Most SNP",
  "Mostová",
  "Mošovského",
  "Motýlia",
  "Moyzesova",
  "Mozartova",
  "Mraziarenská",
  "Mudroňova",
  "Mudroňova",
  "Mudroňova",
  "Muchovo námestie",
  "Murgašova",
  "Muškátová",
  "Muštová",
  "Múzejná",
  "Myjavská",
  "Mýtna",
  "Mýtna",
  "Na Baránku",
  "Na Brezinách",
  "Na Hrebienku",
  "Na Kalvárii",
  "Na Kampárke",
  "Na kopci",
  "Na križovatkách",
  "Na lánoch",
  "Na paši",
  "Na piesku",
  "Na Riviére",
  "Na Sitine",
  "Na Slavíne",
  "Na stráni",
  "Na Štyridsiatku",
  "Na úvrati",
  "Na vŕšku",
  "Na výslní",
  "Nábělkova",
  "Nábrežie arm. gen. L",
  "Nábrežná",
  "Nad Dunajom",
  "Nad lomom",
  "Nad lúčkami",
  "Nad lúčkami",
  "Nad ostrovom",
  "Nad Sihoťou",
  "Námestie 1. mája",
  "Námestie Alexandra D",
  "Námestie Biely kríž",
  "Námestie Hraničiarov",
  "Námestie Jána Pavla",
  "Námestie Ľudovíta Št",
  "Námestie Martina Ben",
  "Nám. M.R.Štefánika",
  "Námestie slobody",
  "Námestie slobody",
  "Námestie SNP",
  "Námestie SNP",
  "Námestie sv. Františ",
  "Narcisová",
  "Nedbalova",
  "Nekrasovova",
  "Neronetová",
  "Nerudova",
  "Nevädzová",
  "Nezábudková",
  "Niťová",
  "Nitrianska",
  "Nížinná",
  "Nobelova",
  "Nobelovo námestie",
  "Nová",
  "Nová Rožňavská",
  "Novackého",
  "Nové pálenisko",
  "Nové záhrady I",
  "Nové záhrady II",
  "Nové záhrady III",
  "Nové záhrady IV",
  "Nové záhrady V",
  "Nové záhrady VI",
  "Nové záhrady VII",
  "Novinárska",
  "Novobanská",
  "Novohradská",
  "Novosvetská",
  "Novosvetská",
  "Novosvetská",
  "Obežná",
  "Obchodná",
  "Očovská",
  "Odbojárov",
  "Odborárska",
  "Odborárske námestie",
  "Odborárske námestie",
  "Ohnicová",
  "Okánikova",
  "Okružná",
  "Olbrachtova",
  "Olejkárska",
  "Ondavská",
  "Ondrejovova",
  "Oravská",
  "Orechová cesta",
  "Orechový rad",
  "Oriešková",
  "Ormisova",
  "Osadná",
  "Ostravská",
  "Ostredková",
  "Osuského",
  "Osvetová",
  "Otonelská",
  "Ovručská",
  "Ovsištské námestie",
  "Pajštúnska",
  "Palackého",
  "Palárikova",
  "Palárikova",
  "Pálavská",
  "Palisády",
  "Palisády",
  "Palisády",
  "Palkovičova",
  "Panenská",
  "Pankúchova",
  "Panónska cesta",
  "Panská",
  "Papánkovo námestie",
  "Papraďová",
  "Páričkova",
  "Parková",
  "Partizánska",
  "Pasienky",
  "Paulínyho",
  "Pavlovičova",
  "Pavlovova",
  "Pavlovská",
  "Pažického",
  "Pažítková",
  "Pečnianska",
  "Pernecká",
  "Pestovateľská",
  "Peterská",
  "Petzvalova",
  "Pezinská",
  "Piesočná",
  "Piešťanská",
  "Pifflova",
  "Pilárikova",
  "Pionierska",
  "Pivoňková",
  "Planckova",
  "Planét",
  "Plátenícka",
  "Pluhová",
  "Plynárenská",
  "Plzenská",
  "Pobrežná",
  "Pod Bôrikom",
  "Pod Kalváriou",
  "Pod lesom",
  "Pod Rovnicami",
  "Pod vinicami",
  "Podhorského",
  "Podjavorinskej",
  "Podlučinského",
  "Podniková",
  "Podtatranského",
  "Pohronská",
  "Polárna",
  "Poloreckého",
  "Poľná",
  "Poľská",
  "Poludníková",
  "Porubského",
  "Poštová",
  "Považská",
  "Povraznícka",
  "Povraznícka",
  "Pražská",
  "Predstaničné námesti",
  "Prepoštská",
  "Prešernova",
  "Prešovská",
  "Prešovská",
  "Prešovská",
  "Pri Bielom kríži",
  "Pri dvore",
  "Pri Dynamitke",
  "Pri Habánskom mlyne",
  "Pri hradnej studni",
  "Pri seči",
  "Pri Starej Prachárni",
  "Pri Starom háji",
  "Pri Starom Mýte",
  "Pri strelnici",
  "Pri Suchom mlyne",
  "Pri zvonici",
  "Pribinova",
  "Pribinova",
  "Pribinova",
  "Pribišova",
  "Pribylinská",
  "Priečna",
  "Priekopy",
  "Priemyselná",
  "Priemyselná",
  "Prievozská",
  "Prievozská",
  "Prievozská",
  "Príkopova",
  "Primaciálne námestie",
  "Prístav",
  "Prístavná",
  "Prokofievova",
  "Prokopa Veľkého",
  "Prokopova",
  "Prúdová",
  "Prvosienková",
  "Púpavová",
  "Pustá",
  "Puškinova",
  "Račianska",
  "Račianska",
  "Račianske mýto",
  "Radarová",
  "Rádiová",
  "Radlinského",
  "Radničná",
  "Radničné námestie",
  "Radvanská",
  "Rajská",
  "Raketová",
  "Rákosová",
  "Rastislavova",
  "Rázusovo nábrežie",
  "Repná",
  "Rešetkova",
  "Revolučná",
  "Révová",
  "Revúcka",
  "Rezedová",
  "Riazanská",
  "Riazanská",
  "Ribayová",
  "Riečna",
  "Rigeleho",
  "Rízlingová",
  "Riznerova",
  "Robotnícka",
  "Romanova",
  "Röntgenova",
  "Rosná",
  "Rovná",
  "Rovniankova",
  "Rovníková",
  "Rozmarínová",
  "Rožňavská",
  "Rožňavská",
  "Rožňavská",
  "Rubinsteinova",
  "Rudnayovo námestie",
  "Rumančeková",
  "Rusovská cesta",
  "Ružičková",
  "Ružinovská",
  "Ružinovská",
  "Ružinovská",
  "Ružomberská",
  "Ružová dolina",
  "Ružová dolina",
  "Rybárska brána",
  "Rybné námestie",
  "Rýdziková",
  "Sabinovská",
  "Sabinovská",
  "Sad Janka Kráľa",
  "Sadová",
  "Sartorisova",
  "Sasinkova",
  "Seberíniho",
  "Sečovská",
  "Sedlárska",
  "Sedmokrásková",
  "Segnerova",
  "Sekulská",
  "Semianova",
  "Senická",
  "Senná",
  "Schillerova",
  "Schody pri starej vo",
  "Sibírska",
  "Sienkiewiczova",
  "Silvánska",
  "Sinokvetná",
  "Skalická cesta",
  "Skalná",
  "Sklenárova",
  "Sklenárska",
  "Sládkovičova",
  "Sladová",
  "Slávičie údolie",
  "Slavín",
  "Slepá",
  "Sliačska",
  "Sliezska",
  "Slivková",
  "Slnečná",
  "Slovanská",
  "Slovinská",
  "Slovnaftská",
  "Slowackého",
  "Smetanova",
  "Smikova",
  "Smolenická",
  "Smolnícka",
  "Smrečianska",
  "Soferove schody",
  "Socháňova",
  "Sokolská",
  "Solivarská",
  "Sološnická",
  "Somolického",
  "Somolického",
  "Sosnová",
  "Spišská",
  "Spojná",
  "Spoločenská",
  "Sputniková",
  "Sreznevského",
  "Srnčia",
  "Stachanovská",
  "Stálicová",
  "Staničná",
  "Stará Černicová",
  "Stará Ivánska cesta",
  "Stará Prievozská",
  "Stará Vajnorská",
  "Stará vinárska",
  "Staré Grunty",
  "Staré ihrisko",
  "Staré záhrady",
  "Starhradská",
  "Starohájska",
  "Staromestská",
  "Staroturský chodník",
  "Staviteľská",
  "Stodolova",
  "Stoklasová",
  "Strakova",
  "Strážnická",
  "Strážny dom",
  "Strečnianska",
  "Stredná",
  "Strelecká",
  "Strmá cesta",
  "Strojnícka",
  "Stropkovská",
  "Struková",
  "Studená",
  "Stuhová",
  "Súbežná",
  "Súhvezdná",
  "Suché mýto",
  "Suchohradská",
  "Súkennícka",
  "Súľovská",
  "Sumbalova",
  "Súmračná",
  "Súťažná",
  "Svätého Vincenta",
  "Svätoplukova",
  "Svätoplukova",
  "Svätovojtešská",
  "Svetlá",
  "Svíbová",
  "Svidnícka",
  "Svoradova",
  "Svrčia",
  "Syslia",
  "Šafárikovo námestie",
  "Šafárikovo námestie",
  "Šafránová",
  "Šagátova",
  "Šalviová",
  "Šancová",
  "Šancová",
  "Šancová",
  "Šancová",
  "Šándorova",
  "Šarišská",
  "Šášovská",
  "Šaštínska",
  "Ševčenkova",
  "Šintavská",
  "Šípková",
  "Škarniclova",
  "Školská",
  "Škovránčia",
  "Škultétyho",
  "Šoltésovej",
  "Špieszova",
  "Špitálska",
  "Športová",
  "Šrobárovo námestie",
  "Šťastná",
  "Štedrá",
  "Štefánikova",
  "Štefánikova",
  "Štefánikova",
  "Štefanovičova",
  "Štefunkova",
  "Štetinova",
  "Štiavnická",
  "Štúrova",
  "Štyndlova",
  "Šulekova",
  "Šulekova",
  "Šulekova",
  "Šumavská",
  "Šuňavcova",
  "Šustekova",
  "Švabinského",
  "Tabaková",
  "Tablicova",
  "Táborská",
  "Tajovského",
  "Tallerova",
  "Tehelná",
  "Technická",
  "Tekovská",
  "Telocvičná",
  "Tematínska",
  "Teplická",
  "Terchovská",
  "Teslova",
  "Tetmayerova",
  "Thurzova",
  "Tichá",
  "Tilgnerova",
  "Timravina",
  "Tobrucká",
  "Tokajícka",
  "Tolstého",
  "Tománkova",
  "Tomášikova",
  "Tomášikova",
  "Tomášikova",
  "Tomášikova",
  "Tomášikova",
  "Topoľčianska",
  "Topoľová",
  "Továrenská",
  "Trebišovská",
  "Trebišovská",
  "Trebišovská",
  "Trenčianska",
  "Treskoňova",
  "Trnavská cesta",
  "Trnavská cesta",
  "Trnavská cesta",
  "Trnavská cesta",
  "Trnavská cesta",
  "Trnavské mýto",
  "Tŕňová",
  "Trojdomy",
  "Tučkova",
  "Tupolevova",
  "Turbínova",
  "Turčianska",
  "Turnianska",
  "Tvarožkova",
  "Tylova",
  "Tyršovo nábrežie",
  "Údernícka",
  "Údolná",
  "Uhorková",
  "Ukrajinská",
  "Ulica 29. augusta",
  "Ulica 29. augusta",
  "Ulica 29. augusta",
  "Ulica 29. augusta",
  "Ulica Imricha Karvaš",
  "Ulica Jozefa Krónera",
  "Ulica Viktora Tegelh",
  "Úprkova",
  "Úradnícka",
  "Uránová",
  "Urbánkova",
  "Ursínyho",
  "Uršulínska",
  "Úzka",
  "V záhradách",
  "Vajanského nábrežie",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Vajnorská",
  "Valašská",
  "Valchárska",
  "Vansovej",
  "Vápenná",
  "Varínska",
  "Varšavská",
  "Varšavská",
  "Vavilovova",
  "Vavrínova",
  "Vazovova",
  "Včelárska",
  "Velehradská",
  "Veltlínska",
  "Ventúrska",
  "Veterná",
  "Veternicová",
  "Vetvová",
  "Viedenská cesta",
  "Viedenská cesta",
  "Vietnamská",
  "Vígľašská",
  "Vihorlatská",
  "Viktorínova",
  "Vilová",
  "Vincenta Hložníka",
  "Vínna",
  "Vlastenecké námestie",
  "Vlčkova",
  "Vlčkova",
  "Vlčkova",
  "Vodný vrch",
  "Votrubova",
  "Vrábeľská",
  "Vrakunská cesta",
  "Vranovská",
  "Vretenová",
  "Vrchná",
  "Vrútocká",
  "Vyhliadka",
  "Vyhnianska cesta",
  "Vysoká",
  "Vyšehradská",
  "Vyšná",
  "Wattova",
  "Wilsonova",
  "Wolkrova",
  "Za Kasárňou",
  "Za sokolovňou",
  "Za Stanicou",
  "Za tehelňou",
  "Záborského",
  "Zadunajská cesta",
  "Záhorácka",
  "Záhradnícka",
  "Záhradnícka",
  "Záhradnícka",
  "Záhradnícka",
  "Záhrebská",
  "Záhrebská",
  "Zálužická",
  "Zámocká",
  "Zámocké schody",
  "Zámočnícka",
  "Západná",
  "Západný rad",
  "Záporožská",
  "Zátišie",
  "Závodníkova",
  "Zelená",
  "Zelinárska",
  "Zimná",
  "Zlaté piesky",
  "Zlaté schody",
  "Znievska",
  "Zohorská",
  "Zochova",
  "Zrinského",
  "Zvolenská",
  "Žabí majer",
  "Žabotova",
  "Žehrianska",
  "Železná",
  "Železničiarska",
  "Žellova",
  "Žiarska",
  "Židovská",
  "Žilinská",
  "Žilinská",
  "Živnostenská",
  "Žižkova",
  "Župné námestie"
];

},{}],759:[function(require,module,exports){
arguments[4][63][0].apply(exports,arguments)
},{"dup":63}],760:[function(require,module,exports){
module["exports"] = [
  "#{street}"
];

},{}],761:[function(require,module,exports){
arguments[4][146][0].apply(exports,arguments)
},{"dup":146}],762:[function(require,module,exports){
arguments[4][161][0].apply(exports,arguments)
},{"dup":161}],763:[function(require,module,exports){
module["exports"] = [
  "clicks-and-mortar",
  "value-added",
  "vertical",
  "proactive",
  "robust",
  "revolutionary",
  "scalable",
  "leading-edge",
  "innovative",
  "intuitive",
  "strategic",
  "e-business",
  "mission-critical",
  "sticky",
  "one-to-one",
  "24/7",
  "end-to-end",
  "global",
  "B2B",
  "B2C",
  "granular",
  "frictionless",
  "virtual",
  "viral",
  "dynamic",
  "24/365",
  "best-of-breed",
  "killer",
  "magnetic",
  "bleeding-edge",
  "web-enabled",
  "interactive",
  "dot-com",
  "sexy",
  "back-end",
  "real-time",
  "efficient",
  "front-end",
  "distributed",
  "seamless",
  "extensible",
  "turn-key",
  "world-class",
  "open-source",
  "cross-platform",
  "cross-media",
  "synergistic",
  "bricks-and-clicks",
  "out-of-the-box",
  "enterprise",
  "integrated",
  "impactful",
  "wireless",
  "transparent",
  "next-generation",
  "cutting-edge",
  "user-centric",
  "visionary",
  "customized",
  "ubiquitous",
  "plug-and-play",
  "collaborative",
  "compelling",
  "holistic",
  "rich",
  "synergies",
  "web-readiness",
  "paradigms",
  "markets",
  "partnerships",
  "infrastructures",
  "platforms",
  "initiatives",
  "channels",
  "eyeballs",
  "communities",
  "ROI",
  "solutions",
  "e-tailers",
  "e-services",
  "action-items",
  "portals",
  "niches",
  "technologies",
  "content",
  "vortals",
  "supply-chains",
  "convergence",
  "relationships",
  "architectures",
  "interfaces",
  "e-markets",
  "e-commerce",
  "systems",
  "bandwidth",
  "infomediaries",
  "models",
  "mindshare",
  "deliverables",
  "users",
  "schemas",
  "networks",
  "applications",
  "metrics",
  "e-business",
  "functionalities",
  "experiences",
  "web services",
  "methodologies"
];

},{}],764:[function(require,module,exports){
arguments[4][164][0].apply(exports,arguments)
},{"dup":164}],765:[function(require,module,exports){
arguments[4][165][0].apply(exports,arguments)
},{"dup":165}],766:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.suffix = require("./suffix");
company.adjective = require("./adjective");
company.descriptor = require("./descriptor");
company.noun = require("./noun");
company.bs_verb = require("./bs_verb");
company.bs_noun = require("./bs_noun");
company.name = require("./name");

},{"./adjective":762,"./bs_noun":763,"./bs_verb":764,"./descriptor":765,"./name":767,"./noun":768,"./suffix":769}],767:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name} #{suffix}",
  "#{Name.man_last_name} a #{Name.man_last_name} #{suffix}"
];

},{}],768:[function(require,module,exports){
arguments[4][168][0].apply(exports,arguments)
},{"dup":168}],769:[function(require,module,exports){
module["exports"] = [
  "s.r.o.",
  "a.s.",
  "v.o.s."
];

},{}],770:[function(require,module,exports){
var sk = {};
module['exports'] = sk;
sk.title = "Slovakian";
sk.address = require("./address");
sk.company = require("./company");
sk.internet = require("./internet");
sk.lorem = require("./lorem");
sk.name = require("./name");
sk.phone_number = require("./phone_number");

},{"./address":753,"./company":766,"./internet":773,"./lorem":774,"./name":777,"./phone_number":787}],771:[function(require,module,exports){
module["exports"] = [
  "sk",
  "com",
  "net",
  "eu",
  "org"
];

},{}],772:[function(require,module,exports){
module["exports"] = [
  "gmail.com",
  "zoznam.sk",
  "azet.sk"
];

},{}],773:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"./domain_suffix":771,"./free_email":772,"dup":75}],774:[function(require,module,exports){
arguments[4][199][0].apply(exports,arguments)
},{"./supplemental":775,"./words":776,"dup":199}],775:[function(require,module,exports){
arguments[4][200][0].apply(exports,arguments)
},{"dup":200}],776:[function(require,module,exports){
arguments[4][77][0].apply(exports,arguments)
},{"dup":77}],777:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.man_first_name = require("./man_first_name");
name.woman_first_name = require("./woman_first_name");
name.man_last_name = require("./man_last_name");
name.woman_last_name = require("./woman_last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.title = require("./title");
name.name = require("./name");

},{"./man_first_name":778,"./man_last_name":779,"./name":780,"./prefix":781,"./suffix":782,"./title":783,"./woman_first_name":784,"./woman_last_name":785}],778:[function(require,module,exports){
module["exports"] = [
  "Drahoslav",
  "Severín",
  "Alexej",
  "Ernest",
  "Rastislav",
  "Radovan",
  "Dobroslav",
  "Dalibor",
  "Vincent",
  "Miloš",
  "Timotej",
  "Gejza",
  "Bohuš",
  "Alfonz",
  "Gašpar",
  "Emil",
  "Erik",
  "Blažej",
  "Zdenko",
  "Dezider",
  "Arpád",
  "Valentín",
  "Pravoslav",
  "Jaromír",
  "Roman",
  "Matej",
  "Frederik",
  "Viktor",
  "Alexander",
  "Radomír",
  "Albín",
  "Bohumil",
  "Kazimír",
  "Fridrich",
  "Radoslav",
  "Tomáš",
  "Alan",
  "Branislav",
  "Bruno",
  "Gregor",
  "Vlastimil",
  "Boleslav",
  "Eduard",
  "Jozef",
  "Víťazoslav",
  "Blahoslav",
  "Beňadik",
  "Adrián",
  "Gabriel",
  "Marián",
  "Emanuel",
  "Miroslav",
  "Benjamín",
  "Hugo",
  "Richard",
  "Izidor",
  "Zoltán",
  "Albert",
  "Igor",
  "Július",
  "Aleš",
  "Fedor",
  "Rudolf",
  "Valér",
  "Marcel",
  "Ervín",
  "Slavomír",
  "Vojtech",
  "Juraj",
  "Marek",
  "Jaroslav",
  "Žigmund",
  "Florián",
  "Roland",
  "Pankrác",
  "Servác",
  "Bonifác",
  "Svetozár",
  "Bernard",
  "Júlia",
  "Urban",
  "Dušan",
  "Viliam",
  "Ferdinand",
  "Norbert",
  "Róbert",
  "Medard",
  "Zlatko",
  "Anton",
  "Vasil",
  "Vít",
  "Adolf",
  "Vratislav",
  "Alfréd",
  "Alojz",
  "Ján",
  "Tadeáš",
  "Ladislav",
  "Peter",
  "Pavol",
  "Miloslav",
  "Prokop",
  "Cyril",
  "Metod",
  "Patrik",
  "Oliver",
  "Ivan",
  "Kamil",
  "Henrich",
  "Drahomír",
  "Bohuslav",
  "Iľja",
  "Daniel",
  "Vladimír",
  "Jakub",
  "Krištof",
  "Ignác",
  "Gustáv",
  "Jerguš",
  "Dominik",
  "Oskar",
  "Vavrinec",
  "Ľubomír",
  "Mojmír",
  "Leonard",
  "Tichomír",
  "Filip",
  "Bartolomej",
  "Ľudovít",
  "Samuel",
  "Augustín",
  "Belo",
  "Oleg",
  "Bystrík",
  "Ctibor",
  "Ľudomil",
  "Konštantín",
  "Ľuboslav",
  "Matúš",
  "Móric",
  "Ľuboš",
  "Ľubor",
  "Vladislav",
  "Cyprián",
  "Václav",
  "Michal",
  "Jarolím",
  "Arnold",
  "Levoslav",
  "František",
  "Dionýz",
  "Maximilián",
  "Koloman",
  "Boris",
  "Lukáš",
  "Kristián",
  "Vendelín",
  "Sergej",
  "Aurel",
  "Demeter",
  "Denis",
  "Hubert",
  "Karol",
  "Imrich",
  "René",
  "Bohumír",
  "Teodor",
  "Tibor",
  "Maroš",
  "Martin",
  "Svätopluk",
  "Stanislav",
  "Leopold",
  "Eugen",
  "Félix",
  "Klement",
  "Kornel",
  "Milan",
  "Vratko",
  "Ondrej",
  "Andrej",
  "Edmund",
  "Oldrich",
  "Oto",
  "Mikuláš",
  "Ambróz",
  "Radúz",
  "Bohdan",
  "Adam",
  "Štefan",
  "Dávid",
  "Silvester"
];

},{}],779:[function(require,module,exports){
module["exports"] = [
  "Antal",
  "Babka",
  "Bahna",
  "Bahno",
  "Baláž",
  "Baran",
  "Baranka",
  "Bartovič",
  "Bartoš",
  "Bača",
  "Bernolák",
  "Beňo",
  "Bicek",
  "Bielik",
  "Blaho",
  "Bondra",
  "Bosák",
  "Boška",
  "Brezina",
  "Bukovský",
  "Chalupka",
  "Chudík",
  "Cibula",
  "Cibulka",
  "Cibuľa",
  "Cyprich",
  "Cíger",
  "Danko",
  "Daňko",
  "Daňo",
  "Debnár",
  "Dej",
  "Dekýš",
  "Doležal",
  "Dočolomanský",
  "Droppa",
  "Dubovský",
  "Dudek",
  "Dula",
  "Dulla",
  "Dusík",
  "Dvonč",
  "Dzurjanin",
  "Dávid",
  "Fabian",
  "Fabián",
  "Fajnor",
  "Farkašovský",
  "Fico",
  "Filc",
  "Filip",
  "Finka",
  "Ftorek",
  "Gašpar",
  "Gašparovič",
  "Gocník",
  "Gregor",
  "Greguš",
  "Grznár",
  "Hablák",
  "Habšuda",
  "Halda",
  "Haluška",
  "Halák",
  "Hanko",
  "Hanzal",
  "Haščák",
  "Heretik",
  "Hečko",
  "Hlaváček",
  "Hlinka",
  "Holub",
  "Holuby",
  "Hossa",
  "Hoza",
  "Hraško",
  "Hric",
  "Hrmo",
  "Hrušovský",
  "Huba",
  "Ihnačák",
  "Janeček",
  "Janoška",
  "Jantošovič",
  "Janík",
  "Janček",
  "Jedľovský",
  "Jendek",
  "Jonata",
  "Jurina",
  "Jurkovič",
  "Jurík",
  "Jánošík",
  "Kafenda",
  "Kaliský",
  "Karul",
  "Keníž",
  "Klapka",
  "Kmeť",
  "Kolesár",
  "Kollár",
  "Kolnik",
  "Kolník",
  "Kolár",
  "Korec",
  "Kostka",
  "Kostrec",
  "Kováč",
  "Kováčik",
  "Koza",
  "Kočiš",
  "Krajíček",
  "Krajči",
  "Krajčo",
  "Krajčovič",
  "Krajčír",
  "Králik",
  "Krúpa",
  "Kubík",
  "Kyseľ",
  "Kállay",
  "Labuda",
  "Lepšík",
  "Lipták",
  "Lisický",
  "Lubina",
  "Lukáč",
  "Lupták",
  "Líška",
  "Madej",
  "Majeský",
  "Malachovský",
  "Malíšek",
  "Mamojka",
  "Marcinko",
  "Marián",
  "Masaryk",
  "Maslo",
  "Matiaško",
  "Medveď",
  "Melcer",
  "Mečiar",
  "Michalík",
  "Mihalik",
  "Mihál",
  "Mihálik",
  "Mikloško",
  "Mikulík",
  "Mikuš",
  "Mikúš",
  "Milota",
  "Mináč",
  "Mišík",
  "Mojžiš",
  "Mokroš",
  "Mora",
  "Moravčík",
  "Mydlo",
  "Nemec",
  "Nitra",
  "Novák",
  "Obšut",
  "Ondruš",
  "Otčenáš",
  "Pauko",
  "Pavlikovský",
  "Pavúk",
  "Pašek",
  "Paška",
  "Paško",
  "Pelikán",
  "Petrovický",
  "Petruška",
  "Peško",
  "Plch",
  "Plekanec",
  "Podhradský",
  "Podkonický",
  "Poliak",
  "Pupák",
  "Rak",
  "Repiský",
  "Romančík",
  "Rus",
  "Ružička",
  "Rybníček",
  "Rybár",
  "Rybárik",
  "Samson",
  "Sedliak",
  "Senko",
  "Sklenka",
  "Skokan",
  "Skutecký",
  "Slašťan",
  "Sloboda",
  "Slobodník",
  "Slota",
  "Slovák",
  "Smrek",
  "Stodola",
  "Straka",
  "Strnisko",
  "Svrbík",
  "Sámel",
  "Sýkora",
  "Tatar",
  "Tatarka",
  "Tatár",
  "Tatárka",
  "Thomka",
  "Tomeček",
  "Tomka",
  "Tomko",
  "Truben",
  "Turčok",
  "Uram",
  "Urblík",
  "Vajcík",
  "Vajda",
  "Valach",
  "Valachovič",
  "Valent",
  "Valuška",
  "Vanek",
  "Vesel",
  "Vicen",
  "Višňovský",
  "Vlach",
  "Vojtek",
  "Vydarený",
  "Zajac",
  "Zima",
  "Zimka",
  "Záborský",
  "Zúbrik",
  "Čapkovič",
  "Čaplovič",
  "Čarnogurský",
  "Čierny",
  "Čobrda",
  "Ďaďo",
  "Ďurica",
  "Ďuriš",
  "Šidlo",
  "Šimonovič",
  "Škriniar",
  "Škultéty",
  "Šmajda",
  "Šoltés",
  "Šoltýs",
  "Štefan",
  "Štefanka",
  "Šulc",
  "Šurka",
  "Švehla",
  "Šťastný"
];

},{}],780:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{man_first_name} #{man_last_name}",
  "#{prefix} #{woman_first_name} #{woman_last_name}",
  "#{man_first_name} #{man_last_name} #{suffix}",
  "#{woman_first_name} #{woman_last_name} #{suffix}",
  "#{man_first_name} #{man_last_name}",
  "#{man_first_name} #{man_last_name}",
  "#{man_first_name} #{man_last_name}",
  "#{woman_first_name} #{woman_last_name}",
  "#{woman_first_name} #{woman_last_name}",
  "#{woman_first_name} #{woman_last_name}"
];

},{}],781:[function(require,module,exports){
module["exports"] = [
  "Ing.",
  "Mgr.",
  "JUDr.",
  "MUDr."
];

},{}],782:[function(require,module,exports){
module["exports"] = [
  "Phd."
];

},{}],783:[function(require,module,exports){
arguments[4][208][0].apply(exports,arguments)
},{"dup":208}],784:[function(require,module,exports){
module["exports"] = [
  "Alexandra",
  "Karina",
  "Daniela",
  "Andrea",
  "Antónia",
  "Bohuslava",
  "Dáša",
  "Malvína",
  "Kristína",
  "Nataša",
  "Bohdana",
  "Drahomíra",
  "Sára",
  "Zora",
  "Tamara",
  "Ema",
  "Tatiana",
  "Erika",
  "Veronika",
  "Agáta",
  "Dorota",
  "Vanda",
  "Zoja",
  "Gabriela",
  "Perla",
  "Ida",
  "Liana",
  "Miloslava",
  "Vlasta",
  "Lívia",
  "Eleonóra",
  "Etela",
  "Romana",
  "Zlatica",
  "Anežka",
  "Bohumila",
  "Františka",
  "Angela",
  "Matilda",
  "Svetlana",
  "Ľubica",
  "Alena",
  "Soňa",
  "Vieroslava",
  "Zita",
  "Miroslava",
  "Irena",
  "Milena",
  "Estera",
  "Justína",
  "Dana",
  "Danica",
  "Jela",
  "Jaroslava",
  "Jarmila",
  "Lea",
  "Anastázia",
  "Galina",
  "Lesana",
  "Hermína",
  "Monika",
  "Ingrida",
  "Viktória",
  "Blažena",
  "Žofia",
  "Sofia",
  "Gizela",
  "Viola",
  "Gertrúda",
  "Zina",
  "Júlia",
  "Juliana",
  "Želmíra",
  "Ela",
  "Vanesa",
  "Iveta",
  "Vilma",
  "Petronela",
  "Žaneta",
  "Xénia",
  "Karolína",
  "Lenka",
  "Laura",
  "Stanislava",
  "Margaréta",
  "Dobroslava",
  "Blanka",
  "Valéria",
  "Paulína",
  "Sidónia",
  "Adriána",
  "Beáta",
  "Petra",
  "Melánia",
  "Diana",
  "Berta",
  "Patrícia",
  "Lujza",
  "Amália",
  "Milota",
  "Nina",
  "Margita",
  "Kamila",
  "Dušana",
  "Magdaléna",
  "Oľga",
  "Anna",
  "Hana",
  "Božena",
  "Marta",
  "Libuša",
  "Božidara",
  "Dominika",
  "Hortenzia",
  "Jozefína",
  "Štefánia",
  "Ľubomíra",
  "Zuzana",
  "Darina",
  "Marcela",
  "Milica",
  "Elena",
  "Helena",
  "Lýdia",
  "Anabela",
  "Jana",
  "Silvia",
  "Nikola",
  "Ružena",
  "Nora",
  "Drahoslava",
  "Linda",
  "Melinda",
  "Rebeka",
  "Rozália",
  "Regína",
  "Alica",
  "Marianna",
  "Miriama",
  "Martina",
  "Mária",
  "Jolana",
  "Ľudomila",
  "Ľudmila",
  "Olympia",
  "Eugénia",
  "Ľuboslava",
  "Zdenka",
  "Edita",
  "Michaela",
  "Stela",
  "Viera",
  "Natália",
  "Eliška",
  "Brigita",
  "Valentína",
  "Terézia",
  "Vladimíra",
  "Hedviga",
  "Uršuľa",
  "Alojza",
  "Kvetoslava",
  "Sabína",
  "Dobromila",
  "Klára",
  "Simona",
  "Aurélia",
  "Denisa",
  "Renáta",
  "Irma",
  "Agnesa",
  "Klaudia",
  "Alžbeta",
  "Elvíra",
  "Cecília",
  "Emília",
  "Katarína",
  "Henrieta",
  "Bibiána",
  "Barbora",
  "Marína",
  "Izabela",
  "Hilda",
  "Otília",
  "Lucia",
  "Branislava",
  "Bronislava",
  "Ivica",
  "Albína",
  "Kornélia",
  "Sláva",
  "Slávka",
  "Judita",
  "Dagmara",
  "Adela",
  "Nadežda",
  "Eva",
  "Filoména",
  "Ivana",
  "Milada"
];

},{}],785:[function(require,module,exports){
module["exports"] = [
  "Antalová",
  "Babková",
  "Bahnová",
  "Balážová",
  "Baranová",
  "Baranková",
  "Bartovičová",
  "Bartošová",
  "Bačová",
  "Bernoláková",
  "Beňová",
  "Biceková",
  "Bieliková",
  "Blahová",
  "Bondrová",
  "Bosáková",
  "Bošková",
  "Brezinová",
  "Bukovská",
  "Chalupková",
  "Chudíková",
  "Cibulová",
  "Cibulková",
  "Cyprichová",
  "Cígerová",
  "Danková",
  "Daňková",
  "Daňová",
  "Debnárová",
  "Dejová",
  "Dekýšová",
  "Doležalová",
  "Dočolomanská",
  "Droppová",
  "Dubovská",
  "Dudeková",
  "Dulová",
  "Dullová",
  "Dusíková",
  "Dvončová",
  "Dzurjaninová",
  "Dávidová",
  "Fabianová",
  "Fabiánová",
  "Fajnorová",
  "Farkašovská",
  "Ficová",
  "Filcová",
  "Filipová",
  "Finková",
  "Ftoreková",
  "Gašparová",
  "Gašparovičová",
  "Gocníková",
  "Gregorová",
  "Gregušová",
  "Grznárová",
  "Habláková",
  "Habšudová",
  "Haldová",
  "Halušková",
  "Haláková",
  "Hanková",
  "Hanzalová",
  "Haščáková",
  "Heretiková",
  "Hečková",
  "Hlaváčeková",
  "Hlinková",
  "Holubová",
  "Holubyová",
  "Hossová",
  "Hozová",
  "Hrašková",
  "Hricová",
  "Hrmová",
  "Hrušovská",
  "Hubová",
  "Ihnačáková",
  "Janečeková",
  "Janošková",
  "Jantošovičová",
  "Janíková",
  "Jančeková",
  "Jedľovská",
  "Jendeková",
  "Jonatová",
  "Jurinová",
  "Jurkovičová",
  "Juríková",
  "Jánošíková",
  "Kafendová",
  "Kaliská",
  "Karulová",
  "Kenížová",
  "Klapková",
  "Kmeťová",
  "Kolesárová",
  "Kollárová",
  "Kolniková",
  "Kolníková",
  "Kolárová",
  "Korecová",
  "Kostkaová",
  "Kostrecová",
  "Kováčová",
  "Kováčiková",
  "Kozová",
  "Kočišová",
  "Krajíčeková",
  "Krajčová",
  "Krajčovičová",
  "Krajčírová",
  "Králiková",
  "Krúpová",
  "Kubíková",
  "Kyseľová",
  "Kállayová",
  "Labudová",
  "Lepšíková",
  "Liptáková",
  "Lisická",
  "Lubinová",
  "Lukáčová",
  "Luptáková",
  "Líšková",
  "Madejová",
  "Majeská",
  "Malachovská",
  "Malíšeková",
  "Mamojková",
  "Marcinková",
  "Mariánová",
  "Masaryková",
  "Maslová",
  "Matiašková",
  "Medveďová",
  "Melcerová",
  "Mečiarová",
  "Michalíková",
  "Mihaliková",
  "Mihálová",
  "Miháliková",
  "Miklošková",
  "Mikulíková",
  "Mikušová",
  "Mikúšová",
  "Milotová",
  "Mináčová",
  "Mišíková",
  "Mojžišová",
  "Mokrošová",
  "Morová",
  "Moravčíková",
  "Mydlová",
  "Nemcová",
  "Nováková",
  "Obšutová",
  "Ondrušová",
  "Otčenášová",
  "Pauková",
  "Pavlikovská",
  "Pavúková",
  "Pašeková",
  "Pašková",
  "Pelikánová",
  "Petrovická",
  "Petrušková",
  "Pešková",
  "Plchová",
  "Plekanecová",
  "Podhradská",
  "Podkonická",
  "Poliaková",
  "Pupáková",
  "Raková",
  "Repiská",
  "Romančíková",
  "Rusová",
  "Ružičková",
  "Rybníčeková",
  "Rybárová",
  "Rybáriková",
  "Samsonová",
  "Sedliaková",
  "Senková",
  "Sklenková",
  "Skokanová",
  "Skutecká",
  "Slašťanová",
  "Slobodová",
  "Slobodníková",
  "Slotová",
  "Slováková",
  "Smreková",
  "Stodolová",
  "Straková",
  "Strnisková",
  "Svrbíková",
  "Sámelová",
  "Sýkorová",
  "Tatarová",
  "Tatarková",
  "Tatárová",
  "Tatárkaová",
  "Thomková",
  "Tomečeková",
  "Tomková",
  "Trubenová",
  "Turčoková",
  "Uramová",
  "Urblíková",
  "Vajcíková",
  "Vajdová",
  "Valachová",
  "Valachovičová",
  "Valentová",
  "Valušková",
  "Vaneková",
  "Veselová",
  "Vicenová",
  "Višňovská",
  "Vlachová",
  "Vojteková",
  "Vydarená",
  "Zajacová",
  "Zimová",
  "Zimková",
  "Záborská",
  "Zúbriková",
  "Čapkovičová",
  "Čaplovičová",
  "Čarnogurská",
  "Čierná",
  "Čobrdová",
  "Ďaďová",
  "Ďuricová",
  "Ďurišová",
  "Šidlová",
  "Šimonovičová",
  "Škriniarová",
  "Škultétyová",
  "Šmajdová",
  "Šoltésová",
  "Šoltýsová",
  "Štefanová",
  "Štefanková",
  "Šulcová",
  "Šurková",
  "Švehlová",
  "Šťastná"
];

},{}],786:[function(require,module,exports){
module["exports"] = [
  "09## ### ###",
  "0## #### ####",
  "0# #### ####",
  "+421 ### ### ###"
];

},{}],787:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":786,"dup":85}],788:[function(require,module,exports){
arguments[4][452][0].apply(exports,arguments)
},{"dup":452}],789:[function(require,module,exports){
module["exports"] = [
  "#{city_prefix}#{city_suffix}"
];

},{}],790:[function(require,module,exports){
module["exports"] = [
  "Söder",
  "Norr",
  "Väst",
  "Öster",
  "Aling",
  "Ar",
  "Av",
  "Bo",
  "Br",
  "Bå",
  "Ek",
  "En",
  "Esk",
  "Fal",
  "Gäv",
  "Göte",
  "Ha",
  "Helsing",
  "Karl",
  "Krist",
  "Kram",
  "Kung",
  "Kö",
  "Lyck",
  "Ny"
];

},{}],791:[function(require,module,exports){
module["exports"] = [
  "stad",
  "land",
  "sås",
  "ås",
  "holm",
  "tuna",
  "sta",
  "berg",
  "löv",
  "borg",
  "mora",
  "hamn",
  "fors",
  "köping",
  "by",
  "hult",
  "torp",
  "fred",
  "vik"
];

},{}],792:[function(require,module,exports){
module["exports"] = [
  "s Väg",
  "s Gata"
];

},{}],793:[function(require,module,exports){
module["exports"] = [
  "Ryssland",
  "Kanada",
  "Kina",
  "USA",
  "Brasilien",
  "Australien",
  "Indien",
  "Argentina",
  "Kazakstan",
  "Algeriet",
  "DR Kongo",
  "Danmark",
  "Färöarna",
  "Grönland",
  "Saudiarabien",
  "Mexiko",
  "Indonesien",
  "Sudan",
  "Libyen",
  "Iran",
  "Mongoliet",
  "Peru",
  "Tchad",
  "Niger",
  "Angola",
  "Mali",
  "Sydafrika",
  "Colombia",
  "Etiopien",
  "Bolivia",
  "Mauretanien",
  "Egypten",
  "Tanzania",
  "Nigeria",
  "Venezuela",
  "Namibia",
  "Pakistan",
  "Moçambique",
  "Turkiet",
  "Chile",
  "Zambia",
  "Marocko",
  "Västsahara",
  "Burma",
  "Afghanistan",
  "Somalia",
  "Centralafrikanska republiken",
  "Sydsudan",
  "Ukraina",
  "Botswana",
  "Madagaskar",
  "Kenya",
  "Frankrike",
  "Franska Guyana",
  "Jemen",
  "Thailand",
  "Spanien",
  "Turkmenistan",
  "Kamerun",
  "Papua Nya Guinea",
  "Sverige",
  "Uzbekistan",
  "Irak",
  "Paraguay",
  "Zimbabwe",
  "Japan",
  "Tyskland",
  "Kongo",
  "Finland",
  "Malaysia",
  "Vietnam",
  "Norge",
  "Svalbard",
  "Jan Mayen",
  "Elfenbenskusten",
  "Polen",
  "Italien",
  "Filippinerna",
  "Ecuador",
  "Burkina Faso",
  "Nya Zeeland",
  "Gabon",
  "Guinea",
  "Storbritannien",
  "Ghana",
  "Rumänien",
  "Laos",
  "Uganda",
  "Guyana",
  "Oman",
  "Vitryssland",
  "Kirgizistan",
  "Senegal",
  "Syrien",
  "Kambodja",
  "Uruguay",
  "Tunisien",
  "Surinam",
  "Nepal",
  "Bangladesh",
  "Tadzjikistan",
  "Grekland",
  "Nicaragua",
  "Eritrea",
  "Nordkorea",
  "Malawi",
  "Benin",
  "Honduras",
  "Liberia",
  "Bulgarien",
  "Kuba",
  "Guatemala",
  "Island",
  "Sydkorea",
  "Ungern",
  "Portugal",
  "Jordanien",
  "Serbien",
  "Azerbajdzjan",
  "Österrike",
  "Förenade Arabemiraten",
  "Tjeckien",
  "Panama",
  "Sierra Leone",
  "Irland",
  "Georgien",
  "Sri Lanka",
  "Litauen",
  "Lettland",
  "Togo",
  "Kroatien",
  "Bosnien och Hercegovina",
  "Costa Rica",
  "Slovakien",
  "Dominikanska republiken",
  "Bhutan",
  "Estland",
  "Danmark",
  "Färöarna",
  "Grönland",
  "Nederländerna",
  "Schweiz",
  "Guinea-Bissau",
  "Taiwan",
  "Moldavien",
  "Belgien",
  "Lesotho",
  "Armenien",
  "Albanien",
  "Salomonöarna",
  "Ekvatorialguinea",
  "Burundi",
  "Haiti",
  "Rwanda",
  "Makedonien",
  "Djibouti",
  "Belize",
  "Israel",
  "El Salvador",
  "Slovenien",
  "Fiji",
  "Kuwait",
  "Swaziland",
  "Timor-Leste",
  "Montenegro",
  "Bahamas",
  "Vanuatu",
  "Qatar",
  "Gambia",
  "Jamaica",
  "Kosovo",
  "Libanon",
  "Cypern",
  "Brunei",
  "Trinidad och Tobago",
  "Kap Verde",
  "Samoa",
  "Luxemburg",
  "Komorerna",
  "Mauritius",
  "São Tomé och Príncipe",
  "Kiribati",
  "Dominica",
  "Tonga",
  "Mikronesiens federerade stater",
  "Singapore",
  "Bahrain",
  "Saint Lucia",
  "Andorra",
  "Palau",
  "Seychellerna",
  "Antigua och Barbuda",
  "Barbados",
  "Saint Vincent och Grenadinerna",
  "Grenada",
  "Malta",
  "Maldiverna",
  "Saint Kitts och Nevis",
  "Marshallöarna",
  "Liechtenstein",
  "San Marino",
  "Tuvalu",
  "Nauru",
  "Monaco",
  "Vatikanstaten"
];

},{}],794:[function(require,module,exports){
module["exports"] = [
  "Sverige"
];

},{}],795:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.country = require("./country");
address.common_street_suffix = require("./common_street_suffix");
address.street_prefix = require("./street_prefix");
address.street_root = require("./street_root");
address.street_suffix = require("./street_suffix");
address.state = require("./state");
address.city = require("./city");
address.street_name = require("./street_name");
address.postcode = require("./postcode");
address.building_number = require("./building_number");
address.secondary_address = require("./secondary_address");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":788,"./city":789,"./city_prefix":790,"./city_suffix":791,"./common_street_suffix":792,"./country":793,"./default_country":794,"./postcode":796,"./secondary_address":797,"./state":798,"./street_address":799,"./street_name":800,"./street_prefix":801,"./street_root":802,"./street_suffix":803}],796:[function(require,module,exports){
arguments[4][320][0].apply(exports,arguments)
},{"dup":320}],797:[function(require,module,exports){
module["exports"] = [
  "Lgh. ###",
  "Hus ###"
];

},{}],798:[function(require,module,exports){
module["exports"] = [
  "Blekinge",
  "Dalarna",
  "Gotland",
  "Gävleborg",
  "Göteborg",
  "Halland",
  "Jämtland",
  "Jönköping",
  "Kalmar",
  "Kronoberg",
  "Norrbotten",
  "Skaraborg",
  "Skåne",
  "Stockholm",
  "Södermanland",
  "Uppsala",
  "Värmland",
  "Västerbotten",
  "Västernorrland",
  "Västmanland",
  "Älvsborg",
  "Örebro",
  "Östergötland"
];

},{}],799:[function(require,module,exports){
arguments[4][63][0].apply(exports,arguments)
},{"dup":63}],800:[function(require,module,exports){
arguments[4][573][0].apply(exports,arguments)
},{"dup":573}],801:[function(require,module,exports){
module["exports"] = [
  "Västra",
  "Östra",
  "Norra",
  "Södra",
  "Övre",
  "Undre"
];

},{}],802:[function(require,module,exports){
module["exports"] = [
  "Björk",
  "Järnvägs",
  "Ring",
  "Skol",
  "Skogs",
  "Ny",
  "Gran",
  "Idrotts",
  "Stor",
  "Kyrk",
  "Industri",
  "Park",
  "Strand",
  "Skol",
  "Trädgård",
  "Ängs",
  "Kyrko",
  "Villa",
  "Ek",
  "Kvarn",
  "Stations",
  "Back",
  "Furu",
  "Gen",
  "Fabriks",
  "Åker",
  "Bäck",
  "Asp"
];

},{}],803:[function(require,module,exports){
module["exports"] = [
  "vägen",
  "gatan",
  "gränden",
  "gärdet",
  "allén"
];

},{}],804:[function(require,module,exports){
module["exports"] = [
  56,
  62,
  59
];

},{}],805:[function(require,module,exports){
module["exports"] = [
  "#{common_cell_prefix}-###-####"
];

},{}],806:[function(require,module,exports){
var cell_phone = {};
module['exports'] = cell_phone;
cell_phone.common_cell_prefix = require("./common_cell_prefix");
cell_phone.formats = require("./formats");

},{"./common_cell_prefix":804,"./formats":805}],807:[function(require,module,exports){
module["exports"] = [
  "vit",
  "silver",
  "grå",
  "svart",
  "röd",
  "grön",
  "blå",
  "gul",
  "lila",
  "indigo",
  "guld",
  "brun",
  "rosa",
  "purpur",
  "korall"
];

},{}],808:[function(require,module,exports){
module["exports"] = [
  "Böcker",
  "Filmer",
  "Musik",
  "Spel",
  "Elektronik",
  "Datorer",
  "Hem",
  "Trädgård",
  "Verktyg",
  "Livsmedel",
  "Hälsa",
  "Skönhet",
  "Leksaker",
  "Klädsel",
  "Skor",
  "Smycken",
  "Sport"
];

},{}],809:[function(require,module,exports){
arguments[4][159][0].apply(exports,arguments)
},{"./color":807,"./department":808,"./product_name":810,"dup":159}],810:[function(require,module,exports){
module["exports"] = {
  "adjective": [
    "Liten",
    "Ergonomisk",
    "Robust",
    "Intelligent",
    "Söt",
    "Otrolig",
    "Fatastisk",
    "Praktisk",
    "Slimmad",
    "Grym"
  ],
  "material": [
    "Stål",
    "Metall",
    "Trä",
    "Betong",
    "Plast",
    "Bomul",
    "Grnit",
    "Gummi",
    "Latex"
  ],
  "product": [
    "Stol",
    "Bil",
    "Dator",
    "Handskar",
    "Pants",
    "Shirt",
    "Table",
    "Shoes",
    "Hat"
  ]
};

},{}],811:[function(require,module,exports){
arguments[4][121][0].apply(exports,arguments)
},{"./name":812,"./suffix":813,"dup":121}],812:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name} #{suffix}",
  "#{Name.last_name}-#{Name.last_name}",
  "#{Name.last_name}, #{Name.last_name} #{suffix}"
];

},{}],813:[function(require,module,exports){
module["exports"] = [
  "Gruppen",
  "AB",
  "HB",
  "Group",
  "Investment",
  "Kommanditbolag",
  "Aktiebolag"
];

},{}],814:[function(require,module,exports){
var sv = {};
module['exports'] = sv;
sv.title = "Swedish";
sv.address = require("./address");
sv.company = require("./company");
sv.internet = require("./internet");
sv.name = require("./name");
sv.phone_number = require("./phone_number");
sv.cell_phone = require("./cell_phone");
sv.commerce = require("./commerce");
sv.team = require("./team");

},{"./address":795,"./cell_phone":806,"./commerce":809,"./company":811,"./internet":816,"./name":819,"./phone_number":825,"./team":826}],815:[function(require,module,exports){
module["exports"] = [
  "se",
  "nu",
  "info",
  "com",
  "org"
];

},{}],816:[function(require,module,exports){
arguments[4][126][0].apply(exports,arguments)
},{"./domain_suffix":815,"dup":126}],817:[function(require,module,exports){
module["exports"] = [
  "Erik",
  "Lars",
  "Karl",
  "Anders",
  "Per",
  "Johan",
  "Nils",
  "Lennart",
  "Emil",
  "Hans"
];

},{}],818:[function(require,module,exports){
module["exports"] = [
  "Maria",
  "Anna",
  "Margareta",
  "Elisabeth",
  "Eva",
  "Birgitta",
  "Kristina",
  "Karin",
  "Elisabet",
  "Marie"
];

},{}],819:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name_women = require("./first_name_women");
name.first_name_men = require("./first_name_men");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.title = require("./title");
name.name = require("./name");

},{"./first_name_men":817,"./first_name_women":818,"./last_name":820,"./name":821,"./prefix":822,"./title":823}],820:[function(require,module,exports){
module["exports"] = [
  "Johansson",
  "Andersson",
  "Karlsson",
  "Nilsson",
  "Eriksson",
  "Larsson",
  "Olsson",
  "Persson",
  "Svensson",
  "Gustafsson"
];

},{}],821:[function(require,module,exports){
module["exports"] = [
  "#{first_name_women} #{last_name}",
  "#{first_name_men} #{last_name}",
  "#{first_name_women} #{last_name}",
  "#{first_name_men} #{last_name}",
  "#{first_name_women} #{last_name}",
  "#{first_name_men} #{last_name}",
  "#{prefix} #{first_name_men} #{last_name}",
  "#{prefix} #{first_name_women} #{last_name}"
];

},{}],822:[function(require,module,exports){
module["exports"] = [
  "Dr.",
  "Prof.",
  "PhD."
];

},{}],823:[function(require,module,exports){
arguments[4][208][0].apply(exports,arguments)
},{"dup":208}],824:[function(require,module,exports){
module["exports"] = [
  "####-#####",
  "####-######"
];

},{}],825:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":824,"dup":85}],826:[function(require,module,exports){
var team = {};
module['exports'] = team;
team.suffix = require("./suffix");
team.name = require("./name");

},{"./name":827,"./suffix":828}],827:[function(require,module,exports){
module["exports"] = [
  "#{Address.city} #{suffix}"
];

},{}],828:[function(require,module,exports){
module["exports"] = [
  "IF",
  "FF",
  "BK",
  "HK",
  "AIF",
  "SK",
  "FC",
  "SK",
  "BoIS",
  "FK",
  "BIS",
  "FIF",
  "IK"
];

},{}],829:[function(require,module,exports){
arguments[4][52][0].apply(exports,arguments)
},{"dup":52}],830:[function(require,module,exports){
module["exports"] = [
  "Adana",
  "Adıyaman",
  "Afyon",
  "Ağrı",
  "Amasya",
  "Ankara",
  "Antalya",
  "Artvin",
  "Aydın",
  "Balıkesir",
  "Bilecik",
  "Bingöl",
  "Bitlis",
  "Bolu",
  "Burdur",
  "Bursa",
  "Çanakkale",
  "Çankırı",
  "Çorum",
  "Denizli",
  "Diyarbakır",
  "Edirne",
  "Elazığ",
  "Erzincan",
  "Erzurum",
  "Eskişehir",
  "Gaziantep",
  "Giresun",
  "Gümüşhane",
  "Hakkari",
  "Hatay",
  "Isparta",
  "İçel (Mersin)",
  "İstanbul",
  "İzmir",
  "Kars",
  "Kastamonu",
  "Kayseri",
  "Kırklareli",
  "Kırşehir",
  "Kocaeli",
  "Konya",
  "Kütahya",
  "Malatya",
  "Manisa",
  "K.maraş",
  "Mardin",
  "Muğla",
  "Muş",
  "Nevşehir",
  "Niğde",
  "Ordu",
  "Rize",
  "Sakarya",
  "Samsun",
  "Siirt",
  "Sinop",
  "Sivas",
  "Tekirdağ",
  "Tokat",
  "Trabzon",
  "Tunceli",
  "Şanlıurfa",
  "Uşak",
  "Van",
  "Yozgat",
  "Zonguldak",
  "Aksaray",
  "Bayburt",
  "Karaman",
  "Kırıkkale",
  "Batman",
  "Şırnak",
  "Bartın",
  "Ardahan",
  "Iğdır",
  "Yalova",
  "Karabük",
  "Kilis",
  "Osmaniye",
  "Düzce"
];

},{}],831:[function(require,module,exports){
module["exports"] = [
  "Afganistan",
  "Almanya",
  "Amerika Birleşik Devletleri",
  "Amerikan Samoa",
  "Andorra",
  "Angola",
  "Anguilla, İngiltere",
  "Antigua ve Barbuda",
  "Arjantin",
  "Arnavutluk",
  "Aruba, Hollanda",
  "Avustralya",
  "Avusturya",
  "Azerbaycan",
  "Bahama Adaları",
  "Bahreyn",
  "Bangladeş",
  "Barbados",
  "Belçika",
  "Belize",
  "Benin",
  "Bermuda, İngiltere",
  "Beyaz Rusya",
  "Bhutan",
  "Birleşik Arap Emirlikleri",
  "Birmanya (Myanmar)",
  "Bolivya",
  "Bosna Hersek",
  "Botswana",
  "Brezilya",
  "Brunei",
  "Bulgaristan",
  "Burkina Faso",
  "Burundi",
  "Cape Verde",
  "Cayman Adaları, İngiltere",
  "Cebelitarık, İngiltere",
  "Cezayir",
  "Christmas Adası , Avusturalya",
  "Cibuti",
  "Çad",
  "Çek Cumhuriyeti",
  "Çin",
  "Danimarka",
  "Doğu Timor",
  "Dominik Cumhuriyeti",
  "Dominika",
  "Ekvator",
  "Ekvator Ginesi",
  "El Salvador",
  "Endonezya",
  "Eritre",
  "Ermenistan",
  "Estonya",
  "Etiyopya",
  "Fas",
  "Fiji",
  "Fildişi Sahili",
  "Filipinler",
  "Filistin",
  "Finlandiya",
  "Folkland Adaları, İngiltere",
  "Fransa",
  "Fransız Guyanası",
  "Fransız Güney Eyaletleri (Kerguelen Adaları)",
  "Fransız Polinezyası",
  "Gabon",
  "Galler",
  "Gambiya",
  "Gana",
  "Gine",
  "Gine-Bissau",
  "Grenada",
  "Grönland",
  "Guadalup, Fransa",
  "Guam, Amerika",
  "Guatemala",
  "Guyana",
  "Güney Afrika",
  "Güney Georgia ve Güney Sandviç Adaları, İngiltere",
  "Güney Kıbrıs Rum Yönetimi",
  "Güney Kore",
  "Gürcistan H",
  "Haiti",
  "Hırvatistan",
  "Hindistan",
  "Hollanda",
  "Hollanda Antilleri",
  "Honduras",
  "Irak",
  "İngiltere",
  "İran",
  "İrlanda",
  "İspanya",
  "İsrail",
  "İsveç",
  "İsviçre",
  "İtalya",
  "İzlanda",
  "Jamaika",
  "Japonya",
  "Johnston Atoll, Amerika",
  "K.K.T.C.",
  "Kamboçya",
  "Kamerun",
  "Kanada",
  "Kanarya Adaları",
  "Karadağ",
  "Katar",
  "Kazakistan",
  "Kenya",
  "Kırgızistan",
  "Kiribati",
  "Kolombiya",
  "Komorlar",
  "Kongo",
  "Kongo Demokratik Cumhuriyeti",
  "Kosova",
  "Kosta Rika",
  "Kuveyt",
  "Kuzey İrlanda",
  "Kuzey Kore",
  "Kuzey Maryana Adaları",
  "Küba",
  "Laos",
  "Lesotho",
  "Letonya",
  "Liberya",
  "Libya",
  "Liechtenstein",
  "Litvanya",
  "Lübnan",
  "Lüksemburg",
  "Macaristan",
  "Madagaskar",
  "Makau (Makao)",
  "Makedonya",
  "Malavi",
  "Maldiv Adaları",
  "Malezya",
  "Mali",
  "Malta",
  "Marşal Adaları",
  "Martinik, Fransa",
  "Mauritius",
  "Mayotte, Fransa",
  "Meksika",
  "Mısır",
  "Midway Adaları, Amerika",
  "Mikronezya",
  "Moğolistan",
  "Moldavya",
  "Monako",
  "Montserrat",
  "Moritanya",
  "Mozambik",
  "Namibia",
  "Nauru",
  "Nepal",
  "Nijer",
  "Nijerya",
  "Nikaragua",
  "Niue, Yeni Zelanda",
  "Norveç",
  "Orta Afrika Cumhuriyeti",
  "Özbekistan",
  "Pakistan",
  "Palau Adaları",
  "Palmyra Atoll, Amerika",
  "Panama",
  "Papua Yeni Gine",
  "Paraguay",
  "Peru",
  "Polonya",
  "Portekiz",
  "Porto Riko, Amerika",
  "Reunion, Fransa",
  "Romanya",
  "Ruanda",
  "Rusya Federasyonu",
  "Saint Helena, İngiltere",
  "Saint Martin, Fransa",
  "Saint Pierre ve Miquelon, Fransa",
  "Samoa",
  "San Marino",
  "Santa Kitts ve Nevis",
  "Santa Lucia",
  "Santa Vincent ve Grenadinler",
  "Sao Tome ve Principe",
  "Senegal",
  "Seyşeller",
  "Sırbistan",
  "Sierra Leone",
  "Singapur",
  "Slovakya",
  "Slovenya",
  "Solomon Adaları",
  "Somali",
  "Sri Lanka",
  "Sudan",
  "Surinam",
  "Suriye",
  "Suudi Arabistan",
  "Svalbard, Norveç",
  "Svaziland",
  "Şili",
  "Tacikistan",
  "Tanzanya",
  "Tayland",
  "Tayvan",
  "Togo",
  "Tonga",
  "Trinidad ve Tobago",
  "Tunus",
  "Turks ve Caicos Adaları, İngiltere",
  "Tuvalu",
  "Türkiye",
  "Türkmenistan",
  "Uganda",
  "Ukrayna",
  "Umman",
  "Uruguay",
  "Ürdün",
  "Vallis ve Futuna, Fransa",
  "Vanuatu",
  "Venezuela",
  "Vietnam",
  "Virgin Adaları, Amerika",
  "Virgin Adaları, İngiltere",
  "Wake Adaları, Amerika",
  "Yemen",
  "Yeni Kaledonya, Fransa",
  "Yeni Zelanda",
  "Yunanistan",
  "Zambiya",
  "Zimbabve"
];

},{}],832:[function(require,module,exports){
module["exports"] = [
  "Türkiye"
];

},{}],833:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city = require("./city");
address.street_root = require("./street_root");
address.country = require("./country");
address.postcode = require("./postcode");
address.default_country = require("./default_country");
address.building_number = require("./building_number");
address.street_name = require("./street_name");
address.street_address = require("./street_address");

},{"./building_number":829,"./city":830,"./country":831,"./default_country":832,"./postcode":834,"./street_address":835,"./street_name":836,"./street_root":837}],834:[function(require,module,exports){
arguments[4][320][0].apply(exports,arguments)
},{"dup":320}],835:[function(require,module,exports){
arguments[4][63][0].apply(exports,arguments)
},{"dup":63}],836:[function(require,module,exports){
arguments[4][64][0].apply(exports,arguments)
},{"dup":64}],837:[function(require,module,exports){
module["exports"] = [
  "Atatürk Bulvarı",
  "Alparslan Türkeş Bulvarı",
  "Ali Çetinkaya Caddesi",
  "Tevfik Fikret Caddesi",
  "Kocatepe Caddesi",
  "İsmet Paşa Caddesi",
  "30 Ağustos Caddesi",
  "İsmet Attila Caddesi",
  "Namık Kemal Caddesi",
  "Lütfi Karadirek Caddesi",
  "Sarıkaya Caddesi",
  "Yunus Emre Sokak",
  "Dar Sokak",
  "Fatih Sokak ",
  "Harman Yolu Sokak ",
  "Ergenekon Sokak  ",
  "Ülkü Sokak",
  "Sağlık Sokak",
  "Okul Sokak",
  "Harman Altı Sokak",
  "Kaldırım Sokak",
  "Mevlana Sokak",
  "Gül Sokak",
  "Sıran Söğüt Sokak",
  "Güven Yaka Sokak",
  "Saygılı Sokak",
  "Menekşe Sokak",
  "Dağınık Evler Sokak",
  "Sevgi Sokak",
  "Afyon Kaya Sokak",
  "Oğuzhan Sokak",
  "İbn-i Sina Sokak",
  "Okul Sokak",
  "Bahçe Sokak",
  "Köypınar Sokak",
  "Kekeçoğlu Sokak",
  "Barış Sokak",
  "Bayır Sokak",
  "Kerimoğlu Sokak",
  "Nalbant Sokak",
  "Bandak Sokak"
];

},{}],838:[function(require,module,exports){
module["exports"] = [
  "+90-53#-###-##-##",
  "+90-54#-###-##-##",
  "+90-55#-###-##-##",
  "+90-50#-###-##-##"
];

},{}],839:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"./formats":838,"dup":67}],840:[function(require,module,exports){
var tr = {};
module['exports'] = tr;
tr.title = "Turkish";
tr.address = require("./address");
tr.internet = require("./internet");
tr.lorem = require("./lorem");
tr.phone_number = require("./phone_number");
tr.cell_phone = require("./cell_phone");
tr.name = require("./name");

},{"./address":833,"./cell_phone":839,"./internet":842,"./lorem":843,"./name":846,"./phone_number":852}],841:[function(require,module,exports){
module["exports"] = [
  "com.tr",
  "com",
  "biz",
  "info",
  "name",
  "gov.tr"
];

},{}],842:[function(require,module,exports){
arguments[4][126][0].apply(exports,arguments)
},{"./domain_suffix":841,"dup":126}],843:[function(require,module,exports){
arguments[4][76][0].apply(exports,arguments)
},{"./words":844,"dup":76}],844:[function(require,module,exports){
arguments[4][77][0].apply(exports,arguments)
},{"dup":77}],845:[function(require,module,exports){
module["exports"] = [
  "Aba",
  "Abak",
  "Abaka",
  "Abakan",
  "Abakay",
  "Abar",
  "Abay",
  "Abı",
  "Abılay",
  "Abluç",
  "Abşar",
  "Açığ",
  "Açık",
  "Açuk",
  "Adalan",
  "Adaldı",
  "Adalmış",
  "Adar",
  "Adaş",
  "Adberilgen",
  "Adıgüzel",
  "Adık",
  "Adıkutlu",
  "Adıkutlutaş",
  "Adlı",
  "Adlıbeğ",
  "Adraman",
  "Adsız",
  "Afşar",
  "Afşın",
  "Ağabay",
  "Ağakağan",
  "Ağalak",
  "Ağlamış",
  "Ak",
  "Akaş",
  "Akata",
  "Akbaş",
  "Akbay",
  "Akboğa",
  "Akbörü",
  "Akbudak",
  "Akbuğra",
  "Akbulak",
  "Akça",
  "Akçakoca",
  "Akçora",
  "Akdemir",
  "Akdoğan",
  "Akı",
  "Akıbudak",
  "Akım",
  "Akın",
  "Akınçı",
  "Akkun",
  "Akkunlu",
  "Akkurt",
  "Akkuş",
  "Akpıra",
  "Aksungur",
  "Aktan",
  "Al",
  "Ala",
  "Alaban",
  "Alabörü",
  "Aladağ",
  "Aladoğan",
  "Alakurt",
  "Alayunt",
  "Alayuntlu",
  "Aldemir",
  "Aldıgerey",
  "Aldoğan",
  "Algu",
  "Alımga",
  "Alka",
  "Alkabölük",
  "Alkaevli",
  "Alkan",
  "Alkaşı",
  "Alkış",
  "Alp",
  "Alpagut",
  "Alpamış",
  "Alparsbeğ",
  "Alparslan",
  "Alpata",
  "Alpay",
  "Alpaya",
  "Alpaykağan",
  "Alpbamsı",
  "Alpbilge",
  "Alpdirek",
  "Alpdoğan",
  "Alper",
  "Alperen",
  "Alpertunga",
  "Alpgerey",
  "Alpış",
  "Alpilig",
  "Alpkara",
  "Alpkutlu",
  "Alpkülük",
  "Alpşalçı",
  "Alptegin",
  "Alptuğrul",
  "Alptunga",
  "Alpturan",
  "Alptutuk",
  "Alpuluğ",
  "Alpurungu",
  "Alpurungututuk",
  "Alpyörük",
  "Altan",
  "Altankağan",
  "Altankan",
  "Altay",
  "Altın",
  "Altınkağan",
  "Altınkan",
  "Altınoba",
  "Altıntamgan",
  "Altıntamgantarkan",
  "Altıntarkan",
  "Altıntay",
  "Altmışkara",
  "Altuga",
  "Amaç",
  "Amrak",
  "Amul",
  "Ançuk",
  "Andarıman",
  "Anıl",
  "Ant",
  "Apa",
  "Apak",
  "Apatarkan",
  "Aprançur",
  "Araboğa",
  "Arademir",
  "Aral",
  "Arbay",
  "Arbuz",
  "Arçuk",
  "Ardıç",
  "Argıl",
  "Argu",
  "Argun",
  "Arı",
  "Arıboğa",
  "Arık",
  "Arıkağan",
  "Arıkdoruk",
  "Arınç",
  "Arkın",
  "Arkış",
  "Armağan",
  "Arnaç",
  "Arpat",
  "Arsal",
  "Arsıl",
  "Arslan",
  "Arslanargun",
  "Arslanbörü",
  "Arslansungur",
  "Arslantegin",
  "Arslanyabgu",
  "Arşun",
  "Artıınal",
  "Artuk",
  "Artukaç",
  "Artut",
  "Aruk",
  "Asartegin",
  "Asığ",
  "Asrı",
  "Asuğ",
  "Aşan",
  "Aşanboğa",
  "Aşantuğrul",
  "Aşantudun",
  "Aşıkbulmuş",
  "Aşkın",
  "Aştaloğul",
  "Aşuk",
  "Ataç",
  "Atakağan",
  "Atakan",
  "Atalan",
  "Ataldı",
  "Atalmış",
  "Ataman",
  "Atasagun",
  "Atasu",
  "Atberilgen",
  "Atıgay",
  "Atıkutlu",
  "Atıkutlutaş",
  "Atıla",
  "Atılgan",
  "Atım",
  "Atımer",
  "Atış",
  "Atlı",
  "Atlıbeğ",
  "Atlıkağan",
  "Atmaca",
  "Atsız",
  "Atunçu",
  "Avar",
  "Avluç",
  "Avşar",
  "Ay",
  "Ayaçı",
  "Ayas",
  "Ayaş",
  "Ayaz",
  "Aybalta",
  "Ayban",
  "Aybars",
  "Aybeğ",
  "Aydarkağan",
  "Aydemir",
  "Aydın",
  "Aydınalp",
  "Aydoğan",
  "Aydoğdu",
  "Aydoğmuş",
  "Aygırak",
  "Ayıtmış",
  "Ayız",
  "Ayızdağ",
  "Aykağan",
  "Aykan",
  "Aykurt",
  "Ayluç",
  "Ayluçtarkan",
  "Ayma",
  "Ayruk",
  "Aysılığ",
  "Aytak",
  "Ayyıldız",
  "Azak",
  "Azban",
  "Azgan",
  "Azganaz",
  "Azıl",
  "Babır",
  "Babur",
  "Baçara",
  "Baççayman",
  "Baçman",
  "Badabul",
  "Badruk",
  "Badur",
  "Bağa",
  "Bağaalp",
  "Bağaışbara",
  "Bağan",
  "Bağaşatulu",
  "Bağatarkan",
  "Bağatengrikağan",
  "Bağatur",
  "Bağaturçigşi",
  "Bağaturgerey",
  "Bağaturipi",
  "Bağatursepi",
  "Bağış",
  "Bağtaş",
  "Bakağul",
  "Bakır",
  "Bakırsokum",
  "Baksı",
  "Bakşı",
  "Balaban",
  "Balaka",
  "Balakatay",
  "Balamır",
  "Balçar",
  "Baldu",
  "Balkık",
  "Balta",
  "Baltacı",
  "Baltar",
  "Baltır",
  "Baltur",
  "Bamsı",
  "Bangu",
  "Barak",
  "Baraktöre",
  "Baran",
  "Barbeğ",
  "Barboğa",
  "Barbol",
  "Barbulsun",
  "Barça",
  "Barçadoğdu",
  "Barçadoğmuş",
  "Barçadurdu",
  "Barçadurmuş",
  "Barçan",
  "Barçatoyun",
  "Bardıbay",
  "Bargan",
  "Barımtay",
  "Barın",
  "Barkan",
  "Barkdoğdu",
  "Barkdoğmuş",
  "Barkdurdu",
  "Barkdurmuş",
  "Barkın",
  "Barlas",
  "Barlıbay",
  "Barmaklak",
  "Barmaklı",
  "Barman",
  "Bars",
  "Barsbeğ",
  "Barsboğa",
  "Barsgan",
  "Barskan",
  "Barsurungu",
  "Bartu",
  "Basademir",
  "Basan",
  "Basanyalavaç",
  "Basar",
  "Basat",
  "Baskın",
  "Basmıl",
  "Bastı",
  "Bastuğrul",
  "Basu",
  "Basut",
  "Başak",
  "Başbuğ",
  "Başçı",
  "Başgan",
  "Başkırt",
  "Başkurt",
  "Baştar",
  "Batrak",
  "Batu",
  "Batuk",
  "Batur",
  "Baturalp",
  "Bay",
  "Bayançar",
  "Bayankağan",
  "Bayat",
  "Bayazıt",
  "Baybars",
  "Baybayık",
  "Baybiçen",
  "Bayboğa",
  "Baybora",
  "Baybüre",
  "Baydar",
  "Baydemir",
  "Baydur",
  "Bayık",
  "Bayınçur",
  "Bayındır",
  "Baykal",
  "Baykara",
  "Baykoca",
  "Baykuzu",
  "Baymünke",
  "Bayna",
  "Baynal",
  "Baypüre",
  "Bayrı",
  "Bayraç",
  "Bayrak",
  "Bayram",
  "Bayrın",
  "Bayruk",
  "Baysungur",
  "Baytara",
  "Baytaş",
  "Bayunçur",
  "Bayur",
  "Bayurku",
  "Bayutmuş",
  "Bayuttu",
  "Bazır",
  "Beçeapa",
  "Beçkem",
  "Beğ",
  "Beğarslan",
  "Beğbars",
  "Beğbilgeçikşin",
  "Beğboğa",
  "Beğçur",
  "Beğdemir",
  "Beğdilli",
  "Beğdurmuş",
  "Beğkulu",
  "Beğtaş",
  "Beğtegin",
  "Beğtüzün",
  "Begi",
  "Begil",
  "Begine",
  "Begitutuk",
  "Beglen",
  "Begni",
  "Bek",
  "Bekazıl",
  "Bekbekeç",
  "Bekeç",
  "Bekeçarslan",
  "Bekeçarslantegin",
  "Bekeçtegin",
  "Beker",
  "Beklemiş",
  "Bektür",
  "Belçir",
  "Belek",
  "Belgi",
  "Belgüc",
  "Beltir",
  "Bengi",
  "Bengü",
  "Benlidemir",
  "Berdibeğ",
  "Berendey",
  "Bergü",
  "Berginsenge",
  "Berk",
  "Berke",
  "Berkiş",
  "Berkyaruk",
  "Bermek",
  "Besentegin",
  "Betemir",
  "Beyizçi",
  "Beyrek",
  "Beyrem",
  "Bıçkı",
  "Bıçkıcı",
  "Bıdın",
  "Bıtaybıkı",
  "Bıtrı",
  "Biçek",
  "Bilge",
  "Bilgebayunçur",
  "Bilgebeğ",
  "Bilgeçikşin",
  "Bilgeışbara",
  "Bilgeışbaratamgan",
  "Bilgekağan",
  "Bilgekan",
  "Bilgekutluk",
  "Bilgekülüçur",
  "Bilgetaçam",
  "Bilgetamgacı",
  "Bilgetardu",
  "Bilgetegin",
  "Bilgetonyukuk",
  "Bilgez",
  "Bilgiç",
  "Bilgin",
  "Bilig",
  "Biligköngülsengün",
  "Bilik",
  "Binbeği",
  "Bindir",
  "Boğa",
  "Boğaç",
  "Boğaçuk",
  "Boldaz",
  "Bolmuş",
  "Bolsun",
  "Bolun",
  "Boncuk",
  "Bongul",
  "Bongulboğa",
  "Bora",
  "Boran",
  "Borçul",
  "Borlukçu",
  "Bornak",
  "Boyan",
  "Boyankulu",
  "Boylabağa",
  "Boylabağatarkan",
  "Boylakutlutarkan",
  "Bozan",
  "Bozbörü",
  "Bozdoğan",
  "Bozkurt",
  "Bozkuş",
  "Bozok",
  "Bögde",
  "Böge",
  "Bögü",
  "Bökde",
  "Bökde",
  "Böke",
  "Bölen",
  "Bölükbaşı",
  "Bönek",
  "Bönge",
  "Börü",
  "Börübars",
  "Börüsengün",
  "Börteçine",
  "Buçan",
  "Buçur",
  "Budağ",
  "Budak",
  "Budunlu",
  "Buğday",
  "Buğra",
  "Buğrakarakağan",
  "Bukak",
  "Bukaktutuk",
  "Bulaçapan",
  "Bulak",
  "Bulan",
  "Buldur",
  "Bulgak",
  "Bulmaz",
  "Bulmuş",
  "Buluç",
  "Buluğ",
  "Buluk",
  "Buluş",
  "Bulut",
  "Bumın",
  "Bunsuz",
  "Burçak",
  "Burguçan",
  "Burkay",
  "Burslan",
  "Burulday",
  "Burulgu",
  "Burunduk",
  "Buşulgan",
  "Butak",
  "Butuk",
  "Buyan",
  "Buyançuk",
  "Buyandemir",
  "Buyankara",
  "Buyat",
  "Buyraç",
  "Buyruç",
  "Buyruk",
  "Buzaç",
  "Buzaçtutuk",
  "Büdüs",
  "Büdüstudun",
  "Bügü",
  "Bügdüz",
  "Bügdüzemen",
  "Büge",
  "Büğübilge",
  "Bükdüz",
  "Büke",
  "Bükebuyraç",
  "Bükebuyruç",
  "Bükey",
  "Büktegin",
  "Büküşboğa",
  "Bümen",
  "Bünül",
  "Büre",
  "Bürgüt",
  "Bürkek",
  "Bürküt",
  "Bürlük",
  "Cebe",
  "Ceyhun",
  "Cılasun",
  "Çaba",
  "Çabdar",
  "Çablı",
  "Çabuş",
  "Çağan",
  "Çağatay",
  "Çağlar",
  "Çağlayan",
  "Çağrı",
  "Çağrıbeğ",
  "Çağrıtegin",
  "Çağru",
  "Çalapkulu",
  "Çankız",
  "Çemen",
  "Çemgen",
  "Çeykün",
  "Çıngır",
  "Çiçek",
  "Çiçem",
  "Çiğdem",
  "Çilenti",
  "Çimen",
  "Çobulmak",
  "Çocukbörü",
  "Çokramayul",
  "Çolman",
  "Çolpan",
  "Çölü",
  "Damla",
  "Deniz",
  "Dilek",
  "Diri",
  "Dizik",
  "Duru",
  "Dururbunsuz",
  "Duygu",
  "Ebin",
  "Ebkızı",
  "Ebren",
  "Edil",
  "Ediz",
  "Egemen",
  "Eğrim",
  "Ekeç",
  "Ekim",
  "Ekin",
  "Elkin",
  "Elti",
  "Engin",
  "Erdem",
  "Erdeni",
  "Erdeniözük",
  "Erdenikatun",
  "Erentüz",
  "Ergene",
  "Ergenekatun",
  "Erinç",
  "Erke",
  "Ermen",
  "Erten",
  "Ertenözük",
  "Esen",
  "Esenbike",
  "Eser",
  "Esin",
  "Etil",
  "Evin",
  "Eyiz",
  "Gelin",
  "Gelincik",
  "Gökbörü",
  "Gökçe",
  "Gökçegöl",
  "Gökçen",
  "Gökçiçek",
  "Gökşin",
  "Gönül",
  "Görün",
  "Gözde",
  "Gülegen",
  "Gülemen",
  "Güler",
  "Gülümser",
  "Gümüş",
  "Gün",
  "Günay",
  "Günçiçek",
  "Gündoğdu",
  "Gündoğmuş",
  "Güneş",
  "Günyaruk",
  "Gürbüz",
  "Güvercin",
  "Güzey",
  "Işığ",
  "Işık",
  "Işıl",
  "Işılay",
  "Ila",
  "Ilaçın",
  "Ilgın",
  "Inanç",
  "Irmak",
  "Isığ",
  "Isık",
  "Iyık",
  "Iyıktağ",
  "İdil",
  "İkeme",
  "İkiçitoyun",
  "İlbilge",
  "İldike",
  "İlgegü",
  "İmrem",
  "İnci",
  "İnç",
  "İrinç",
  "İrinçköl",
  "İrtiş",
  "İtil",
  "Kancı",
  "Kançı",
  "Kapgar",
  "Karaca",
  "Karaça",
  "Karak",
  "Kargılaç",
  "Karlıgaç",
  "Katun",
  "Katunkız",
  "Kayacık",
  "Kayaçık",
  "Kayça",
  "Kaynak",
  "Kazanç",
  "Kazkatun",
  "Kekik",
  "Keklik",
  "Kepez",
  "Kesme",
  "Keyken",
  "Kezlik",
  "Kımız",
  "Kımızın",
  "Kımızalma",
  "Kımızalmıla",
  "Kırçiçek",
  "Kırgavul",
  "Kırlangıç",
  "Kıvanç",
  "Kıvılcım",
  "Kızdurmuş",
  "Kızılalma"
];

},{}],846:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.prefix = require("./prefix");
name.name = require("./name");

},{"./first_name":845,"./last_name":847,"./name":848,"./prefix":849}],847:[function(require,module,exports){
module["exports"] = [
  "Abacı",
  "Abadan",
  "Aclan",
  "Adal",
  "Adan",
  "Adıvar",
  "Akal",
  "Akan",
  "Akar ",
  "Akay",
  "Akaydın",
  "Akbulut",
  "Akgül",
  "Akışık",
  "Akman",
  "Akyürek",
  "Akyüz",
  "Akşit",
  "Alnıaçık",
  "Alpuğan",
  "Alyanak",
  "Arıcan",
  "Arslanoğlu",
  "Atakol",
  "Atan",
  "Avan",
  "Ayaydın",
  "Aybar",
  "Aydan",
  "Aykaç",
  "Ayverdi",
  "Ağaoğlu",
  "Aşıkoğlu",
  "Babacan",
  "Babaoğlu",
  "Bademci",
  "Bakırcıoğlu",
  "Balaban",
  "Balcı",
  "Barbarosoğlu",
  "Baturalp",
  "Baykam",
  "Başoğlu",
  "Berberoğlu",
  "Beşerler",
  "Beşok",
  "Biçer",
  "Bolatlı",
  "Dalkıran",
  "Dağdaş",
  "Dağlaroğlu",
  "Demirbaş",
  "Demirel",
  "Denkel",
  "Dizdar ",
  "Doğan ",
  "Durak ",
  "Durmaz",
  "Duygulu",
  "Düşenkalkar",
  "Egeli",
  "Ekici",
  "Ekşioğlu",
  "Eliçin",
  "Elmastaşoğlu",
  "Elçiboğa",
  "Erbay",
  "Erberk",
  "Erbulak",
  "Erdoğan",
  "Erez",
  "Erginsoy",
  "Erkekli",
  "Eronat",
  "Ertepınar",
  "Ertürk",
  "Erçetin",
  "Evliyaoğlu",
  "Gönültaş",
  "Gümüşpala",
  "Günday",
  "Gürmen",
  "Hakyemez",
  "Hamzaoğlu",
  "Ilıcalı",
  "Kahveci",
  "Kaplangı",
  "Karabulut",
  "Karaböcek",
  "Karadaş",
  "Karaduman",
  "Karaer",
  "Kasapoğlu",
  "Kavaklıoğlu",
  "Kaya ",
  "Keseroğlu",
  "Keçeci",
  "Kılıççı",
  "Kıraç ",
  "Kocabıyık",
  "Korol",
  "Koyuncu",
  "Koç",
  "Koçoğlu",
  "Koçyiğit",
  "Kuday",
  "Kulaksızoğlu",
  "Kumcuoğlu",
  "Kunt",
  "Kunter",
  "Kurutluoğlu",
  "Kutlay",
  "Kuzucu",
  "Körmükçü",
  "Köybaşı",
  "Köylüoğlu",
  "Küçükler",
  "Limoncuoğlu",
  "Mayhoş",
  "Menemencioğlu",
  "Mertoğlu",
  "Nalbantoğlu",
  "Nebioğlu",
  "Numanoğlu",
  "Okumuş",
  "Okur",
  "Oraloğlu",
  "Orbay",
  "Ozansoy",
  "Paksüt",
  "Pekkan",
  "Pektemek",
  "Polat",
  "Poyrazoğlu",
  "Poçan",
  "Sadıklar",
  "Samancı",
  "Sandalcı",
  "Sarıoğlu",
  "Saygıner",
  "Sepetçi",
  "Sezek",
  "Sinanoğlu",
  "Solmaz",
  "Sözeri",
  "Süleymanoğlu",
  "Tahincioğlu",
  "Tanrıkulu",
  "Tazegül",
  "Taşlı",
  "Taşçı",
  "Tekand",
  "Tekelioğlu",
  "Tokatlıoğlu",
  "Tokgöz",
  "Topaloğlu",
  "Topçuoğlu",
  "Toraman",
  "Tunaboylu",
  "Tunçeri",
  "Tuğlu",
  "Tuğluk",
  "Türkdoğan",
  "Türkyılmaz",
  "Tütüncü",
  "Tüzün",
  "Uca",
  "Uluhan",
  "Velioğlu",
  "Yalçın",
  "Yazıcı",
  "Yetkiner",
  "Yeşilkaya",
  "Yıldırım ",
  "Yıldızoğlu",
  "Yılmazer",
  "Yorulmaz",
  "Çamdalı",
  "Çapanoğlu",
  "Çatalbaş",
  "Çağıran",
  "Çetin",
  "Çetiner",
  "Çevik",
  "Çörekçi",
  "Önür",
  "Örge",
  "Öymen",
  "Özberk",
  "Özbey",
  "Özbir",
  "Özdenak",
  "Özdoğan",
  "Özgörkey",
  "Özkara",
  "Özkök ",
  "Öztonga",
  "Öztuna"
];

},{}],848:[function(require,module,exports){
arguments[4][479][0].apply(exports,arguments)
},{"dup":479}],849:[function(require,module,exports){
module["exports"] = [
  "Bay",
  "Bayan",
  "Dr.",
  "Prof. Dr."
];

},{}],850:[function(require,module,exports){
module["exports"] = [
  "392",
  "510",
  "512",
  "522",
  "562",
  "564",
  "592",
  "594",
  "800",
  "811",
  "822",
  "850",
  "888",
  "898",
  "900",
  "322",
  "416",
  "272",
  "472",
  "382",
  "358",
  "312",
  "242",
  "478",
  "466",
  "256",
  "266",
  "378",
  "488",
  "458",
  "228",
  "426",
  "434",
  "374",
  "248",
  "224",
  "286",
  "376",
  "364",
  "258",
  "412",
  "380",
  "284",
  "424",
  "446",
  "442",
  "222",
  "342",
  "454",
  "456",
  "438",
  "326",
  "476",
  "246",
  "216",
  "212",
  "232",
  "344",
  "370",
  "338",
  "474",
  "366",
  "352",
  "318",
  "288",
  "386",
  "348",
  "262",
  "332",
  "274",
  "422",
  "236",
  "482",
  "324",
  "252",
  "436",
  "384",
  "388",
  "452",
  "328",
  "464",
  "264",
  "362",
  "484",
  "368",
  "346",
  "414",
  "486",
  "282",
  "356",
  "462",
  "428",
  "276",
  "432",
  "226",
  "354",
  "372"
];

},{}],851:[function(require,module,exports){
module["exports"] = [
  "+90-###-###-##-##",
  "+90-###-###-#-###"
];

},{}],852:[function(require,module,exports){
var phone_number = {};
module['exports'] = phone_number;
phone_number.area_code = require("./area_code");
phone_number.formats = require("./formats");

},{"./area_code":850,"./formats":851}],853:[function(require,module,exports){
arguments[4][746][0].apply(exports,arguments)
},{"dup":746}],854:[function(require,module,exports){
module["exports"] = [
  "#{city_name}",
  "#{city_prefix} #{Name.male_first_name}"
];

},{}],855:[function(require,module,exports){
module["exports"] = [
  "Алчевськ",
  "Артемівськ",
  "Бердичів",
  "Бердянськ",
  "Біла Церква",
  "Бровари",
  "Вінниця",
  "Горлівка",
  "Дніпродзержинськ",
  "Дніпропетровськ",
  "Донецьк",
  "Євпаторія",
  "Єнакієве",
  "Житомир",
  "Запоріжжя",
  "Івано-Франківськ",
  "Ізмаїл",
  "Кам’янець-Подільський",
  "Керч",
  "Київ",
  "Кіровоград",
  "Конотоп",
  "Краматорськ",
  "Красний Луч",
  "Кременчук",
  "Кривий Ріг",
  "Лисичанськ",
  "Луганськ",
  "Луцьк",
  "Львів",
  "Макіївка",
  "Маріуполь",
  "Мелітополь",
  "Миколаїв",
  "Мукачеве",
  "Нікополь",
  "Одеса",
  "Олександрія",
  "Павлоград",
  "Полтава",
  "Рівне",
  "Севастополь",
  "Сєвєродонецьк",
  "Сімферополь",
  "Слов’янськ",
  "Суми",
  "Тернопіль",
  "Ужгород",
  "Умань",
  "Харків",
  "Херсон",
  "Хмельницький",
  "Черкаси",
  "Чернівці",
  "Чернігів",
  "Шостка",
  "Ялта"
];

},{}],856:[function(require,module,exports){
module["exports"] = [
  "Південний",
  "Північний",
  "Східний",
  "Західний"
];

},{}],857:[function(require,module,exports){
module["exports"] = [
  "град"
];

},{}],858:[function(require,module,exports){
module["exports"] = [
  "Австралія",
  "Австрія",
  "Азербайджан",
  "Албанія",
  "Алжир",
  "Ангола",
  "Андорра",
  "Антигуа і Барбуда",
  "Аргентина",
  "Афганістан",
  "Багамські Острови",
  "Бангладеш",
  "Барбадос",
  "Бахрейн",
  "Беліз",
  "Бельгія",
  "Бенін",
  "Білорусь",
  "Болгарія",
  "Болівія",
  "Боснія і Герцеговина",
  "Ботсвана",
  "Бразилія",
  "Бруней",
  "Буркіна-Фасо",
  "Бурунді",
  "Бутан",
  "В’єтнам",
  "Вануату",
  "Ватикан",
  "Велика Британія",
  "Венесуела",
  "Вірменія",
  "Габон",
  "Гаїті",
  "Гайана",
  "Гамбія",
  "Гана",
  "Гватемала",
  "Гвінея",
  "Гвінея-Бісау",
  "Гондурас",
  "Гренада",
  "Греція",
  "Грузія",
  "Данія",
  "Демократична Республіка Конго",
  "Джибуті",
  "Домініка",
  "Домініканська Республіка",
  "Еквадор",
  "Екваторіальна Гвінея",
  "Еритрея",
  "Естонія",
  "Ефіопія",
  "Єгипет",
  "Ємен",
  "Замбія",
  "Зімбабве",
  "Ізраїль",
  "Індія",
  "Індонезія",
  "Ірак",
  "Іран",
  "Ірландія",
  "Ісландія",
  "Іспанія",
  "Італія",
  "Йорданія",
  "Кабо-Верде",
  "Казахстан",
  "Камбоджа",
  "Камерун",
  "Канада",
  "Катар",
  "Кенія",
  "Киргизстан",
  "Китай",
  "Кіпр",
  "Кірибаті",
  "Колумбія",
  "Коморські Острови",
  "Конго",
  "Коста-Рика",
  "Кот-д’Івуар",
  "Куба",
  "Кувейт",
  "Лаос",
  "Латвія",
  "Лесото",
  "Литва",
  "Ліберія",
  "Ліван",
  "Лівія",
  "Ліхтенштейн",
  "Люксембург",
  "Маврикій",
  "Мавританія",
  "Мадаґаскар",
  "Македонія",
  "Малаві",
  "Малайзія",
  "Малі",
  "Мальдіви",
  "Мальта",
  "Марокко",
  "Маршаллові Острови",
  "Мексика",
  "Мозамбік",
  "Молдова",
  "Монако",
  "Монголія",
  "Намібія",
  "Науру",
  "Непал",
  "Нігер",
  "Нігерія",
  "Нідерланди",
  "Нікарагуа",
  "Німеччина",
  "Нова Зеландія",
  "Норвегія",
  "Об’єднані Арабські Емірати",
  "Оман",
  "Пакистан",
  "Палау",
  "Панама",
  "Папуа-Нова Гвінея",
  "Парагвай",
  "Перу",
  "Південна Корея",
  "Південний Судан",
  "Південно-Африканська Республіка",
  "Північна Корея",
  "Польща",
  "Португалія",
  "Російська Федерація",
  "Руанда",
  "Румунія",
  "Сальвадор",
  "Самоа",
  "Сан-Марино",
  "Сан-Томе і Принсіпі",
  "Саудівська Аравія",
  "Свазіленд",
  "Сейшельські Острови",
  "Сенеґал",
  "Сент-Вінсент і Гренадини",
  "Сент-Кітс і Невіс",
  "Сент-Люсія",
  "Сербія",
  "Сирія",
  "Сінгапур",
  "Словаччина",
  "Словенія",
  "Соломонові Острови",
  "Сомалі",
  "Судан",
  "Суринам",
  "Східний Тимор",
  "США",
  "Сьєрра-Леоне",
  "Таджикистан",
  "Таїланд",
  "Танзанія",
  "Того",
  "Тонга",
  "Тринідад і Тобаго",
  "Тувалу",
  "Туніс",
  "Туреччина",
  "Туркменістан",
  "Уганда",
  "Угорщина",
  "Узбекистан",
  "Україна",
  "Уругвай",
  "Федеративні Штати Мікронезії",
  "Фіджі",
  "Філіппіни",
  "Фінляндія",
  "Франція",
  "Хорватія",
  "Центральноафриканська Республіка",
  "Чад",
  "Чехія",
  "Чилі",
  "Чорногорія",
  "Швейцарія",
  "Швеція",
  "Шрі-Ланка",
  "Ямайка",
  "Японія"
];

},{}],859:[function(require,module,exports){
module["exports"] = [
  "Україна"
];

},{}],860:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.country = require("./country");
address.building_number = require("./building_number");
address.street_prefix = require("./street_prefix");
address.street_suffix = require("./street_suffix");
address.secondary_address = require("./secondary_address");
address.postcode = require("./postcode");
address.state = require("./state");
address.street_title = require("./street_title");
address.city_name = require("./city_name");
address.city = require("./city");
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":853,"./city":854,"./city_name":855,"./city_prefix":856,"./city_suffix":857,"./country":858,"./default_country":859,"./postcode":861,"./secondary_address":862,"./state":863,"./street_address":864,"./street_name":865,"./street_prefix":866,"./street_suffix":867,"./street_title":868}],861:[function(require,module,exports){
arguments[4][320][0].apply(exports,arguments)
},{"dup":320}],862:[function(require,module,exports){
arguments[4][713][0].apply(exports,arguments)
},{"dup":713}],863:[function(require,module,exports){
module["exports"] = [
  "АР Крим",
  "Вінницька область",
  "Волинська область",
  "Дніпропетровська область",
  "Донецька область",
  "Житомирська область",
  "Закарпатська область",
  "Запорізька область",
  "Івано-Франківська область",
  "Київська область",
  "Кіровоградська область",
  "Луганська область",
  "Львівська область",
  "Миколаївська область",
  "Одеська область",
  "Полтавська область",
  "Рівненська область",
  "Сумська область",
  "Тернопільська область",
  "Харківська область",
  "Херсонська область",
  "Хмельницька область",
  "Черкаська область",
  "Чернівецька область",
  "Чернігівська область",
  "Київ",
  "Севастополь"
];

},{}],864:[function(require,module,exports){
arguments[4][715][0].apply(exports,arguments)
},{"dup":715}],865:[function(require,module,exports){
module["exports"] = [
  "#{street_prefix} #{Address.street_title}",
  "#{Address.street_title} #{street_suffix}"
];

},{}],866:[function(require,module,exports){
module["exports"] = [
  "вул.",
  "вулиця",
  "пр.",
  "проспект",
  "пл.",
  "площа",
  "пров.",
  "провулок"
];

},{}],867:[function(require,module,exports){
module["exports"] = [
  "майдан"
];

},{}],868:[function(require,module,exports){
module["exports"] = [
  "Зелена",
  "Молодіжна",
  "Городоцька",
  "Стрийська",
  "Вузька",
  "Нижанківського",
  "Староміська",
  "Ліста",
  "Вічева",
  "Брюховичів",
  "Винників",
  "Рудного",
  "Коліївщини"
];

},{}],869:[function(require,module,exports){
arguments[4][468][0].apply(exports,arguments)
},{"./name":870,"./prefix":871,"./suffix":872,"dup":468}],870:[function(require,module,exports){
arguments[4][724][0].apply(exports,arguments)
},{"dup":724}],871:[function(require,module,exports){
module["exports"] = [
  "ТОВ",
  "ПАТ",
  "ПрАТ",
  "ТДВ",
  "КТ",
  "ПТ",
  "ДП",
  "ФОП"
];

},{}],872:[function(require,module,exports){
module["exports"] = [
  "Постач",
  "Торг",
  "Пром",
  "Трейд",
  "Збут"
];

},{}],873:[function(require,module,exports){
var uk = {};
module['exports'] = uk;
uk.title = "Ukrainian";
uk.address = require("./address");
uk.company = require("./company");
uk.internet = require("./internet");
uk.name = require("./name");
uk.phone_number = require("./phone_number");

},{"./address":860,"./company":869,"./internet":876,"./name":880,"./phone_number":889}],874:[function(require,module,exports){
module["exports"] = [
  "cherkassy.ua",
  "cherkasy.ua",
  "ck.ua",
  "cn.ua",
  "com.ua",
  "crimea.ua",
  "cv.ua",
  "dn.ua",
  "dnepropetrovsk.ua",
  "dnipropetrovsk.ua",
  "donetsk.ua",
  "dp.ua",
  "if.ua",
  "in.ua",
  "ivano-frankivsk.ua",
  "kh.ua",
  "kharkiv.ua",
  "kharkov.ua",
  "kherson.ua",
  "khmelnitskiy.ua",
  "kiev.ua",
  "kirovograd.ua",
  "km.ua",
  "kr.ua",
  "ks.ua",
  "lg.ua",
  "lt.ua",
  "lugansk.ua",
  "lutsk.ua",
  "lutsk.net",
  "lviv.ua",
  "mk.ua",
  "net.ua",
  "nikolaev.ua",
  "od.ua",
  "odessa.ua",
  "org.ua",
  "pl.ua",
  "pl.ua",
  "poltava.ua",
  "rovno.ua",
  "rv.ua",
  "sebastopol.ua",
  "sm.ua",
  "sumy.ua",
  "te.ua",
  "ternopil.ua",
  "ua",
  "uz.ua",
  "uzhgorod.ua",
  "vinnica.ua",
  "vn.ua",
  "volyn.net",
  "volyn.ua",
  "yalta.ua",
  "zaporizhzhe.ua",
  "zhitomir.ua",
  "zp.ua",
  "zt.ua",
  "укр"
];

},{}],875:[function(require,module,exports){
module["exports"] = [
  "ukr.net",
  "ex.ua",
  "e-mail.ua",
  "i.ua",
  "meta.ua",
  "yandex.ua",
  "gmail.com"
];

},{}],876:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"./domain_suffix":874,"./free_email":875,"dup":75}],877:[function(require,module,exports){
module["exports"] = [
  "Аврелія",
  "Аврора",
  "Агапія",
  "Агата",
  "Агафія",
  "Агнеса",
  "Агнія",
  "Агрипина",
  "Ада",
  "Аделаїда",
  "Аделіна",
  "Адріана",
  "Азалія",
  "Алевтина",
  "Аліна",
  "Алла",
  "Альбіна",
  "Альвіна",
  "Анастасія",
  "Анастасія",
  "Анатолія",
  "Ангеліна",
  "Анжела",
  "Анна",
  "Антонида",
  "Антоніна",
  "Антонія",
  "Анфіса",
  "Аполлінарія",
  "Аполлонія",
  "Аркадія",
  "Артемія",
  "Афанасія",
  "Білослава",
  "Біляна",
  "Благовіста",
  "Богдана",
  "Богуслава",
  "Божена",
  "Болеслава",
  "Борислава",
  "Броніслава",
  "В’ячеслава",
  "Валентина",
  "Валерія",
  "Варвара",
  "Василина",
  "Вікторія",
  "Вілена",
  "Віленіна",
  "Віліна",
  "Віола",
  "Віолетта",
  "Віра",
  "Віргінія",
  "Віта",
  "Віталіна",
  "Влада",
  "Владислава",
  "Власта",
  "Всеслава",
  "Галина",
  "Ганна",
  "Гелена",
  "Далеслава",
  "Дана",
  "Дарина",
  "Дарислава",
  "Діана",
  "Діяна",
  "Добринка",
  "Добромила",
  "Добромира",
  "Добромисла",
  "Доброслава",
  "Долеслава",
  "Доляна",
  "Жанна",
  "Жозефіна",
  "Забава",
  "Звенислава",
  "Зінаїда",
  "Злата",
  "Зореслава",
  "Зорина",
  "Зоряна",
  "Зоя",
  "Іванна",
  "Ілона",
  "Інна",
  "Іннеса",
  "Ірина",
  "Ірма",
  "Калина",
  "Каріна",
  "Катерина",
  "Квітка",
  "Квітослава",
  "Клавдія",
  "Крентта",
  "Ксенія",
  "Купава",
  "Лада",
  "Лариса",
  "Леся",
  "Ликера",
  "Лідія",
  "Лілія",
  "Любава",
  "Любислава",
  "Любов",
  "Любомила",
  "Любомира",
  "Люборада",
  "Любослава",
  "Людмила",
  "Людомила",
  "Майя",
  "Мальва",
  "Мар’яна",
  "Марина",
  "Марічка",
  "Марія",
  "Марта",
  "Меланія",
  "Мечислава",
  "Милодара",
  "Милослава",
  "Мирослава",
  "Мілана",
  "Мокрина",
  "Мотря",
  "Мстислава",
  "Надія",
  "Наталія",
  "Неля",
  "Немира",
  "Ніна",
  "Огняна",
  "Оксана",
  "Олександра",
  "Олена",
  "Олеся",
  "Ольга",
  "Ореста",
  "Орина",
  "Орислава",
  "Орися",
  "Оріяна",
  "Павліна",
  "Палажка",
  "Пелагея",
  "Пелагія",
  "Поліна",
  "Поляна",
  "Потішана",
  "Радміла",
  "Радослава",
  "Раїна",
  "Раїса",
  "Роксолана",
  "Ромена",
  "Ростислава",
  "Руслана",
  "Світлана",
  "Святослава",
  "Слава",
  "Сміяна",
  "Сніжана",
  "Соломія",
  "Соня",
  "Софія",
  "Станислава",
  "Сюзана",
  "Таїсія",
  "Тамара",
  "Тетяна",
  "Устина",
  "Фаїна",
  "Февронія",
  "Федора",
  "Феодосія",
  "Харитина",
  "Христина",
  "Христя",
  "Юліанна",
  "Юлія",
  "Юстина",
  "Юхима",
  "Юхимія",
  "Яна",
  "Ярина",
  "Ярослава"
];

},{}],878:[function(require,module,exports){
module["exports"] = [
  "Андрухович",
  "Бабух",
  "Балабан",
  "Балабуха",
  "Балакун",
  "Балицька",
  "Бамбула",
  "Бандера",
  "Барановська",
  "Бачей",
  "Башук",
  "Бердник",
  "Білич",
  "Бондаренко",
  "Борецька",
  "Боровська",
  "Борочко",
  "Боярчук",
  "Брицька",
  "Бурмило",
  "Бутько",
  "Василишина",
  "Васильківська",
  "Вергун",
  "Вередун",
  "Верещук",
  "Витребенько",
  "Вітряк",
  "Волощук",
  "Гайдук",
  "Гайова",
  "Гайчук",
  "Галаєнко",
  "Галатей",
  "Галаціон",
  "Гаман",
  "Гамула",
  "Ганич",
  "Гарай",
  "Гарун",
  "Гладківська",
  "Гладух",
  "Глинська",
  "Гнатишина",
  "Гойко",
  "Головець",
  "Горбач",
  "Гордійчук",
  "Горова",
  "Городоцька",
  "Гречко",
  "Григоришина",
  "Гриневецька",
  "Гриневська",
  "Гришко",
  "Громико",
  "Данилишина",
  "Данилко",
  "Демків",
  "Демчишина",
  "Дзюб’як",
  "Дзюба",
  "Дідух",
  "Дмитришина",
  "Дмитрук",
  "Довгалевська",
  "Дурдинець",
  "Євенко",
  "Євпак",
  "Ємець",
  "Єрмак",
  "Забіла",
  "Зварич",
  "Зінкевич",
  "Зленко",
  "Іванишина",
  "Калач",
  "Кандиба",
  "Карпух",
  "Кивач",
  "Коваленко",
  "Ковальська",
  "Коломієць",
  "Коман",
  "Компанієць",
  "Кононець",
  "Кордун",
  "Корецька",
  "Корнїйчук",
  "Коров’як",
  "Коцюбинська",
  "Кулинич",
  "Кульчицька",
  "Лагойда",
  "Лазірко",
  "Ланова",
  "Латан",
  "Латанська",
  "Лахман",
  "Левадовська",
  "Ликович",
  "Линдик",
  "Ліхно",
  "Лобачевська",
  "Ломова",
  "Лугова",
  "Луцька",
  "Луцьків",
  "Лученко",
  "Лучко",
  "Люта",
  "Лящук",
  "Магера",
  "Мазайло",
  "Мазило",
  "Мазун",
  "Майборода",
  "Майстренко",
  "Маковецька",
  "Малкович",
  "Мамій",
  "Маринич",
  "Марієвська",
  "Марків",
  "Махно",
  "Миклашевська",
  "Миклухо",
  "Милославська",
  "Михайлюк",
  "Міняйло",
  "Могилевська",
  "Москаль",
  "Москалюк",
  "Мотрієнко",
  "Негода",
  "Ногачевська",
  "Опенько",
  "Осадко",
  "Павленко",
  "Павлишина",
  "Павлів",
  "Пагутяк",
  "Паламарчук",
  "Палій",
  "Паращук",
  "Пасічник",
  "Пендик",
  "Петик",
  "Петлюра",
  "Петренко",
  "Петрина",
  "Петришина",
  "Петрів",
  "Плаксій",
  "Погиба",
  "Поліщук",
  "Пономарів",
  "Поривай",
  "Поривайло",
  "Потебенько",
  "Потоцька",
  "Пригода",
  "Приймак",
  "Притула",
  "Прядун",
  "Розпутня",
  "Романишина",
  "Ромей",
  "Роменець",
  "Ромочко",
  "Савицька",
  "Саєнко",
  "Свидригайло",
  "Семеночко",
  "Семещук",
  "Сердюк",
  "Силецька",
  "Сідлецька",
  "Сідляк",
  "Сірко",
  "Скиба",
  "Скоропадська",
  "Слободян",
  "Сосюра",
  "Сплюха",
  "Спотикач",
  "Степанець",
  "Стигайло",
  "Сторожук",
  "Сторчак",
  "Стоян",
  "Сучак",
  "Сушко",
  "Тарасюк",
  "Тиндарей",
  "Ткаченко",
  "Третяк",
  "Троян",
  "Трублаєвська",
  "Трясило",
  "Трясун",
  "Уманець",
  "Унич",
  "Усич",
  "Федоришина",
  "Цушко",
  "Червоній",
  "Шамрило",
  "Шевченко",
  "Шестак",
  "Шиндарей",
  "Шиян",
  "Шкараба",
  "Шудрик",
  "Шумило",
  "Шупик",
  "Шухевич",
  "Щербак",
  "Юрчишина",
  "Юхно",
  "Ющик",
  "Ющук",
  "Яворівська",
  "Ялова",
  "Ялюк",
  "Янюк",
  "Ярмак",
  "Яцишина",
  "Яцьків",
  "Ящук"
];

},{}],879:[function(require,module,exports){
module["exports"] = [
  "Адамівна",
  "Азарівна",
  "Алевтинівна",
  "Альбертівна",
  "Анастасівна",
  "Анатоліївна",
  "Андріївна",
  "Антонівна",
  "Аркадіївна",
  "Арсенівна",
  "Арсеніївна",
  "Артемівна",
  "Архипівна",
  "Аскольдівна",
  "Афанасіївна",
  "Білославівна",
  "Богданівна",
  "Божемирівна",
  "Боженівна",
  "Болеславівна",
  "Боримирівна",
  "Борисівна",
  "Бориславівна",
  "Братиславівна",
  "В’ячеславівна",
  "Вадимівна",
  "Валентинівна",
  "Валеріївна",
  "Василівна",
  "Вікторівна",
  "Віталіївна",
  "Владиславівна",
  "Володимирівна",
  "Всеволодівна",
  "Всеславівна",
  "Гаврилівна",
  "Гарасимівна",
  "Георгіївна",
  "Гнатівна",
  "Гордіївна",
  "Григоріївна",
  "Данилівна",
  "Даромирівна",
  "Денисівна",
  "Дмитрівна",
  "Добромирівна",
  "Доброславівна",
  "Євгенівна",
  "Захарівна",
  "Захаріївна",
  "Збориславівна",
  "Звенимирівна",
  "Звениславівна",
  "Зеновіївна",
  "Зиновіївна",
  "Златомирівна",
  "Зореславівна",
  "Іванівна",
  "Ігорівна",
  "Ізяславівна",
  "Корнеліївна",
  "Корнилівна",
  "Корніївна",
  "Костянтинівна",
  "Лаврентіївна",
  "Любомирівна",
  "Макарівна",
  "Максимівна",
  "Марківна",
  "Маркіянівна",
  "Матвіївна",
  "Мечиславівна",
  "Микитівна",
  "Миколаївна",
  "Миронівна",
  "Мирославівна",
  "Михайлівна",
  "Мстиславівна",
  "Назарівна",
  "Назаріївна",
  "Натанівна",
  "Немирівна",
  "Несторівна",
  "Олегівна",
  "Олександрівна",
  "Олексіївна",
  "Олельківна",
  "Омелянівна",
  "Орестівна",
  "Орхипівна",
  "Остапівна",
  "Охрімівна",
  "Павлівна",
  "Панасівна",
  "Пантелеймонівна",
  "Петрівна",
  "Пилипівна",
  "Радимирівна",
  "Радимівна",
  "Родіонівна",
  "Романівна",
  "Ростиславівна",
  "Русланівна",
  "Святославівна",
  "Сергіївна",
  "Славутівна",
  "Станіславівна",
  "Степанівна",
  "Стефаніївна",
  "Тарасівна",
  "Тимофіївна",
  "Тихонівна",
  "Устимівна",
  "Юріївна",
  "Юхимівна",
  "Ярославівна"
];

},{}],880:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.male_first_name = require("./male_first_name");
name.male_middle_name = require("./male_middle_name");
name.male_last_name = require("./male_last_name");
name.female_first_name = require("./female_first_name");
name.female_middle_name = require("./female_middle_name");
name.female_last_name = require("./female_last_name");
name.prefix = require("./prefix");
name.suffix = require("./suffix");
name.title = require("./title");
name.name = require("./name");

},{"./female_first_name":877,"./female_last_name":878,"./female_middle_name":879,"./male_first_name":881,"./male_last_name":882,"./male_middle_name":883,"./name":884,"./prefix":885,"./suffix":886,"./title":887}],881:[function(require,module,exports){
module["exports"] = [
  "Августин",
  "Аврелій",
  "Адам",
  "Адріян",
  "Азарій",
  "Алевтин",
  "Альберт",
  "Анастас",
  "Анастасій",
  "Анатолій",
  "Андрій",
  "Антін",
  "Антон",
  "Антоній",
  "Аркадій",
  "Арсен",
  "Арсеній",
  "Артем",
  "Архип",
  "Аскольд",
  "Афанасій",
  "Біломир",
  "Білослав",
  "Богдан",
  "Божемир",
  "Божен",
  "Болеслав",
  "Боримир",
  "Боримисл",
  "Борис",
  "Борислав",
  "Братимир",
  "Братислав",
  "Братомил",
  "Братослав",
  "Брячислав",
  "Будимир",
  "Буйтур",
  "Буревіст",
  "В’ячеслав",
  "Вадим",
  "Валентин",
  "Валерій",
  "Василь",
  "Велемир",
  "Віктор",
  "Віталій",
  "Влад",
  "Владислав",
  "Володимир",
  "Володислав",
  "Всевлад",
  "Всеволод",
  "Всеслав",
  "Гаврило",
  "Гарнослав",
  "Геннадій",
  "Георгій",
  "Герасим",
  "Гліб",
  "Гнат",
  "Гордій",
  "Горимир",
  "Горислав",
  "Градимир",
  "Григорій",
  "Далемир",
  "Данило",
  "Дарій",
  "Даромир",
  "Денис",
  "Дмитро",
  "Добромир",
  "Добромисл",
  "Доброслав",
  "Євген",
  "Єремій",
  "Захар",
  "Захарій",
  "Зборислав",
  "Звенигор",
  "Звенимир",
  "Звенислав",
  "Земислав",
  "Зеновій",
  "Зиновій",
  "Злат",
  "Златомир",
  "Зоремир",
  "Зореслав",
  "Зорян",
  "Іван",
  "Ігор",
  "Ізяслав",
  "Ілля",
  "Кий",
  "Корнелій",
  "Корнилій",
  "Корнило",
  "Корній",
  "Костянтин",
  "Кузьма",
  "Лаврентій",
  "Лаврін",
  "Лад",
  "Ладислав",
  "Ладо",
  "Ладомир",
  "Левко",
  "Листвич",
  "Лук’ян",
  "Любодар",
  "Любозар",
  "Любомир",
  "Макар",
  "Максим",
  "Мар’ян",
  "Маркіян",
  "Марко",
  "Матвій",
  "Мечислав",
  "Микита",
  "Микола",
  "Мирон",
  "Мирослав",
  "Михайло",
  "Мстислав",
  "Мусій",
  "Назар",
  "Назарій",
  "Натан",
  "Немир",
  "Нестор",
  "Олег",
  "Олександр",
  "Олексій",
  "Олелько",
  "Олесь",
  "Омелян",
  "Орест",
  "Орхип",
  "Остап",
  "Охрім",
  "Павло",
  "Панас",
  "Пантелеймон",
  "Петро",
  "Пилип",
  "Подолян",
  "Потап",
  "Радим",
  "Радимир",
  "Ратибор",
  "Ратимир",
  "Родіон",
  "Родослав",
  "Роксолан",
  "Роман",
  "Ростислав",
  "Руслан",
  "Святополк",
  "Святослав",
  "Семибор",
  "Сергій",
  "Синьоок",
  "Славолюб",
  "Славомир",
  "Славута",
  "Сніжан",
  "Сологуб",
  "Станіслав",
  "Степан",
  "Стефаній",
  "Стожар",
  "Тарас",
  "Тиміш",
  "Тимофій",
  "Тихон",
  "Тур",
  "Устим",
  "Хвалимир",
  "Хорив",
  "Чорнота",
  "Щастислав",
  "Щек",
  "Юліан",
  "Юрій",
  "Юхим",
  "Ян",
  "Ярема",
  "Яровид",
  "Яромил",
  "Яромир",
  "Ярополк",
  "Ярослав"
];

},{}],882:[function(require,module,exports){
module["exports"] = [
  "Андрухович",
  "Бабух",
  "Балабан",
  "Балабух",
  "Балакун",
  "Балицький",
  "Бамбула",
  "Бандера",
  "Барановський",
  "Бачей",
  "Башук",
  "Бердник",
  "Білич",
  "Бондаренко",
  "Борецький",
  "Боровський",
  "Борочко",
  "Боярчук",
  "Брицький",
  "Бурмило",
  "Бутько",
  "Василин",
  "Василишин",
  "Васильківський",
  "Вергун",
  "Вередун",
  "Верещук",
  "Витребенько",
  "Вітряк",
  "Волощук",
  "Гайдук",
  "Гайовий",
  "Гайчук",
  "Галаєнко",
  "Галатей",
  "Галаціон",
  "Гаман",
  "Гамула",
  "Ганич",
  "Гарай",
  "Гарун",
  "Гладківський",
  "Гладух",
  "Глинський",
  "Гнатишин",
  "Гойко",
  "Головець",
  "Горбач",
  "Гордійчук",
  "Горовий",
  "Городоцький",
  "Гречко",
  "Григоришин",
  "Гриневецький",
  "Гриневський",
  "Гришко",
  "Громико",
  "Данилишин",
  "Данилко",
  "Демків",
  "Демчишин",
  "Дзюб’як",
  "Дзюба",
  "Дідух",
  "Дмитришин",
  "Дмитрук",
  "Довгалевський",
  "Дурдинець",
  "Євенко",
  "Євпак",
  "Ємець",
  "Єрмак",
  "Забіла",
  "Зварич",
  "Зінкевич",
  "Зленко",
  "Іванишин",
  "Іванів",
  "Іванців",
  "Калач",
  "Кандиба",
  "Карпух",
  "Каськів",
  "Кивач",
  "Коваленко",
  "Ковальський",
  "Коломієць",
  "Коман",
  "Компанієць",
  "Кононець",
  "Кордун",
  "Корецький",
  "Корнїйчук",
  "Коров’як",
  "Коцюбинський",
  "Кулинич",
  "Кульчицький",
  "Лагойда",
  "Лазірко",
  "Лановий",
  "Латаний",
  "Латанський",
  "Лахман",
  "Левадовський",
  "Ликович",
  "Линдик",
  "Ліхно",
  "Лобачевський",
  "Ломовий",
  "Луговий",
  "Луцький",
  "Луцьків",
  "Лученко",
  "Лучко",
  "Лютий",
  "Лящук",
  "Магера",
  "Мазайло",
  "Мазило",
  "Мазун",
  "Майборода",
  "Майстренко",
  "Маковецький",
  "Малкович",
  "Мамій",
  "Маринич",
  "Марієвський",
  "Марків",
  "Махно",
  "Миклашевський",
  "Миклухо",
  "Милославський",
  "Михайлюк",
  "Міняйло",
  "Могилевський",
  "Москаль",
  "Москалюк",
  "Мотрієнко",
  "Негода",
  "Ногачевський",
  "Опенько",
  "Осадко",
  "Павленко",
  "Павлишин",
  "Павлів",
  "Пагутяк",
  "Паламарчук",
  "Палій",
  "Паращук",
  "Пасічник",
  "Пендик",
  "Петик",
  "Петлюра",
  "Петренко",
  "Петрин",
  "Петришин",
  "Петрів",
  "Плаксій",
  "Погиба",
  "Поліщук",
  "Пономарів",
  "Поривай",
  "Поривайло",
  "Потебенько",
  "Потоцький",
  "Пригода",
  "Приймак",
  "Притула",
  "Прядун",
  "Розпутній",
  "Романишин",
  "Романів",
  "Ромей",
  "Роменець",
  "Ромочко",
  "Савицький",
  "Саєнко",
  "Свидригайло",
  "Семеночко",
  "Семещук",
  "Сердюк",
  "Силецький",
  "Сідлецький",
  "Сідляк",
  "Сірко",
  "Скиба",
  "Скоропадський",
  "Слободян",
  "Сосюра",
  "Сплюх",
  "Спотикач",
  "Стахів",
  "Степанець",
  "Стецьків",
  "Стигайло",
  "Сторожук",
  "Сторчак",
  "Стоян",
  "Сучак",
  "Сушко",
  "Тарасюк",
  "Тиндарей",
  "Ткаченко",
  "Третяк",
  "Троян",
  "Трублаєвський",
  "Трясило",
  "Трясун",
  "Уманець",
  "Унич",
  "Усич",
  "Федоришин",
  "Хитрово",
  "Цимбалістий",
  "Цушко",
  "Червоній",
  "Шамрило",
  "Шевченко",
  "Шестак",
  "Шиндарей",
  "Шиян",
  "Шкараба",
  "Шудрик",
  "Шумило",
  "Шупик",
  "Шухевич",
  "Щербак",
  "Юрчишин",
  "Юхно",
  "Ющик",
  "Ющук",
  "Яворівський",
  "Яловий",
  "Ялюк",
  "Янюк",
  "Ярмак",
  "Яцишин",
  "Яцьків",
  "Ящук"
];

},{}],883:[function(require,module,exports){
module["exports"] = [
  "Адамович",
  "Азарович",
  "Алевтинович",
  "Альбертович",
  "Анастасович",
  "Анатолійович",
  "Андрійович",
  "Антонович",
  "Аркадійович",
  "Арсенійович",
  "Арсенович",
  "Артемович",
  "Архипович",
  "Аскольдович",
  "Афанасійович",
  "Білославович",
  "Богданович",
  "Божемирович",
  "Боженович",
  "Болеславович",
  "Боримирович",
  "Борисович",
  "Бориславович",
  "Братиславович",
  "В’ячеславович",
  "Вадимович",
  "Валентинович",
  "Валерійович",
  "Васильович",
  "Вікторович",
  "Віталійович",
  "Владиславович",
  "Володимирович",
  "Всеволодович",
  "Всеславович",
  "Гаврилович",
  "Герасимович",
  "Георгійович",
  "Гнатович",
  "Гордійович",
  "Григорійович",
  "Данилович",
  "Даромирович",
  "Денисович",
  "Дмитрович",
  "Добромирович",
  "Доброславович",
  "Євгенович",
  "Захарович",
  "Захарійович",
  "Збориславович",
  "Звенимирович",
  "Звениславович",
  "Зеновійович",
  "Зиновійович",
  "Златомирович",
  "Зореславович",
  "Іванович",
  "Ігорович",
  "Ізяславович",
  "Корнелійович",
  "Корнилович",
  "Корнійович",
  "Костянтинович",
  "Лаврентійович",
  "Любомирович",
  "Макарович",
  "Максимович",
  "Маркович",
  "Маркіянович",
  "Матвійович",
  "Мечиславович",
  "Микитович",
  "Миколайович",
  "Миронович",
  "Мирославович",
  "Михайлович",
  "Мстиславович",
  "Назарович",
  "Назарійович",
  "Натанович",
  "Немирович",
  "Несторович",
  "Олегович",
  "Олександрович",
  "Олексійович",
  "Олелькович",
  "Омелянович",
  "Орестович",
  "Орхипович",
  "Остапович",
  "Охрімович",
  "Павлович",
  "Панасович",
  "Пантелеймонович",
  "Петрович",
  "Пилипович",
  "Радимирович",
  "Радимович",
  "Родіонович",
  "Романович",
  "Ростиславович",
  "Русланович",
  "Святославович",
  "Сергійович",
  "Славутович",
  "Станіславович",
  "Степанович",
  "Стефанович",
  "Тарасович",
  "Тимофійович",
  "Тихонович",
  "Устимович",
  "Юрійович",
  "Юхимович",
  "Ярославович"
];

},{}],884:[function(require,module,exports){
arguments[4][741][0].apply(exports,arguments)
},{"dup":741}],885:[function(require,module,exports){
module["exports"] = [
  "Пан",
  "Пані"
];

},{}],886:[function(require,module,exports){
module["exports"] = [
  "проф.",
  "доц.",
  "докт. пед. наук",
  "докт. політ. наук",
  "докт. філол. наук",
  "докт. філос. наук",
  "докт. і. наук",
  "докт. юрид. наук",
  "докт. техн. наук",
  "докт. психол. наук",
  "канд. пед. наук",
  "канд. політ. наук",
  "канд. філол. наук",
  "канд. філос. наук",
  "канд. і. наук",
  "канд. юрид. наук",
  "канд. техн. наук",
  "канд. психол. наук"
];

},{}],887:[function(require,module,exports){
module["exports"] = {
  "descriptor": [
    "Головний",
    "Генеральний",
    "Провідний",
    "Національний",
    "Регіональний",
    "Обласний",
    "Районний",
    "Глобальний",
    "Міжнародний",
    "Центральний"
  ],
  "level": [
    "маркетинговий",
    "оптимізаційний",
    "страховий",
    "функціональний",
    "інтеграційний",
    "логістичний"
  ],
  "job": [
    "інженер",
    "агент",
    "адміністратор",
    "аналітик",
    "архітектор",
    "дизайнер",
    "керівник",
    "консультант",
    "координатор",
    "менеджер",
    "планувальник",
    "помічник",
    "розробник",
    "спеціаліст",
    "співробітник",
    "технік"
  ]
};

},{}],888:[function(require,module,exports){
module["exports"] = [
  "(044) ###-##-##",
  "(050) ###-##-##",
  "(063) ###-##-##",
  "(066) ###-##-##",
  "(073) ###-##-##",
  "(091) ###-##-##",
  "(092) ###-##-##",
  "(093) ###-##-##",
  "(094) ###-##-##",
  "(095) ###-##-##",
  "(096) ###-##-##",
  "(097) ###-##-##",
  "(098) ###-##-##",
  "(099) ###-##-##"
];

},{}],889:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":888,"dup":85}],890:[function(require,module,exports){
module["exports"] = [
  "#{city_root}"
];

},{}],891:[function(require,module,exports){
module["exports"] = [
  "Bắc Giang",
  "Bắc Kạn",
  "Bắc Ninh",
  "Cao Bằng",
  "Điện Biên",
  "Hà Giang",
  "Hà Nam",
  "Hà Tây",
  "Hải Dương",
  "TP Hải Phòng",
  "Hòa Bình",
  "Hưng Yên",
  "Lai Châu",
  "Lào Cai",
  "Lạng Sơn",
  "Nam Định",
  "Ninh Bình",
  "Phú Thọ",
  "Quảng Ninh",
  "Sơn La",
  "Thái Bình",
  "Thái Nguyên",
  "Tuyên Quang",
  "Vĩnh Phúc",
  "Yên Bái",
  "TP Đà Nẵng",
  "Bình Định",
  "Đắk Lắk",
  "Đắk Nông",
  "Gia Lai",
  "Hà Tĩnh",
  "Khánh Hòa",
  "Kon Tum",
  "Nghệ An",
  "Phú Yên",
  "Quảng Bình",
  "Quảng Nam",
  "Quảng Ngãi",
  "Quảng Trị",
  "Thanh Hóa",
  "Thừa Thiên Huế",
  "TP TP. Hồ Chí Minh",
  "An Giang",
  "Bà Rịa Vũng Tàu",
  "Bạc Liêu",
  "Bến Tre",
  "Bình Dương",
  "Bình Phước",
  "Bình Thuận",
  "Cà Mau",
  "TP Cần Thơ",
  "Đồng Nai",
  "Đồng Tháp",
  "Hậu Giang",
  "Kiên Giang",
  "Lâm Đồng",
  "Long An",
  "Ninh Thuận",
  "Sóc Trăng",
  "Tây Ninh",
  "Tiền Giang",
  "Trà Vinh",
  "Vĩnh Long"
];

},{}],892:[function(require,module,exports){
module["exports"] = [
  "Avon",
  "Bedfordshire",
  "Berkshire",
  "Borders",
  "Buckinghamshire",
  "Cambridgeshire",
  "Central",
  "Cheshire",
  "Cleveland",
  "Clwyd",
  "Cornwall",
  "County Antrim",
  "County Armagh",
  "County Down",
  "County Fermanagh",
  "County Londonderry",
  "County Tyrone",
  "Cumbria",
  "Derbyshire",
  "Devon",
  "Dorset",
  "Dumfries and Galloway",
  "Durham",
  "Dyfed",
  "East Sussex",
  "Essex",
  "Fife",
  "Gloucestershire",
  "Grampian",
  "Greater Manchester",
  "Gwent",
  "Gwynedd County",
  "Hampshire",
  "Herefordshire",
  "Hertfordshire",
  "Highlands and Islands",
  "Humberside",
  "Isle of Wight",
  "Kent",
  "Lancashire",
  "Leicestershire",
  "Lincolnshire",
  "Lothian",
  "Merseyside",
  "Mid Glamorgan",
  "Norfolk",
  "North Yorkshire",
  "Northamptonshire",
  "Northumberland",
  "Nottinghamshire",
  "Oxfordshire",
  "Powys",
  "Rutland",
  "Shropshire",
  "Somerset",
  "South Glamorgan",
  "South Yorkshire",
  "Staffordshire",
  "Strathclyde",
  "Suffolk",
  "Surrey",
  "Tayside",
  "Tyne and Wear",
  "Việt Nam",
  "Warwickshire",
  "West Glamorgan",
  "West Midlands",
  "West Sussex",
  "West Yorkshire",
  "Wiltshire",
  "Worcestershire"
];

},{}],893:[function(require,module,exports){
module["exports"] = [
  "Việt Nam"
];

},{}],894:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_root = require("./city_root");
address.city = require("./city");
address.county = require("./county");
address.default_country = require("./default_country");

},{"./city":890,"./city_root":891,"./county":892,"./default_country":893}],895:[function(require,module,exports){
arguments[4][249][0].apply(exports,arguments)
},{"dup":249}],896:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"./formats":895,"dup":67}],897:[function(require,module,exports){
var company = {};
module['exports'] = company;
company.prefix = require("./prefix");
company.name = require("./name");

},{"./name":898,"./prefix":899}],898:[function(require,module,exports){
module["exports"] = [
  "#{prefix} #{Name.last_name}"
];

},{}],899:[function(require,module,exports){
module["exports"] = [
  "Công ty",
  "Cty TNHH",
  "Cty",
  "Cửa hàng",
  "Trung tâm",
  "Chi nhánh"
];

},{}],900:[function(require,module,exports){
var vi = {};
module['exports'] = vi;
vi.title = "Vietnamese";
vi.address = require("./address");
vi.internet = require("./internet");
vi.phone_number = require("./phone_number");
vi.cell_phone = require("./cell_phone");
vi.name = require("./name");
vi.company = require("./company");
vi.lorem = require("./lorem");

},{"./address":894,"./cell_phone":896,"./company":897,"./internet":902,"./lorem":903,"./name":906,"./phone_number":910}],901:[function(require,module,exports){
module["exports"] = [
  "com",
  "net",
  "info",
  "vn",
  "com.vn"
];

},{}],902:[function(require,module,exports){
arguments[4][126][0].apply(exports,arguments)
},{"./domain_suffix":901,"dup":126}],903:[function(require,module,exports){
arguments[4][76][0].apply(exports,arguments)
},{"./words":904,"dup":76}],904:[function(require,module,exports){
module["exports"] = [
  "đã",
  "đang",
  "ừ",
  "ờ",
  "á",
  "không",
  "biết",
  "gì",
  "hết",
  "đâu",
  "nha",
  "thế",
  "thì",
  "là",
  "đánh",
  "đá",
  "đập",
  "phá",
  "viết",
  "vẽ",
  "tô",
  "thuê",
  "mướn",
  "mượn",
  "mua",
  "một",
  "hai",
  "ba",
  "bốn",
  "năm",
  "sáu",
  "bảy",
  "tám",
  "chín",
  "mười",
  "thôi",
  "việc",
  "nghỉ",
  "làm",
  "nhà",
  "cửa",
  "xe",
  "đạp",
  "ác",
  "độc",
  "khoảng",
  "khoan",
  "thuyền",
  "tàu",
  "bè",
  "lầu",
  "xanh",
  "đỏ",
  "tím",
  "vàng",
  "kim",
  "chỉ",
  "khâu",
  "may",
  "vá",
  "em",
  "anh",
  "yêu",
  "thương",
  "thích",
  "con",
  "cái",
  "bàn",
  "ghế",
  "tủ",
  "quần",
  "áo",
  "nón",
  "dép",
  "giày",
  "lỗi",
  "được",
  "ghét",
  "giết",
  "chết",
  "hết",
  "tôi",
  "bạn",
  "tui",
  "trời",
  "trăng",
  "mây",
  "gió",
  "máy",
  "hàng",
  "hóa",
  "leo",
  "núi",
  "bơi",
  "biển",
  "chìm",
  "xuồng",
  "nước",
  "ngọt",
  "ruộng",
  "đồng",
  "quê",
  "hương"
];

},{}],905:[function(require,module,exports){
module["exports"] = [
  "Phạm",
  "Nguyễn",
  "Trần",
  "Lê",
  "Lý",
  "Hoàng",
  "Phan",
  "Vũ",
  "Tăng",
  "Đặng",
  "Bùi",
  "Đỗ",
  "Hồ",
  "Ngô",
  "Dương",
  "Đào",
  "Đoàn",
  "Vương",
  "Trịnh",
  "Đinh",
  "Lâm",
  "Phùng",
  "Mai",
  "Tô",
  "Trương",
  "Hà"
];

},{}],906:[function(require,module,exports){
var name = {};
module['exports'] = name;
name.first_name = require("./first_name");
name.last_name = require("./last_name");
name.name = require("./name");

},{"./first_name":905,"./last_name":907,"./name":908}],907:[function(require,module,exports){
module["exports"] = [
  "Nam",
  "Trung",
  "Thanh",
  "Thị",
  "Văn",
  "Dương",
  "Tăng",
  "Quốc",
  "Như",
  "Phạm",
  "Nguyễn",
  "Trần",
  "Lê",
  "Lý",
  "Hoàng",
  "Phan",
  "Vũ",
  "Tăng",
  "Đặng",
  "Bùi",
  "Đỗ",
  "Hồ",
  "Ngô",
  "Dương",
  "Đào",
  "Đoàn",
  "Vương",
  "Trịnh",
  "Đinh",
  "Lâm",
  "Phùng",
  "Mai",
  "Tô",
  "Trương",
  "Hà",
  "Vinh",
  "Nhung",
  "Hòa",
  "Tiến",
  "Tâm",
  "Bửu",
  "Loan",
  "Hiền",
  "Hải",
  "Vân",
  "Kha",
  "Minh",
  "Nhân",
  "Triệu",
  "Tuân",
  "Hữu",
  "Đức",
  "Phú",
  "Khoa",
  "Thắgn",
  "Sơn",
  "Dung",
  "Tú",
  "Trinh",
  "Thảo",
  "Sa",
  "Kim",
  "Long",
  "Thi",
  "Cường",
  "Ngọc",
  "Sinh",
  "Khang",
  "Phong",
  "Thắm",
  "Thu",
  "Thủy",
  "Nhàn"
];

},{}],908:[function(require,module,exports){
module["exports"] = [
  "#{first_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name}",
  "#{first_name} #{last_name} #{last_name} #{last_name}"
];

},{}],909:[function(require,module,exports){
arguments[4][254][0].apply(exports,arguments)
},{"dup":254}],910:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":909,"dup":85}],911:[function(require,module,exports){
module["exports"] = [
  "#####",
  "####",
  "###",
  "##",
  "#"
];

},{}],912:[function(require,module,exports){
arguments[4][789][0].apply(exports,arguments)
},{"dup":789}],913:[function(require,module,exports){
module["exports"] = [
  "长",
  "上",
  "南",
  "西",
  "北",
  "诸",
  "宁",
  "珠",
  "武",
  "衡",
  "成",
  "福",
  "厦",
  "贵",
  "吉",
  "海",
  "太",
  "济",
  "安",
  "吉",
  "包"
];

},{}],914:[function(require,module,exports){
module["exports"] = [
  "沙市",
  "京市",
  "宁市",
  "安市",
  "乡县",
  "海市",
  "码市",
  "汉市",
  "阳市",
  "都市",
  "州市",
  "门市",
  "阳市",
  "口市",
  "原市",
  "南市",
  "徽市",
  "林市",
  "头市"
];

},{}],915:[function(require,module,exports){
module["exports"] = [
  "中国"
];

},{}],916:[function(require,module,exports){
var address = {};
module['exports'] = address;
address.city_prefix = require("./city_prefix");
address.city_suffix = require("./city_suffix");
address.building_number = require("./building_number");
address.street_suffix = require("./street_suffix");
address.postcode = require("./postcode");
address.state = require("./state");
address.state_abbr = require("./state_abbr");
address.city = require("./city");
address.street_name = require("./street_name");
address.street_address = require("./street_address");
address.default_country = require("./default_country");

},{"./building_number":911,"./city":912,"./city_prefix":913,"./city_suffix":914,"./default_country":915,"./postcode":917,"./state":918,"./state_abbr":919,"./street_address":920,"./street_name":921,"./street_suffix":922}],917:[function(require,module,exports){
arguments[4][712][0].apply(exports,arguments)
},{"dup":712}],918:[function(require,module,exports){
module["exports"] = [
  "北京市",
  "上海市",
  "天津市",
  "重庆市",
  "黑龙江省",
  "吉林省",
  "辽宁省",
  "内蒙古",
  "河北省",
  "新疆",
  "甘肃省",
  "青海省",
  "陕西省",
  "宁夏",
  "河南省",
  "山东省",
  "山西省",
  "安徽省",
  "湖北省",
  "湖南省",
  "江苏省",
  "四川省",
  "贵州省",
  "云南省",
  "广西省",
  "西藏",
  "浙江省",
  "江西省",
  "广东省",
  "福建省",
  "台湾省",
  "海南省",
  "香港",
  "澳门"
];

},{}],919:[function(require,module,exports){
module["exports"] = [
  "京",
  "沪",
  "津",
  "渝",
  "黑",
  "吉",
  "辽",
  "蒙",
  "冀",
  "新",
  "甘",
  "青",
  "陕",
  "宁",
  "豫",
  "鲁",
  "晋",
  "皖",
  "鄂",
  "湘",
  "苏",
  "川",
  "黔",
  "滇",
  "桂",
  "藏",
  "浙",
  "赣",
  "粤",
  "闽",
  "台",
  "琼",
  "港",
  "澳"
];

},{}],920:[function(require,module,exports){
module["exports"] = [
  "#{street_name}#{building_number}号"
];

},{}],921:[function(require,module,exports){
module["exports"] = [
  "#{Name.last_name}#{street_suffix}"
];

},{}],922:[function(require,module,exports){
module["exports"] = [
  "巷",
  "街",
  "路",
  "桥",
  "侬",
  "旁",
  "中心",
  "栋"
];

},{}],923:[function(require,module,exports){
var zh_CN = {};
module['exports'] = zh_CN;
zh_CN.title = "Chinese";
zh_CN.address = require("./address");
zh_CN.name = require("./name");
zh_CN.phone_number = require("./phone_number");

},{"./address":916,"./name":925,"./phone_number":929}],924:[function(require,module,exports){
module["exports"] = [
  "王",
  "李",
  "张",
  "刘",
  "陈",
  "杨",
  "黄",
  "吴",
  "赵",
  "周",
  "徐",
  "孙",
  "马",
  "朱",
  "胡",
  "林",
  "郭",
  "何",
  "高",
  "罗",
  "郑",
  "梁",
  "谢",
  "宋",
  "唐",
  "许",
  "邓",
  "冯",
  "韩",
  "曹",
  "曾",
  "彭",
  "萧",
  "蔡",
  "潘",
  "田",
  "董",
  "袁",
  "于",
  "余",
  "叶",
  "蒋",
  "杜",
  "苏",
  "魏",
  "程",
  "吕",
  "丁",
  "沈",
  "任",
  "姚",
  "卢",
  "傅",
  "钟",
  "姜",
  "崔",
  "谭",
  "廖",
  "范",
  "汪",
  "陆",
  "金",
  "石",
  "戴",
  "贾",
  "韦",
  "夏",
  "邱",
  "方",
  "侯",
  "邹",
  "熊",
  "孟",
  "秦",
  "白",
  "江",
  "阎",
  "薛",
  "尹",
  "段",
  "雷",
  "黎",
  "史",
  "龙",
  "陶",
  "贺",
  "顾",
  "毛",
  "郝",
  "龚",
  "邵",
  "万",
  "钱",
  "严",
  "赖",
  "覃",
  "洪",
  "武",
  "莫",
  "孔"
];

},{}],925:[function(require,module,exports){
arguments[4][906][0].apply(exports,arguments)
},{"./first_name":924,"./last_name":926,"./name":927,"dup":906}],926:[function(require,module,exports){
module["exports"] = [
  "绍齐",
  "博文",
  "梓晨",
  "胤祥",
  "瑞霖",
  "明哲",
  "天翊",
  "凯瑞",
  "健雄",
  "耀杰",
  "潇然",
  "子涵",
  "越彬",
  "钰轩",
  "智辉",
  "致远",
  "俊驰",
  "雨泽",
  "烨磊",
  "晟睿",
  "文昊",
  "修洁",
  "黎昕",
  "远航",
  "旭尧",
  "鸿涛",
  "伟祺",
  "荣轩",
  "越泽",
  "浩宇",
  "瑾瑜",
  "皓轩",
  "擎苍",
  "擎宇",
  "志泽",
  "子轩",
  "睿渊",
  "弘文",
  "哲瀚",
  "雨泽",
  "楷瑞",
  "建辉",
  "晋鹏",
  "天磊",
  "绍辉",
  "泽洋",
  "鑫磊",
  "鹏煊",
  "昊强",
  "伟宸",
  "博超",
  "君浩",
  "子骞",
  "鹏涛",
  "炎彬",
  "鹤轩",
  "越彬",
  "风华",
  "靖琪",
  "明辉",
  "伟诚",
  "明轩",
  "健柏",
  "修杰",
  "志泽",
  "弘文",
  "峻熙",
  "嘉懿",
  "煜城",
  "懿轩",
  "烨伟",
  "苑博",
  "伟泽",
  "熠彤",
  "鸿煊",
  "博涛",
  "烨霖",
  "烨华",
  "煜祺",
  "智宸",
  "正豪",
  "昊然",
  "明杰",
  "立诚",
  "立轩",
  "立辉",
  "峻熙",
  "弘文",
  "熠彤",
  "鸿煊",
  "烨霖",
  "哲瀚",
  "鑫鹏",
  "昊天",
  "思聪",
  "展鹏",
  "笑愚",
  "志强",
  "炫明",
  "雪松",
  "思源",
  "智渊",
  "思淼",
  "晓啸",
  "天宇",
  "浩然",
  "文轩",
  "鹭洋",
  "振家",
  "乐驹",
  "晓博",
  "文博",
  "昊焱",
  "立果",
  "金鑫",
  "锦程",
  "嘉熙",
  "鹏飞",
  "子默",
  "思远",
  "浩轩",
  "语堂",
  "聪健",
  "明",
  "文",
  "果",
  "思",
  "鹏",
  "驰",
  "涛",
  "琪",
  "浩",
  "航",
  "彬"
];

},{}],927:[function(require,module,exports){
module["exports"] = [
  "#{first_name}#{last_name}"
];

},{}],928:[function(require,module,exports){
module["exports"] = [
  "###-########",
  "####-########",
  "###########"
];

},{}],929:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":928,"dup":85}],930:[function(require,module,exports){
arguments[4][405][0].apply(exports,arguments)
},{"dup":405}],931:[function(require,module,exports){
arguments[4][789][0].apply(exports,arguments)
},{"dup":789}],932:[function(require,module,exports){
module["exports"] = [
  "臺北",
  "新北",
  "桃園",
  "臺中",
  "臺南",
  "高雄",
  "基隆",
  "新竹",
  "嘉義",
  "苗栗",
  "彰化",
  "南投",
  "雲林",
  "屏東",
  "宜蘭",
  "花蓮",
  "臺東",
  "澎湖",
  "金門",
  "連江"
];

},{}],933:[function(require,module,exports){
module["exports"] = [
  "縣",
  "市"
];

},{}],934:[function(require,module,exports){
module["exports"] = [
  "Taiwan (R.O.C.)"
];

},{}],935:[function(require,module,exports){
arguments[4][916][0].apply(exports,arguments)
},{"./building_number":930,"./city":931,"./city_prefix":932,"./city_suffix":933,"./default_country":934,"./postcode":936,"./state":937,"./state_abbr":938,"./street_address":939,"./street_name":940,"./street_suffix":941,"dup":916}],936:[function(require,module,exports){
arguments[4][712][0].apply(exports,arguments)
},{"dup":712}],937:[function(require,module,exports){
module["exports"] = [
  "福建省",
  "台灣省"
];

},{}],938:[function(require,module,exports){
module["exports"] = [
  "北",
  "新北",
  "桃",
  "中",
  "南",
  "高",
  "基",
  "竹市",
  "嘉市",
  "竹縣",
  "苗",
  "彰",
  "投",
  "雲",
  "嘉縣",
  "宜",
  "花",
  "東",
  "澎",
  "金",
  "馬"
];

},{}],939:[function(require,module,exports){
module["exports"] = [
  "#{street_name}#{building_number}號"
];

},{}],940:[function(require,module,exports){
arguments[4][921][0].apply(exports,arguments)
},{"dup":921}],941:[function(require,module,exports){
module["exports"] = [
  "街",
  "路",
  "北路",
  "南路",
  "東路",
  "西路"
];

},{}],942:[function(require,module,exports){
var zh_TW = {};
module['exports'] = zh_TW;
zh_TW.title = "Chinese (Taiwan)";
zh_TW.address = require("./address");
zh_TW.name = require("./name");
zh_TW.phone_number = require("./phone_number");

},{"./address":935,"./name":944,"./phone_number":948}],943:[function(require,module,exports){
module["exports"] = [
  "王",
  "李",
  "張",
  "劉",
  "陳",
  "楊",
  "黃",
  "吳",
  "趙",
  "週",
  "徐",
  "孫",
  "馬",
  "朱",
  "胡",
  "林",
  "郭",
  "何",
  "高",
  "羅",
  "鄭",
  "梁",
  "謝",
  "宋",
  "唐",
  "許",
  "鄧",
  "馮",
  "韓",
  "曹",
  "曾",
  "彭",
  "蕭",
  "蔡",
  "潘",
  "田",
  "董",
  "袁",
  "於",
  "餘",
  "葉",
  "蔣",
  "杜",
  "蘇",
  "魏",
  "程",
  "呂",
  "丁",
  "沈",
  "任",
  "姚",
  "盧",
  "傅",
  "鐘",
  "姜",
  "崔",
  "譚",
  "廖",
  "範",
  "汪",
  "陸",
  "金",
  "石",
  "戴",
  "賈",
  "韋",
  "夏",
  "邱",
  "方",
  "侯",
  "鄒",
  "熊",
  "孟",
  "秦",
  "白",
  "江",
  "閻",
  "薛",
  "尹",
  "段",
  "雷",
  "黎",
  "史",
  "龍",
  "陶",
  "賀",
  "顧",
  "毛",
  "郝",
  "龔",
  "邵",
  "萬",
  "錢",
  "嚴",
  "賴",
  "覃",
  "洪",
  "武",
  "莫",
  "孔"
];

},{}],944:[function(require,module,exports){
arguments[4][906][0].apply(exports,arguments)
},{"./first_name":943,"./last_name":945,"./name":946,"dup":906}],945:[function(require,module,exports){
module["exports"] = [
  "紹齊",
  "博文",
  "梓晨",
  "胤祥",
  "瑞霖",
  "明哲",
  "天翊",
  "凱瑞",
  "健雄",
  "耀傑",
  "瀟然",
  "子涵",
  "越彬",
  "鈺軒",
  "智輝",
  "致遠",
  "俊馳",
  "雨澤",
  "燁磊",
  "晟睿",
  "文昊",
  "修潔",
  "黎昕",
  "遠航",
  "旭堯",
  "鴻濤",
  "偉祺",
  "榮軒",
  "越澤",
  "浩宇",
  "瑾瑜",
  "皓軒",
  "擎蒼",
  "擎宇",
  "志澤",
  "子軒",
  "睿淵",
  "弘文",
  "哲瀚",
  "雨澤",
  "楷瑞",
  "建輝",
  "晉鵬",
  "天磊",
  "紹輝",
  "澤洋",
  "鑫磊",
  "鵬煊",
  "昊強",
  "偉宸",
  "博超",
  "君浩",
  "子騫",
  "鵬濤",
  "炎彬",
  "鶴軒",
  "越彬",
  "風華",
  "靖琪",
  "明輝",
  "偉誠",
  "明軒",
  "健柏",
  "修傑",
  "志澤",
  "弘文",
  "峻熙",
  "嘉懿",
  "煜城",
  "懿軒",
  "燁偉",
  "苑博",
  "偉澤",
  "熠彤",
  "鴻煊",
  "博濤",
  "燁霖",
  "燁華",
  "煜祺",
  "智宸",
  "正豪",
  "昊然",
  "明杰",
  "立誠",
  "立軒",
  "立輝",
  "峻熙",
  "弘文",
  "熠彤",
  "鴻煊",
  "燁霖",
  "哲瀚",
  "鑫鵬",
  "昊天",
  "思聰",
  "展鵬",
  "笑愚",
  "志強",
  "炫明",
  "雪松",
  "思源",
  "智淵",
  "思淼",
  "曉嘯",
  "天宇",
  "浩然",
  "文軒",
  "鷺洋",
  "振家",
  "樂駒",
  "曉博",
  "文博",
  "昊焱",
  "立果",
  "金鑫",
  "錦程",
  "嘉熙",
  "鵬飛",
  "子默",
  "思遠",
  "浩軒",
  "語堂",
  "聰健"
];

},{}],946:[function(require,module,exports){
arguments[4][927][0].apply(exports,arguments)
},{"dup":927}],947:[function(require,module,exports){
module["exports"] = [
  "0#-#######",
  "02-########",
  "09##-######"
];

},{}],948:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"./formats":947,"dup":85}],949:[function(require,module,exports){

var Lorem = function (faker) {
  var self = this;
  var Helpers = faker.helpers;

  self.words = function (num) {
      if (typeof num == 'undefined') { num = 3; }
      return Helpers.shuffle(faker.definitions.lorem.words).slice(0, num);
  };

  self.sentence = function (wordCount, range) {
      if (typeof wordCount == 'undefined') { wordCount = 3; }
      if (typeof range == 'undefined') { range = 7; }

      // strange issue with the node_min_test failing for captialize, please fix and add faker.lorem.back
      //return  faker.lorem.words(wordCount + Helpers.randomNumber(range)).join(' ').capitalize();

      var sentence = faker.lorem.words(wordCount + faker.random.number(range)).join(' ');
      return sentence.charAt(0).toUpperCase() + sentence.slice(1) + '.';
  };

  self.sentences = function (sentenceCount) {
      if (typeof sentenceCount == 'undefined') { sentenceCount = 3; }
      var sentences = [];
      for (sentenceCount; sentenceCount > 0; sentenceCount--) {
        sentences.push(faker.lorem.sentence());
      }
      return sentences.join("\n");
  };

  self.paragraph = function (sentenceCount) {
      if (typeof sentenceCount == 'undefined') { sentenceCount = 3; }
      return faker.lorem.sentences(sentenceCount + faker.random.number(3));
  };

  self.paragraphs = function (paragraphCount, separator) {
    if (typeof separator === "undefined") {
      separator = "\n \r";
    }
    if (typeof paragraphCount == 'undefined') { paragraphCount = 3; }
    var paragraphs = [];
    for (paragraphCount; paragraphCount > 0; paragraphCount--) {
        paragraphs.push(faker.lorem.paragraph());
    }
    return paragraphs.join(separator);
  }
  
  return self;
};


module["exports"] = Lorem;

},{}],950:[function(require,module,exports){
function Name (faker) {

  this.firstName = function (gender) {
    if (typeof faker.definitions.name.male_first_name !== "undefined" && typeof faker.definitions.name.female_first_name !== "undefined") {
      // some locale datasets ( like ru ) have first_name split by gender. since the name.first_name field does not exist in these datasets,
      // we must randomly pick a name from either gender array so faker.name.firstName will return the correct locale data ( and not fallback )
      if (typeof gender !== 'number') {
        gender = faker.random.number(1);
      }
      if (gender === 0) {
        return faker.random.arrayElement(faker.locales[faker.locale].name.male_first_name)
      } else {
        return faker.random.arrayElement(faker.locales[faker.locale].name.female_first_name);
      }
    }
    return faker.random.arrayElement(faker.definitions.name.first_name);
  };

  this.lastName = function (gender) {
    if (typeof faker.definitions.name.male_last_name !== "undefined" && typeof faker.definitions.name.female_last_name !== "undefined") {
      // some locale datasets ( like ru ) have last_name split by gender. i have no idea how last names can have genders, but also i do not speak russian
      // see above comment of firstName method
      if (typeof gender !== 'number') {
        gender = faker.random.number(1);
      }
      if (gender === 0) {
        return faker.random.arrayElement(faker.locales[faker.locale].name.male_last_name);
      } else {
        return faker.random.arrayElement(faker.locales[faker.locale].name.female_last_name);
      }
    }
    return faker.random.arrayElement(faker.definitions.name.last_name);
  };

  this.findName = function (firstName, lastName, gender) {
      var r = faker.random.number(8);
      var prefix, suffix;
      // in particular locales first and last names split by gender,
      // thus we keep consistency by passing 0 as male and 1 as female
      if (typeof gender !== 'number') {
        gender = faker.random.number(1);
      }
      firstName = firstName || faker.name.firstName(gender);
      lastName = lastName || faker.name.lastName(gender);
      switch (r) {
      case 0:
          prefix = faker.name.prefix();
          if (prefix) {
              return prefix + " " + firstName + " " + lastName;
          }
      case 1:
          suffix = faker.name.prefix();
          if (suffix) {
              return firstName + " " + lastName + " " + suffix;
          }
      }

      return firstName + " " + lastName;
  };

  this.jobTitle = function () {
    return  faker.name.jobDescriptor() + " " +
      faker.name.jobArea() + " " +
      faker.name.jobType();
  };

  this.prefix = function () {
      return faker.random.arrayElement(faker.definitions.name.prefix);
  };

  this.suffix = function () {
      return faker.random.arrayElement(faker.definitions.name.suffix);
  };

  this.title = function() {
      var descriptor  = faker.random.arrayElement(faker.definitions.name.title.descriptor),
          level       = faker.random.arrayElement(faker.definitions.name.title.level),
          job         = faker.random.arrayElement(faker.definitions.name.title.job);

      return descriptor + " " + level + " " + job;
  };

  this.jobDescriptor = function () {
    return faker.random.arrayElement(faker.definitions.name.title.descriptor);
  };

  this.jobArea = function () {
    return faker.random.arrayElement(faker.definitions.name.title.level);
  };

  this.jobType = function () {
    return faker.random.arrayElement(faker.definitions.name.title.job);
  };

}

module['exports'] = Name;
},{}],951:[function(require,module,exports){
var Phone = function (faker) {
  var self = this;

  self.phoneNumber = function (format) {
      format = format || faker.phone.phoneFormats();
      return faker.helpers.replaceSymbolWithNumber(format);
  };

  // FIXME: this is strange passing in an array index.
  self.phoneNumberFormat = function (phoneFormatsArrayIndex) {
      phoneFormatsArrayIndex = phoneFormatsArrayIndex || 0;
      return faker.helpers.replaceSymbolWithNumber(faker.definitions.phone_number.formats[phoneFormatsArrayIndex]);
  };

  self.phoneFormats = function () {
    return faker.random.arrayElement(faker.definitions.phone_number.formats);
  };
  
  return self;

};

module['exports'] = Phone;
},{}],952:[function(require,module,exports){
var mersenne = require('../vendor/mersenne');

function Random (faker, seed) {
  // Use a user provided seed if it exists
  if (seed) {
    if (Array.isArray(seed) && seed.length) {
      mersenne.seed_array(seed);
    }
    else {
      mersenne.seed(seed);
    }
  }
  // returns a single random number based on a max number or range
  this.number = function (options) {

    if (typeof options === "number") {
      options = {
        max: options
      };
    }

    options = options || {};

    if (typeof options.min === "undefined") {
      options.min = 0;
    }

    if (typeof options.max === "undefined") {
      options.max = 99999;
    }
    if (typeof options.precision === "undefined") {
      options.precision = 1;
    }

    // Make the range inclusive of the max value
    var max = options.max;
    if (max >= 0) {
      max += options.precision;
    }

    var randomNumber = options.precision * Math.floor(
      mersenne.rand(max / options.precision, options.min / options.precision));

    return randomNumber;

  }

  // takes an array and returns a random element of the array
  this.arrayElement = function (array) {
      array = array || ["a", "b", "c"];
      var r = faker.random.number({ max: array.length - 1 });
      return array[r];
  }

  // takes an object and returns the randomly key or value
  this.objectElement = function (object, field) {
      object = object || { "foo": "bar", "too": "car" };
      var array = Object.keys(object);
      var key = faker.random.arrayElement(array);

      return field === "key" ? key : object[key];
  }

  this.uuid = function () {
      var RFC4122_TEMPLATE = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';
      var replacePlaceholders = function (placeholder) {
          var random = Math.random()*16|0;
          var value = placeholder == 'x' ? random : (random &0x3 | 0x8);
          return value.toString(16);
      };
      return RFC4122_TEMPLATE.replace(/[xy]/g, replacePlaceholders);
  }

  this.boolean =function () {
      return !!faker.random.number(1)
  }

  return this;

}

module['exports'] = Random;



// module.exports = random;

},{"../vendor/mersenne":953}],953:[function(require,module,exports){
// this program is a JavaScript version of Mersenne Twister, with concealment and encapsulation in class,
// an almost straight conversion from the original program, mt19937ar.c,
// translated by y. okada on July 17, 2006.
// and modified a little at july 20, 2006, but there are not any substantial differences.
// in this program, procedure descriptions and comments of original source code were not removed.
// lines commented with //c// were originally descriptions of c procedure. and a few following lines are appropriate JavaScript descriptions.
// lines commented with /* and */ are original comments.
// lines commented with // are additional comments in this JavaScript version.
// before using this version, create at least one instance of MersenneTwister19937 class, and initialize the each state, given below in c comments, of all the instances.
/*
   A C-program for MT19937, with initialization improved 2002/1/26.
   Coded by Takuji Nishimura and Makoto Matsumoto.

   Before using, initialize the state by using init_genrand(seed)
   or init_by_array(init_key, key_length).

   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,
   All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

     1. Redistributions of source code must retain the above copyright
        notice, this list of conditions and the following disclaimer.

     2. Redistributions in binary form must reproduce the above copyright
        notice, this list of conditions and the following disclaimer in the
        documentation and/or other materials provided with the distribution.

     3. The names of its contributors may not be used to endorse or promote
        products derived from this software without specific prior written
        permission.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


   Any feedback is very welcome.
   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html
   email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)
*/

function MersenneTwister19937()
{
	/* constants should be scoped inside the class */
	var N, M, MATRIX_A, UPPER_MASK, LOWER_MASK;
	/* Period parameters */
	//c//#define N 624
	//c//#define M 397
	//c//#define MATRIX_A 0x9908b0dfUL   /* constant vector a */
	//c//#define UPPER_MASK 0x80000000UL /* most significant w-r bits */
	//c//#define LOWER_MASK 0x7fffffffUL /* least significant r bits */
	N = 624;
	M = 397;
	MATRIX_A = 0x9908b0df;   /* constant vector a */
	UPPER_MASK = 0x80000000; /* most significant w-r bits */
	LOWER_MASK = 0x7fffffff; /* least significant r bits */
	//c//static unsigned long mt[N]; /* the array for the state vector  */
	//c//static int mti=N+1; /* mti==N+1 means mt[N] is not initialized */
	var mt = new Array(N);   /* the array for the state vector  */
	var mti = N+1;           /* mti==N+1 means mt[N] is not initialized */

	function unsigned32 (n1) // returns a 32-bits unsiged integer from an operand to which applied a bit operator.
	{
		return n1 < 0 ? (n1 ^ UPPER_MASK) + UPPER_MASK : n1;
	}

	function subtraction32 (n1, n2) // emulates lowerflow of a c 32-bits unsiged integer variable, instead of the operator -. these both arguments must be non-negative integers expressible using unsigned 32 bits.
	{
		return n1 < n2 ? unsigned32((0x100000000 - (n2 - n1)) & 0xffffffff) : n1 - n2;
	}

	function addition32 (n1, n2) // emulates overflow of a c 32-bits unsiged integer variable, instead of the operator +. these both arguments must be non-negative integers expressible using unsigned 32 bits.
	{
		return unsigned32((n1 + n2) & 0xffffffff)
	}

	function multiplication32 (n1, n2) // emulates overflow of a c 32-bits unsiged integer variable, instead of the operator *. these both arguments must be non-negative integers expressible using unsigned 32 bits.
	{
		var sum = 0;
		for (var i = 0; i < 32; ++i){
			if ((n1 >>> i) & 0x1){
				sum = addition32(sum, unsigned32(n2 << i));
			}
		}
		return sum;
	}

	/* initializes mt[N] with a seed */
	//c//void init_genrand(unsigned long s)
	this.init_genrand = function (s)
	{
		//c//mt[0]= s & 0xffffffff;
		mt[0]= unsigned32(s & 0xffffffff);
		for (mti=1; mti<N; mti++) {
			mt[mti] =
			//c//(1812433253 * (mt[mti-1] ^ (mt[mti-1] >> 30)) + mti);
			addition32(multiplication32(1812433253, unsigned32(mt[mti-1] ^ (mt[mti-1] >>> 30))), mti);
			/* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */
			/* In the previous versions, MSBs of the seed affect   */
			/* only MSBs of the array mt[].                        */
			/* 2002/01/09 modified by Makoto Matsumoto             */
			//c//mt[mti] &= 0xffffffff;
			mt[mti] = unsigned32(mt[mti] & 0xffffffff);
			/* for >32 bit machines */
		}
	}

	/* initialize by an array with array-length */
	/* init_key is the array for initializing keys */
	/* key_length is its length */
	/* slight change for C++, 2004/2/26 */
	//c//void init_by_array(unsigned long init_key[], int key_length)
	this.init_by_array = function (init_key, key_length)
	{
		//c//int i, j, k;
		var i, j, k;
		//c//init_genrand(19650218);
		this.init_genrand(19650218);
		i=1; j=0;
		k = (N>key_length ? N : key_length);
		for (; k; k--) {
			//c//mt[i] = (mt[i] ^ ((mt[i-1] ^ (mt[i-1] >> 30)) * 1664525))
			//c//	+ init_key[j] + j; /* non linear */
			mt[i] = addition32(addition32(unsigned32(mt[i] ^ multiplication32(unsigned32(mt[i-1] ^ (mt[i-1] >>> 30)), 1664525)), init_key[j]), j);
			mt[i] =
			//c//mt[i] &= 0xffffffff; /* for WORDSIZE > 32 machines */
			unsigned32(mt[i] & 0xffffffff);
			i++; j++;
			if (i>=N) { mt[0] = mt[N-1]; i=1; }
			if (j>=key_length) j=0;
		}
		for (k=N-1; k; k--) {
			//c//mt[i] = (mt[i] ^ ((mt[i-1] ^ (mt[i-1] >> 30)) * 1566083941))
			//c//- i; /* non linear */
			mt[i] = subtraction32(unsigned32((dbg=mt[i]) ^ multiplication32(unsigned32(mt[i-1] ^ (mt[i-1] >>> 30)), 1566083941)), i);
			//c//mt[i] &= 0xffffffff; /* for WORDSIZE > 32 machines */
			mt[i] = unsigned32(mt[i] & 0xffffffff);
			i++;
			if (i>=N) { mt[0] = mt[N-1]; i=1; }
		}
		mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */
	}

    /* moved outside of genrand_int32() by jwatte 2010-11-17; generate less garbage */
    var mag01 = [0x0, MATRIX_A];

	/* generates a random number on [0,0xffffffff]-interval */
	//c//unsigned long genrand_int32(void)
	this.genrand_int32 = function ()
	{
		//c//unsigned long y;
		//c//static unsigned long mag01[2]={0x0UL, MATRIX_A};
		var y;
		/* mag01[x] = x * MATRIX_A  for x=0,1 */

		if (mti >= N) { /* generate N words at one time */
			//c//int kk;
			var kk;

			if (mti == N+1)   /* if init_genrand() has not been called, */
				//c//init_genrand(5489); /* a default initial seed is used */
				this.init_genrand(5489); /* a default initial seed is used */

			for (kk=0;kk<N-M;kk++) {
				//c//y = (mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK);
				//c//mt[kk] = mt[kk+M] ^ (y >> 1) ^ mag01[y & 0x1];
				y = unsigned32((mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK));
				mt[kk] = unsigned32(mt[kk+M] ^ (y >>> 1) ^ mag01[y & 0x1]);
			}
			for (;kk<N-1;kk++) {
				//c//y = (mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK);
				//c//mt[kk] = mt[kk+(M-N)] ^ (y >> 1) ^ mag01[y & 0x1];
				y = unsigned32((mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK));
				mt[kk] = unsigned32(mt[kk+(M-N)] ^ (y >>> 1) ^ mag01[y & 0x1]);
			}
			//c//y = (mt[N-1]&UPPER_MASK)|(mt[0]&LOWER_MASK);
			//c//mt[N-1] = mt[M-1] ^ (y >> 1) ^ mag01[y & 0x1];
			y = unsigned32((mt[N-1]&UPPER_MASK)|(mt[0]&LOWER_MASK));
			mt[N-1] = unsigned32(mt[M-1] ^ (y >>> 1) ^ mag01[y & 0x1]);
			mti = 0;
		}

		y = mt[mti++];

		/* Tempering */
		//c//y ^= (y >> 11);
		//c//y ^= (y << 7) & 0x9d2c5680;
		//c//y ^= (y << 15) & 0xefc60000;
		//c//y ^= (y >> 18);
		y = unsigned32(y ^ (y >>> 11));
		y = unsigned32(y ^ ((y << 7) & 0x9d2c5680));
		y = unsigned32(y ^ ((y << 15) & 0xefc60000));
		y = unsigned32(y ^ (y >>> 18));

		return y;
	}

	/* generates a random number on [0,0x7fffffff]-interval */
	//c//long genrand_int31(void)
	this.genrand_int31 = function ()
	{
		//c//return (genrand_int32()>>1);
		return (this.genrand_int32()>>>1);
	}

	/* generates a random number on [0,1]-real-interval */
	//c//double genrand_real1(void)
	this.genrand_real1 = function ()
	{
		//c//return genrand_int32()*(1.0/4294967295.0);
		return this.genrand_int32()*(1.0/4294967295.0);
		/* divided by 2^32-1 */
	}

	/* generates a random number on [0,1)-real-interval */
	//c//double genrand_real2(void)
	this.genrand_real2 = function ()
	{
		//c//return genrand_int32()*(1.0/4294967296.0);
		return this.genrand_int32()*(1.0/4294967296.0);
		/* divided by 2^32 */
	}

	/* generates a random number on (0,1)-real-interval */
	//c//double genrand_real3(void)
	this.genrand_real3 = function ()
	{
		//c//return ((genrand_int32()) + 0.5)*(1.0/4294967296.0);
		return ((this.genrand_int32()) + 0.5)*(1.0/4294967296.0);
		/* divided by 2^32 */
	}

	/* generates a random number on [0,1) with 53-bit resolution*/
	//c//double genrand_res53(void)
	this.genrand_res53 = function ()
	{
		//c//unsigned long a=genrand_int32()>>5, b=genrand_int32()>>6;
		var a=this.genrand_int32()>>>5, b=this.genrand_int32()>>>6;
		return(a*67108864.0+b)*(1.0/9007199254740992.0);
	}
	/* These real versions are due to Isaku Wada, 2002/01/09 added */
}

//  Exports: Public API

//  Export the twister class
exports.MersenneTwister19937 = MersenneTwister19937;

//  Export a simplified function to generate random numbers
var gen = new MersenneTwister19937;
gen.init_genrand((new Date).getTime() % 1000000000);

// Added max, min range functionality, Marak Squires Sept 11 2014
exports.rand = function(max, min) {
    if (max === undefined)
        {
        min = 0;
        max = 32768;
        }
    return Math.floor(gen.genrand_real2() * (max - min) + min);
}
exports.seed = function(S) {
    if (typeof(S) != 'number')
        {
        throw new Error("seed(S) must take numeric argument; is " + typeof(S));
        }
    gen.init_genrand(S);
}
exports.seed_array = function(A) {
    if (typeof(A) != 'object')
        {
        throw new Error("seed_array(A) must take array of numbers; is " + typeof(A));
        }
    gen.init_by_array(A);
}

},{}],954:[function(require,module,exports){
/*
 * password-generator
 * Copyright(c) 2011-2013 Bermi Ferrer <bermi@bermilabs.com>
 * MIT Licensed
 */
(function (root) {

  var localName, consonant, letter, password, vowel;
  letter = /[a-zA-Z]$/;
  vowel = /[aeiouAEIOU]$/;
  consonant = /[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]$/;


  // Defines the name of the local variable the passwordGenerator library will use
  // this is specially useful if window.passwordGenerator is already being used
  // by your application and you want a different name. For example:
  //    // Declare before including the passwordGenerator library
  //    var localPasswordGeneratorLibraryName = 'pass';
  localName = root.localPasswordGeneratorLibraryName || "generatePassword",

  password = function (length, memorable, pattern, prefix) {
    var char, n;
    if (length == null) {
      length = 10;
    }
    if (memorable == null) {
      memorable = true;
    }
    if (pattern == null) {
      pattern = /\w/;
    }
    if (prefix == null) {
      prefix = '';
    }
    if (prefix.length >= length) {
      return prefix;
    }
    if (memorable) {
      if (prefix.match(consonant)) {
        pattern = vowel;
      } else {
        pattern = consonant;
      }
    }
    n = Math.floor(Math.random() * 94) + 33;
    char = String.fromCharCode(n);
    if (memorable) {
      char = char.toLowerCase();
    }
    if (!char.match(pattern)) {
      return password(length, memorable, pattern, prefix);
    }
    return password(length, memorable, pattern, "" + prefix + char);
  };


  ((typeof exports !== 'undefined') ? exports : root)[localName] = password;
  if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
      module.exports = password;
    }
  }

  // Establish the root object, `window` in the browser, or `global` on the server.
}(this));
},{}],955:[function(require,module,exports){
/*

Copyright (c) 2012-2014 Jeffrey Mealo

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
documentation files (the "Software"), to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and
to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

------------------------------------------------------------------------------------------------------------------------

Based loosely on Luka Pusic's PHP Script: http://360percents.com/posts/php-random-user-agent-generator/

The license for that script is as follows:

"THE BEER-WARE LICENSE" (Revision 42):

<pusic93@gmail.com> wrote this file. As long as you retain this notice you can do whatever you want with this stuff.
If we meet some day, and you think this stuff is worth it, you can buy me a beer in return. Luka Pusic
*/

function rnd(a, b) {
    //calling rnd() with no arguments is identical to rnd(0, 100)
    a = a || 0;
    b = b || 100;

    if (typeof b === 'number' && typeof a === 'number') {
        //rnd(int min, int max) returns integer between min, max
        return (function (min, max) {
            if (min > max) {
                throw new RangeError('expected min <= max; got min = ' + min + ', max = ' + max);
            }
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }(a, b));
    }

    if (Object.prototype.toString.call(a) === "[object Array]") {
        //returns a random element from array (a), even weighting
        return a[Math.floor(Math.random() * a.length)];
    }

    if (a && typeof a === 'object') {
        //returns a random key from the passed object; keys are weighted by the decimal probability in their value
        return (function (obj) {
            var rand = rnd(0, 100) / 100, min = 0, max = 0, key, return_val;

            for (key in obj) {
                if (obj.hasOwnProperty(key)) {
                    max = obj[key] + min;
                    return_val = key;
                    if (rand >= min && rand <= max) {
                        break;
                    }
                    min = min + obj[key];
                }
            }

            return return_val;
        }(a));
    }

    throw new TypeError('Invalid arguments passed to rnd. (' + (b ? a + ', ' + b : a) + ')');
}

function randomLang() {
    return rnd(['AB', 'AF', 'AN', 'AR', 'AS', 'AZ', 'BE', 'BG', 'BN', 'BO', 'BR', 'BS', 'CA', 'CE', 'CO', 'CS',
                'CU', 'CY', 'DA', 'DE', 'EL', 'EN', 'EO', 'ES', 'ET', 'EU', 'FA', 'FI', 'FJ', 'FO', 'FR', 'FY',
                'GA', 'GD', 'GL', 'GV', 'HE', 'HI', 'HR', 'HT', 'HU', 'HY', 'ID', 'IS', 'IT', 'JA', 'JV', 'KA',
                'KG', 'KO', 'KU', 'KW', 'KY', 'LA', 'LB', 'LI', 'LN', 'LT', 'LV', 'MG', 'MK', 'MN', 'MO', 'MS',
                'MT', 'MY', 'NB', 'NE', 'NL', 'NN', 'NO', 'OC', 'PL', 'PT', 'RM', 'RO', 'RU', 'SC', 'SE', 'SK',
                'SL', 'SO', 'SQ', 'SR', 'SV', 'SW', 'TK', 'TR', 'TY', 'UK', 'UR', 'UZ', 'VI', 'VO', 'YI', 'ZH']);
}

function randomBrowserAndOS() {
    var browser = rnd({
        chrome:    .45132810566,
        iexplorer: .27477061836,
        firefox:   .19384170608,
        safari:    .06186781118,
        opera:     .01574236955
    }),
    os = {
        chrome:  {win: .89,  mac: .09 , lin: .02},
        firefox: {win: .83,  mac: .16,  lin: .01},
        opera:   {win: .91,  mac: .03 , lin: .06},
        safari:  {win: .04 , mac: .96  },
        iexplorer: ['win']
    };

    return [browser, rnd(os[browser])];
}

function randomProc(arch) {
    var procs = {
        lin:['i686', 'x86_64'],
        mac: {'Intel' : .48, 'PPC': .01, 'U; Intel':.48, 'U; PPC' :.01},
        win:['', 'WOW64', 'Win64; x64']
    };
    return rnd(procs[arch]);
}

function randomRevision(dots) {
    var return_val = '';
    //generate a random revision
    //dots = 2 returns .x.y where x & y are between 0 and 9
    for (var x = 0; x < dots; x++) {
        return_val += '.' + rnd(0, 9);
    }
    return return_val;
}

var version_string = {
    net: function () {
        return [rnd(1, 4), rnd(0, 9), rnd(10000, 99999), rnd(0, 9)].join('.');
    },
    nt: function () {
        return rnd(5, 6) + '.' + rnd(0, 3);
    },
    ie: function () {
        return rnd(7, 11);
    },
    trident: function () {
        return rnd(3, 7) + '.' + rnd(0, 1);
    },
    osx: function (delim) {
        return [10, rnd(5, 10), rnd(0, 9)].join(delim || '.');
    },
    chrome: function () {
        return [rnd(13, 39), 0, rnd(800, 899), 0].join('.');
    },
    presto: function () {
        return '2.9.' + rnd(160, 190);
    },
    presto2: function () {
        return rnd(10, 12) + '.00';
    },
    safari: function () {
        return rnd(531, 538) + '.' + rnd(0, 2) + '.' + rnd(0,2);
    }
};

var browser = {
    firefox: function firefox(arch) {
        //https://developer.mozilla.org/en-US/docs/Gecko_user_agent_string_reference
        var firefox_ver = rnd(5, 15) + randomRevision(2),
            gecko_ver = 'Gecko/20100101 Firefox/' + firefox_ver,
            proc = randomProc(arch),
            os_ver = (arch === 'win') ? '(Windows NT ' + version_string.nt() + ((proc) ? '; ' + proc : '')
            : (arch === 'mac') ? '(Macintosh; ' + proc + ' Mac OS X ' + version_string.osx()
            : '(X11; Linux ' + proc;

        return 'Mozilla/5.0 ' + os_ver + '; rv:' + firefox_ver.slice(0, -2) + ') ' + gecko_ver;
    },

    iexplorer: function iexplorer() {
        var ver = version_string.ie();

        if (ver >= 11) {
            //http://msdn.microsoft.com/en-us/library/ie/hh869301(v=vs.85).aspx
            return 'Mozilla/5.0 (Windows NT 6.' + rnd(1,3) + '; Trident/7.0; ' + rnd(['Touch; ', '']) + 'rv:11.0) like Gecko';
        }

        //http://msdn.microsoft.com/en-us/library/ie/ms537503(v=vs.85).aspx
        return 'Mozilla/5.0 (compatible; MSIE ' + ver + '.0; Windows NT ' + version_string.nt() + '; Trident/' +
            version_string.trident() + ((rnd(0, 1) === 1) ? '; .NET CLR ' + version_string.net() : '') + ')';
    },

    opera: function opera(arch) {
        //http://www.opera.com/docs/history/
        var presto_ver = ' Presto/' + version_string.presto() + ' Version/' + version_string.presto2() + ')',
            os_ver = (arch === 'win') ? '(Windows NT ' + version_string.nt() + '; U; ' + randomLang() + presto_ver
            : (arch === 'lin') ? '(X11; Linux ' + randomProc(arch) + '; U; ' + randomLang() + presto_ver
            : '(Macintosh; Intel Mac OS X ' + version_string.osx() + ' U; ' + randomLang() + ' Presto/' +
            version_string.presto() + ' Version/' + version_string.presto2() + ')';

        return 'Opera/' + rnd(9, 14) + '.' + rnd(0, 99) + ' ' + os_ver;
    },

    safari: function safari(arch) {
        var safari = version_string.safari(),
            ver = rnd(4, 7) + '.' + rnd(0,1) + '.' + rnd(0,10),
            os_ver = (arch === 'mac') ? '(Macintosh; ' + randomProc('mac') + ' Mac OS X '+ version_string.osx('_') + ' rv:' + rnd(2, 6) + '.0; '+ randomLang() + ') '
            : '(Windows; U; Windows NT ' + version_string.nt() + ')';

        return 'Mozilla/5.0 ' + os_ver + 'AppleWebKit/' + safari + ' (KHTML, like Gecko) Version/' + ver + ' Safari/' + safari;
    },

    chrome: function chrome(arch) {
        var safari = version_string.safari(),
            os_ver = (arch === 'mac') ? '(Macintosh; ' + randomProc('mac') + ' Mac OS X ' + version_string.osx('_') + ') '
            : (arch === 'win') ? '(Windows; U; Windows NT ' + version_string.nt() + ')'
            : '(X11; Linux ' + randomProc(arch);

        return 'Mozilla/5.0 ' + os_ver + ' AppleWebKit/' + safari + ' (KHTML, like Gecko) Chrome/' + version_string.chrome() + ' Safari/' + safari;
    }
};

exports.generate = function generate() {
    var random = randomBrowserAndOS();
    return browser[random[0]](random[1]);
};

},{}],956:[function(require,module,exports){
var ret = require('ret');
var DRange = require('discontinuous-range');
var types = ret.types;


/**
 * If code is alphabetic, converts to other case.
 * If not alphabetic, returns back code.
 *
 * @param {Number} code
 * @return {Number}
 */
function toOtherCase(code) {
  return code + (97 <= code && code <= 122 ? -32 :
                 65 <= code && code <= 90  ?  32 : 0);
}


/**
 * Randomly returns a true or false value.
 *
 * @return {Boolean}
 */
function randBool() {
  return !this.randInt(0, 1);
};


/**
 * Randomly selects and returns a value from the array.
 *
 * @param {Array.<Object>} arr
 * @return {Object}
 */
function randSelect(arr) {
  if (arr instanceof DRange) {
    return arr.index(this.randInt(0, arr.length - 1));
  }
  return arr[this.randInt(0, arr.length - 1)];
};


/**
 * Determines if a character code is alphabetic and decide
 * to switch case randomly.
 *
 * @param {Number} code
 * @param {Boolean} ignoreCase
 * @return {String}
 */
function char(code, ignoreCase) {
  code = ignoreCase && randBool.call(this) ? toOtherCase(code) : code;
  return String.fromCharCode(code);
};


/**
 * expands a token to a DiscontinuousRange of characters which has a 
 * length and an index function (for random selecting)
 *
 * @param {Object} token
 * @return {DiscontinuousRange}
 */
function expand(token) {
  if (token.type === ret.types.CHAR) return new DRange(token.value);
  if (token.type === ret.types.RANGE) return new DRange(token.from, token.to);
  if (token.type === ret.types.SET) {
    var drange = new DRange();
    for (var i = 0; i < token.set.length; i++) {
      drange.add(expand.call(this, token.set[i]));
    }
    if (token.not) {
      return this.defaultRange.clone().subtract(drange);
    } else {
      return drange;
    }
  }
  throw new Error('unexpandable token type: ' + token.type);
};


/**
 * @constructor
 * @param {RegExp|String} regexp
 * @param {String} m
 */
var RandExp = module.exports = function(regexp, m) {
  this.defaultRange = this.defaultRange.clone();
  if (regexp instanceof RegExp) {
    this.ignoreCase = regexp.ignoreCase;
    this.multiline = regexp.multiline;
    if (typeof regexp.max === 'number') {
      this.max = regexp.max;
    }
    regexp = regexp.source;

  } else if (typeof regexp === 'string') {
    this.ignoreCase = m && m.indexOf('i') !== -1;
    this.multiline = m && m.indexOf('m') !== -1;
  } else {
    throw new Error('Expected a regexp or string');
  }

  this.tokens = ret(regexp);
};


// When a repetitional token has its max set to Infinite,
// randexp won't actually generate a random amount between min and Infinite
// instead it will see Infinite as min + 100.
RandExp.prototype.max = 100;


// Generates the random string.
RandExp.prototype.gen = function() {
  return gen.call(this, this.tokens, []);
};


// Enables use of randexp with a shorter call.
RandExp.randexp = function(regexp, m) {
  var randexp;

  if (regexp._randexp === undefined) {
    randexp = new RandExp(regexp, m);
    regexp._randexp = randexp;
  } else {
    randexp = regexp._randexp;
    if (typeof regexp.max === 'number') {
      randexp.max = regexp.max;
    }
    if (regexp.defaultRange instanceof DRange) {
      randexp.defaultRange = regexp.defaultRange;
    }
    if (typeof regexp.randInt === 'function') {
      randexp.randInt = regexp.randInt;
    }
  }

  return randexp.gen();
};


// This enables sugary /regexp/.gen syntax.
RandExp.sugar = function() {
  /* jshint freeze:false */
  RegExp.prototype.gen = function() {
    return RandExp.randexp(this);
  };
};

// This allows expanding to include additional characters
// for instance: RandExp.defaultRange.add(0, 65535);
RandExp.prototype.defaultRange = new DRange(32, 126);






/**
 * Randomly generates and returns a number between a and b (inclusive).
 *
 * @param {Number} a
 * @param {Number} b
 * @return {Number}
 */
RandExp.prototype.randInt = function(a, b) {
  return a + Math.floor(Math.random() * (1 + b - a));
};


/**
 * Generate random string modeled after given tokens.
 *
 * @param {Object} token
 * @param {Array.<String>} groups
 * @return {String}
 */
function gen(token, groups) {
  var stack, str, n, i, l;

  switch (token.type) {


    case types.ROOT:
    case types.GROUP:
      if (token.notFollowedBy) { return ''; }

      // Insert placeholder until group string is generated.
      if (token.remember && token.groupNumber === undefined) {
        token.groupNumber = groups.push(null) - 1;
      }

      stack = token.options ? randSelect.call(this, token.options) : token.stack;

      str = '';
      for (i = 0, l = stack.length; i < l; i++) {
        str += gen.call(this, stack[i], groups);
      }

      if (token.remember) {
        groups[token.groupNumber] = str;
      }
      return str;


    case types.POSITION:
      // Do nothing for now.
      return '';


    case types.SET:

      var expanded_set = expand.call(this, token);
      if (!expanded_set.length) return '';
      return char.call(this, randSelect.call(this, expanded_set), this.ignoreCase);

    case types.RANGE:
      return char.call(this, this.randInt(token.from, token.to), this.ignoreCase);


    case types.REPETITION:
      // Randomly generate number between min and max.
      n = this.randInt(token.min,
              token.max === Infinity ? token.min + this.max : token.max);

      str = '';
      for (i = 0; i < n; i++) {
        str += gen.call(this, token.value, groups);
      }

      return str;


    case types.REFERENCE:
      return groups[token.value - 1] || '';


    case types.CHAR:
      return char.call(this, token.value, this.ignoreCase);
  }
}



},{"discontinuous-range":957,"ret":958}],957:[function(require,module,exports){
//protected helper class
function _SubRange(low, high) {
    this.low = low;
    this.high = high;
    this.length = 1 + high - low;
}

_SubRange.prototype.overlaps = function (range) {
    return !(this.high < range.low || this.low > range.high);
};

_SubRange.prototype.touches = function (range) {
    return !(this.high + 1 < range.low || this.low - 1 > range.high);
};

//returns inclusive combination of _SubRanges as a _SubRange
_SubRange.prototype.add = function (range) {
    return this.touches(range) && new _SubRange(Math.min(this.low, range.low), Math.max(this.high, range.high));
};

//returns subtraction of _SubRanges as an array of _SubRanges (there's a case where subtraction divides it in 2)
_SubRange.prototype.subtract = function (range) {
    if (!this.overlaps(range)) return false;
    if (range.low <= this.low && range.high >= this.high) return [];
    if (range.low > this.low && range.high < this.high) return [new _SubRange(this.low, range.low - 1), new _SubRange(range.high + 1, this.high)];
    if (range.low <= this.low) return [new _SubRange(range.high + 1, this.high)];
    return [new _SubRange(this.low, range.low - 1)];
};

_SubRange.prototype.toString = function () {
    if (this.low == this.high) return this.low.toString();
    return this.low + '-' + this.high;
};

_SubRange.prototype.clone = function () {
    return new _SubRange(this.low, this.high);
};




function DiscontinuousRange(a, b) {
    if (this instanceof DiscontinuousRange) {
        this.ranges = [];
        this.length = 0;
        if (a !== undefined) this.add(a, b);
    } else {
        return new DiscontinuousRange(a, b);
    }
}

function _update_length(self) {
    self.length = self.ranges.reduce(function (previous, range) {return previous + range.length}, 0);
}

DiscontinuousRange.prototype.add = function (a, b) {
    var self = this;
    function _add(subrange) {
        var new_ranges = [];
        var i = 0;
        while (i < self.ranges.length && !subrange.touches(self.ranges[i])) {
            new_ranges.push(self.ranges[i].clone());
            i++;
        }
        while (i < self.ranges.length && subrange.touches(self.ranges[i])) {
            subrange = subrange.add(self.ranges[i]);
            i++;
        }
        new_ranges.push(subrange);
        while (i < self.ranges.length) {
            new_ranges.push(self.ranges[i].clone());
            i++;
        }
        self.ranges = new_ranges;
        _update_length(self);
    }

    if (a instanceof DiscontinuousRange) {
        a.ranges.forEach(_add);
    } else {
        if (a instanceof _SubRange) {
            _add(a);
        } else {
            if (b === undefined) b = a;
            _add(new _SubRange(a, b));
        }
    }
    return this;
};

DiscontinuousRange.prototype.subtract = function (a, b) {
    var self = this;
    function _subtract(subrange) {
        var new_ranges = [];
        var i = 0;
        while (i < self.ranges.length && !subrange.overlaps(self.ranges[i])) {
            new_ranges.push(self.ranges[i].clone());
            i++;
        }
        while (i < self.ranges.length && subrange.overlaps(self.ranges[i])) {
            new_ranges = new_ranges.concat(self.ranges[i].subtract(subrange));
            i++;
        }
        while (i < self.ranges.length) {
            new_ranges.push(self.ranges[i].clone());
            i++;
        }
        self.ranges = new_ranges;
        _update_length(self);
    }
    if (a instanceof DiscontinuousRange) {
        a.ranges.forEach(_subtract);
    } else {
        if (a instanceof _SubRange) {
            _subtract(a);
        } else {
            if (b === undefined) b = a;
            _subtract(new _SubRange(a, b));
        }
    }
    return this;
};


DiscontinuousRange.prototype.index = function (index) {
    var i = 0;
    while (i < this.ranges.length && this.ranges[i].length <= index) {
        index -= this.ranges[i].length;
        i++;
    }
    if (i >= this.ranges.length) return null;
    return this.ranges[i].low + index;
};


DiscontinuousRange.prototype.toString = function () {
    return '[ ' + this.ranges.join(', ') + ' ]'
};

DiscontinuousRange.prototype.clone = function () {
    return new DiscontinuousRange(this);
};

module.exports = DiscontinuousRange;

},{}],958:[function(require,module,exports){
var util      = require('./util');
var types     = require('./types');
var sets      = require('./sets');
var positions = require('./positions');


module.exports = function(regexpStr) {
  var i = 0, l, c,
      start = { type: types.ROOT, stack: []},

      // Keep track of last clause/group and stack.
      lastGroup = start,
      last = start.stack,
      groupStack = [];


  var repeatErr = function(i) {
    util.error(regexpStr, 'Nothing to repeat at column ' + (i - 1));
  };

  // Decode a few escaped characters.
  var str = util.strToChars(regexpStr);
  l = str.length;

  // Iterate through each character in string.
  while (i < l) {
    c = str[i++];

    switch (c) {
      // Handle escaped characters, inclues a few sets.
      case '\\':
        c = str[i++];

        switch (c) {
          case 'b':
            last.push(positions.wordBoundary());
            break;

          case 'B':
            last.push(positions.nonWordBoundary());
            break;

          case 'w':
            last.push(sets.words());
            break;

          case 'W':
            last.push(sets.notWords());
            break;

          case 'd':
            last.push(sets.ints());
            break;

          case 'D':
            last.push(sets.notInts());
            break;

          case 's':
            last.push(sets.whitespace());
            break;

          case 'S':
            last.push(sets.notWhitespace());
            break;

          default:
            // Check if c is integer.
            // In which case it's a reference.
            if (/\d/.test(c)) {
              last.push({ type: types.REFERENCE, value: parseInt(c, 10) });

            // Escaped character.
            } else {
              last.push({ type: types.CHAR, value: c.charCodeAt(0) });
            }
        }

        break;


      // Positionals.
      case '^':
          last.push(positions.begin());
        break;

      case '$':
          last.push(positions.end());
        break;


      // Handle custom sets.
      case '[':
        // Check if this class is 'anti' i.e. [^abc].
        var not;
        if (str[i] === '^') {
          not = true;
          i++;
        } else {
          not = false;
        }

        // Get all the characters in class.
        var classTokens = util.tokenizeClass(str.slice(i), regexpStr);

        // Increase index by length of class.
        i += classTokens[1];
        last.push({
            type: types.SET
          , set: classTokens[0]
          , not: not
        });

        break;


      // Class of any character except \n.
      case '.':
        last.push(sets.anyChar());
        break;


      // Push group onto stack.
      case '(':
        // Create group.
        var group = {
            type: types.GROUP
          , stack: []
          , remember: true
        };

        c = str[i];

        // if if this is a special kind of group.
        if (c === '?') {
          c = str[i + 1];
          i += 2;

          // Match if followed by.
          if (c === '=') {
            group.followedBy = true;

          // Match if not followed by.
          } else if (c === '!') {
            group.notFollowedBy = true;

          } else if (c !== ':') {
            util.error(regexpStr,
                'Invalid group, character \'' + c + '\' after \'?\' at column ' +
                (i - 1));
          }

          group.remember = false;
        }

        // Insert subgroup into current group stack.
        last.push(group);

        // Remember the current group for when the group closes.
        groupStack.push(lastGroup);

        // Make this new group the current group.
        lastGroup = group;
        last = group.stack;
        break;


      // Pop group out of stack.
      case ')':
        if (groupStack.length === 0) {
          util.error(regexpStr, 'Unmatched ) at column ' + (i - 1));
        }
        lastGroup = groupStack.pop();

        // Check if this group has a PIPE.
        // To get back the correct last stack.
        last = lastGroup.options ? lastGroup.options[lastGroup.options.length - 1] : lastGroup.stack;
        break;


      // Use pipe character to give more choices.
      case '|':
        // Create array where options are if this is the first PIPE
        // in this clause.
        if (!lastGroup.options) {
          lastGroup.options = [lastGroup.stack];
          delete lastGroup.stack;
        }

        // Create a new stack and add to options for rest of clause.
        var stack = [];
        lastGroup.options.push(stack);
        last = stack;
        break;


      // Repetition.
      // For every repetition, remove last element from last stack
      // then insert back a RANGE object.
      // This design is chosen because there could be more than
      // one repetition symbols in a regex i.e. `a?+{2,3}`.
      case '{':
        var rs = /^(\d+)(,(\d+)?)?\}/.exec(str.slice(i)), min, max;
        if (rs !== null) {
          min = parseInt(rs[1], 10);
          max = rs[2] ? rs[3] ? parseInt(rs[3], 10) : Infinity : min;
          i += rs[0].length;

          last.push({
              type: types.REPETITION
            , min: min
            , max: max
            , value: last.pop()
          });
        } else {
          last.push({
              type: types.CHAR
            , value: 123
          });
        }
        break;

      case '?':
        if (last.length === 0) {
          repeatErr(i);
        }
        last.push({
            type: types.REPETITION
          , min: 0
          , max: 1
          , value: last.pop()
        });
        break;

      case '+':
        if (last.length === 0) {
          repeatErr(i);
        }
        last.push({
            type: types.REPETITION
          , min: 1
          , max: Infinity
          , value: last.pop()
        });
        break;

      case '*':
        if (last.length === 0) {
          repeatErr(i);
        }
        last.push({
            type: types.REPETITION
          , min: 0
          , max: Infinity
          , value: last.pop()
        });
        break;


      // Default is a character that is not `\[](){}?+*^$`.
      default:
        last.push({
            type: types.CHAR
          , value: c.charCodeAt(0)
        });
    }

  }

  // Check if any groups have not been closed.
  if (groupStack.length !== 0) {
    util.error(regexpStr, 'Unterminated group');
  }

  return start;
};

module.exports.types = types;

},{"./positions":959,"./sets":960,"./types":961,"./util":962}],959:[function(require,module,exports){
var types = require('./types');

exports.wordBoundary = function() {
  return { type: types.POSITION, value: 'b' };
};

exports.nonWordBoundary = function() {
  return { type: types.POSITION, value: 'B' };
};

exports.begin = function() {
  return { type: types.POSITION, value: '^' };
};

exports.end = function() {
  return { type: types.POSITION, value: '$' };
};

},{"./types":961}],960:[function(require,module,exports){
var types = require('./types');

var INTS = function() {
 return [{ type: types.RANGE , from: 48, to: 57 }];
};

var WORDS = function() {
 return [
      { type: types.CHAR, value: 95 }
    , { type: types.RANGE, from: 97, to: 122 }
    , { type: types.RANGE, from: 65, to: 90 }
  ].concat(INTS());
};

var WHITESPACE = function() {
 return [
      { type: types.CHAR, value: 9 }
    , { type: types.CHAR, value: 10 }
    , { type: types.CHAR, value: 11 }
    , { type: types.CHAR, value: 12 }
    , { type: types.CHAR, value: 13 }
    , { type: types.CHAR, value: 32 }
    , { type: types.CHAR, value: 160 }
    , { type: types.CHAR, value: 5760 }
    , { type: types.CHAR, value: 6158 }
    , { type: types.CHAR, value: 8192 }
    , { type: types.CHAR, value: 8193 }
    , { type: types.CHAR, value: 8194 }
    , { type: types.CHAR, value: 8195 }
    , { type: types.CHAR, value: 8196 }
    , { type: types.CHAR, value: 8197 }
    , { type: types.CHAR, value: 8198 }
    , { type: types.CHAR, value: 8199 }
    , { type: types.CHAR, value: 8200 }
    , { type: types.CHAR, value: 8201 }
    , { type: types.CHAR, value: 8202 }
    , { type: types.CHAR, value: 8232 }
    , { type: types.CHAR, value: 8233 }
    , { type: types.CHAR, value: 8239 }
    , { type: types.CHAR, value: 8287 }
    , { type: types.CHAR, value: 12288 }
    , { type: types.CHAR, value: 65279 }
  ];
};

var NOTANYCHAR = function() {
 return [
      { type: types.CHAR, value: 10 }
    , { type: types.CHAR, value: 13 }
    , { type: types.CHAR, value: 8232 }
    , { type: types.CHAR, value: 8233 }
  ];
};

// predefined class objects
exports.words = function() {
  return { type: types.SET, set: WORDS(), not: false };
};

exports.notWords = function() {
  return { type: types.SET, set: WORDS(), not: true };
};

exports.ints = function() {
  return { type: types.SET, set: INTS(), not: false };
};

exports.notInts = function() {
  return { type: types.SET, set: INTS(), not: true };
};

exports.whitespace = function() {
  return { type: types.SET, set: WHITESPACE(), not: false };
};

exports.notWhitespace = function() {
  return { type: types.SET, set: WHITESPACE(), not: true };
};

exports.anyChar = function() {
  return { type: types.SET, set: NOTANYCHAR(), not: true };
};

},{"./types":961}],961:[function(require,module,exports){
module.exports = {
    ROOT       : 0
  , GROUP      : 1
  , POSITION   : 2
  , SET        : 3
  , RANGE      : 4
  , REPETITION : 5
  , REFERENCE  : 6
  , CHAR       : 7
};

},{}],962:[function(require,module,exports){
var types = require('./types');
var sets  = require('./sets');


// All of these are private and only used by randexp.
// It's assumed that they will always be called with the correct input.

var CTRL = '@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^ ?';
var SLSH = { '0': 0, 't': 9, 'n': 10, 'v': 11, 'f': 12, 'r': 13 };

/**
 * Finds character representations in str and convert all to
 * their respective characters
 *
 * @param {String} str
 * @return {String}
 */
exports.strToChars = function(str) {
  var chars_regex = /(\[\\b\])|\\(?:u([A-F0-9]{4})|x([A-F0-9]{2})|(0?[0-7]{2})|c([@A-Z\[\\\]\^?])|([0tnvfr]))/g;
  str = str.replace(chars_regex, function(s, b, a16, b16, c8, dctrl, eslsh) {
    var code = b     ? 8 :
               a16   ? parseInt(a16, 16) :
               b16   ? parseInt(b16, 16) :
               c8    ? parseInt(c8,   8) :
               dctrl ? CTRL.indexOf(dctrl) :
               eslsh ? SLSH[eslsh] : undefined;
    
    var c = String.fromCharCode(code);

    // Escape special regex characters.
    if (/[\[\]{}\^$.|?*+()]/.test(c)) {
      c = '\\' + c;
    }

    return c;
  });

  return str;
};


/**
 * turns class into tokens
 * reads str until it encounters a ] not preceeded by a \
 *
 * @param {String} str
 * @param {String} regexpStr
 * @return {Array.<Array.<Object>, Number>}
 */
exports.tokenizeClass = function(str, regexpStr) {
  var tokens = []
    , regexp = /\\(?:(w)|(d)|(s)|(W)|(D)|(S))|((?:(?:\\)(.)|([^\]\\]))-(?:\\)?([^\]]))|(\])|(?:\\)?(.)/g
    , rs, c
    ;


  while ((rs = regexp.exec(str)) != null) {
    if (rs[1]) {
      tokens.push(sets.words());

    } else if (rs[2]) {
      tokens.push(sets.ints());

    } else if (rs[3]) {
      tokens.push(sets.whitespace());

    } else if (rs[4]) {
      tokens.push(sets.notWords());

    } else if (rs[5]) {
      tokens.push(sets.notInts());

    } else if (rs[6]) {
      tokens.push(sets.notWhitespace());

    } else if (rs[7]) {
      tokens.push({
          type: types.RANGE
        , from: (rs[8] || rs[9]).charCodeAt(0)
        ,   to: rs[10].charCodeAt(0)
      });

    } else if (c = rs[12]) {
      tokens.push({
          type: types.CHAR
        , value: c.charCodeAt(0)
      });

    } else {
      return [tokens, regexp.lastIndex];
    }
  }

  exports.error(regexpStr, 'Unterminated character class');
};


/**
 * Shortcut to throw errors.
 *
 * @param {String} regexp
 * @param {String} msg
 */
exports.error = function(regexp, msg) {
  throw new SyntaxError('Invalid regular expression: /' + regexp + '/: ' + msg);
};

},{"./sets":960,"./types":961}]},{},[1])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
